swagger: '2.0'
info:
  version: 1.0.0
  title: SOL005 - NS Lifecycle Management Interface
  description: >
    SOL005 - NS Lifecycle Management Interface IMPORTANT: Please note that this
    file might be not aligned to the current version of the ETSI Group
    Specification it refers to and has not been approved by the ETSI NFV ISG. In
    case of discrepancies the published ETSI Group Specification takes
    precedence. Please report bugs to
    https://forge.etsi.org/bugzilla/buglist.cgi?component=Nfv-Openapis
  license:
    name: ETSI Forge copyright notice
    url: 'https://forge.etsi.org/etsi-forge-copyright-notice.txt'
  contact:
    name: NFV-SOL WG
externalDocs:
  description: ETSI GS NFV-SOL 005 V2.4.1
  url: >-
    http://www.etsi.org/deliver/etsi_gs/NFV-SOL/001_099/005/02.04.01_60/gs_NFV-SOL005v020401p.pdf
basePath: /nslcm/v1
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /ns_instances:
    post:
      summary: Create a NS instance resource.
      description: |
        The POST method creates a new NS instance resource.
      parameters:
        - name: Accept
          description: >
            Content-Types that are acceptable for the response. Reference: IETF
            RFC 7231
          in: header
          required: true
          type: string
        - name: Authorization
          description: |
            The authorization token for the request. Reference: IETF RFC 7235
          in: header
          required: false
          type: string
        - name: Content-Type
          description: |
            The MIME type of the body of the request. Reference: IETF RFC 7231
          in: header
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - CreateNsRequest
            properties:
              CreateNsRequest:
                type: object
                required:
                  - nsdId
                  - nsName
                  - nsDescription
                properties:
                  nsdId:
                    description: |
                      An identifier with the intention of being globally unique.
                    type: string
                  nsName:
                    description: |
                      Human-readable name of the NS instance to be created.
                    type: string
                  nsDescription:
                    description: >
                      Human-readable description of the NS instance to be
                      created.
                    type: string
            description: |
              The NS creation parameters, as defined in clause 6.5.2.7. 
      responses:
        '201':
          description: >
            201 Created

            A NS Instance identifier was created successfully. The response body
            shall contain a representation of the created NS instance, as
            defined in clause 6.5.2.8. The HTTP response shall include a
            "Location" HTTP header that contains the resource URI of the created
            NS instance.
          schema:
            type: object
            properties:
              NsInstance:
                description: >
                  This type represents a response for Query NS operation.  It
                  shall comply with the provisions defined in Table 6.5.2.10-1.
                type: object
                required:
                  - id
                  - nsInstanceName
                  - nsInstanceDescription
                  - nsdId
                  - nsdInfoId
                  - nsState
                properties:
                  id:
                    description: |
                      An identifier with the intention of being globally unique.
                    type: string
                  nsInstanceName:
                    description: |
                      Human readable name of the NS instance.
                    type: string
                  nsInstanceDescription:
                    description: |
                      Human readable description of the NS instance.
                    type: string
                  nsdId:
                    description: |
                      An identifier with the intention of being globally unique.
                    type: string
                  nsdInfoId:
                    description: |
                      An identifier with the intention of being globally unique.
                    type: string
                  flavourId:
                    description: >
                      An identifier that is unique within a NS descriptor.
                      Representation: string of variable length.
                    type: string
                  vnfInstance:
                    description: |
                      Information on constituent VNF(s) of the NS instance.
                    type: array
                    items:
                      description: |
                        This type represents a VNF instance.
                      type: object
                      required:
                        - id
                        - vnfdId
                        - vnfProvider
                        - vnfProductName
                        - vnfSoftwareVersion
                        - vnfdVersion
                        - vnfPkgId
                        - instantiationState
                      properties:
                        id:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        vnfInstanceName:
                          description: >
                            Name of the VNF instance. This attribute can be
                            modified with the PATCH method.
                          type: string
                        vnfInstanceDescription:
                          description: >
                            Human-readable description of the VNF instance. This
                            attribute can be modified with the PATCH method.
                          type: string
                        vnfdId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        vnfProvider:
                          description: >
                            Provider of the VNF and the VNFD. The value is
                            copied from the VNFD.
                          type: string
                        vnfProductName:
                          description: >
                            Name to identify the VNF Product. The value is
                            copied from the VNFD.
                          type: string
                        vnfSoftwareVersion:
                          description: |
                            A Version.
                          type: string
                        vnfdVersion:
                          description: |
                            A Version.
                          type: string
                        vnfPkgId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        vnfConfigurableProperties:
                          description: >
                            This type represents a list of key-value pairs. The
                            order of the pairs in the list is not significant.
                            In JSON, a set of key- value pairs is represented as
                            an object. It shall comply with the provisions 
                            defined in clause 4 of IETF RFC 7159. 
                          type: object
                        vimId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        instantiationState:
                          description: |
                            The instantiation state of the VNF.
                          type: string
                          enum:
                            - NOT_INSTANTIATED
                            - INSTANTIATED
                        instantiatedVnfInfo:
                          description: >
                            Information specific to an instantiated VNF
                            instance. This attribute shall be present if the
                            instantiateState attribute value is INSTANTIATED.
                          type: object
                          required:
                            - flavourId
                            - vnfState
                          properties:
                            flavourId:
                              description: >
                                Identifier of the VNF Virtual Link Descriptor
                                (VLD) in the VNFD.
                              type: string
                            vnfState:
                              type: string
                              enum:
                                - STARTED
                                - STOPPED
                            scaleStatus:
                              description: >
                                Scale status of the VNF, one entry per aspect.
                                Represents for every scaling aspect how "big"
                                the VNF has been scaled w.r.t. that aspect.
                              type: array
                              items:
                                required:
                                  - aspectId
                                  - scaleLevel
                                type: object
                                properties:
                                  aspectId:
                                    description: >
                                      Identifier of the VNF Virtual Link
                                      Descriptor (VLD) in the VNFD.
                                    type: string
                                  scaleLevel:
                                    description: >
                                      Indicates the scale level. The minimum
                                      value shall be 0 and the maximum value
                                      shall be <= maxScaleLevel as described in
                                      the VNFD.
                                    type: integer
                            extCpInfo:
                              description: >
                                Information about the external CPs exposed by
                                the VNF instance.
                              type: array
                              minItems: 1
                              items:
                                type: object
                                required:
                                  - id
                                  - cpdId
                                properties:
                                  id:
                                    description: >
                                      An identifier that is unique for the
                                      respective type within a VNF instance, but
                                      may not be globally unique.
                                    type: string
                                  cpdId:
                                    description: >
                                      Identifier of the VNF Virtual Link
                                      Descriptor (VLD) in the VNFD.
                                    type: string
                                  cpProtocolInfo:
                                    description: |
                                      Network protocol information for this CP.
                                    type: array
                                    items:
                                      description: >
                                        This type describes the protocol
                                        layer(s) that a CP or SAP uses together
                                        with protocol-related information, like
                                        addresses. It shall comply with the
                                        provisions defined in Table 6.5.3.58-1.
                                      type: object
                                      required:
                                        - layerProtocol
                                        - ipOverEthernet
                                      properties:
                                        layerProtocol:
                                          description: >
                                            The identifier of layer(s) and
                                            protocol(s) associated to the network
                                            address information. Permitted values:
                                            IP_OVER_ETHERNET See note.
                                          type: string
                                          enum:
                                            - IP_OVER_ETHERNET
                                        ipOverEthernet:
                                          description: >
                                            This type represents information about a
                                            network address that has been assigned. 
                                            It shall comply with the provisions
                                            defined in Table 6.5.3.18-1.
                                          type: object
                                          required:
                                            - macAddress
                                            - ipAddresses
                                            - subnetId
                                            - addresses
                                            - addressRange
                                          properties:
                                            macAddress:
                                              description: >
                                                A MAC address. Representation: string
                                                that consists of groups of two
                                                hexadecimal digits, separated by hyphens
                                                or colons.
                                              type: string
                                              format: MAC
                                            ipAddresses:
                                              description: >
                                                Addresses assigned to the CP instance.
                                                Each entry represents IP addresses
                                                assigned by fixed or dynamic IP address
                                                assignment per subnet.
                                              type: array
                                              items:
                                                type: object
                                                required:
                                                  - type
                                                properties:
                                                  type:
                                                    description: >
                                                      The type of the IP addresses. Permitted
                                                      values: IPV4, IPV6.
                                                    type: string
                                                    enum:
                                                      - IPV4
                                                      - IPV6
                                                  addresses:
                                                    description: >
                                                      Fixed addresses assigned (from the
                                                      subnet defined by "subnetId" if
                                                      provided).
                                                    type: array
                                                    items:
                                                      description: >
                                                        An IPV4 or IPV6 address. Representation:
                                                        In case of an IPV4 address, string that
                                                        consists of four decimal integers
                                                        separated by dots, each integer ranging
                                                        from 0 to 255. In case of an IPV6
                                                        address, string that  consists of groups
                                                        of zero to four hexadecimal digits,
                                                        separated by colons.
                                                      type: string
                                                      format: IP
                                                  isDynamic:
                                                    description: >
                                                      Indicates whether this set of addresses
                                                      was assigned dynamically (true) or based
                                                      on address information provided as input
                                                      from the API consumer (false). Shall be
                                                      present if "addresses" is present and
                                                      shall be absent otherwise.
                                                    type: boolean
                                                  addressRange:
                                                    description: >
                                                      An IP address range used, e.g., in case
                                                      of egress connections. Exactly one of
                                                      "addresses" or "addressRange" shall be
                                                      present.
                                                    type: object
                                                    required:
                                                      - minAddress
                                                      - maxAddress
                                                    properties:
                                                      minAddress:
                                                        description: >
                                                          An IPV4 or IPV6 address. Representation:
                                                          In case of an IPV4 address, string that
                                                          consists of four decimal integers
                                                          separated by dots, each integer ranging
                                                          from 0 to 255. In case of an IPV6
                                                          address, string that  consists of groups
                                                          of zero to four hexadecimal digits,
                                                          separated by colons.
                                                        type: string
                                                        format: IP
                                                      maxAddress:
                                                        description: >
                                                          An IPV4 or IPV6 address. Representation:
                                                          In case of an IPV4 address, string that
                                                          consists of four decimal integers
                                                          separated by dots, each integer ranging
                                                          from 0 to 255. In case of an IPV6
                                                          address, string that  consists of groups
                                                          of zero to four hexadecimal digits,
                                                          separated by colons.
                                                        type: string
                                                        format: IP
                                                  subnetId:
                                                    description: >
                                                      An identifier maintained by the VIM or
                                                      other resource provider. It is expected
                                                      to be unique within the VIM instance.
                                                    type: string
                                            type:
                                              description: |
                                                The type of the IP addresses
                                              type: string
                                              enum:
                                                - PV4
                                                - PV6
                                            addresses:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                            isDynamic:
                                              description: >
                                                Indicates whether this set of addresses
                                                was assigned dynamically (true) or based
                                                on address information provided as input
                                                from the API consumer (false). Shall be
                                                present if "addresses" is present and
                                                shall be absent otherwise.
                                              type: boolean
                                            addressRange:
                                              description: >
                                                An IP address range used, e.g. in case
                                                of egress connections. See note.
                                              type: object
                                              required:
                                                - minAddress
                                                - maxAddress
                                              properties:
                                                minAddress:
                                                  description: >
                                                    An IPV4 or IPV6 address. Representation:
                                                    In case of an IPV4 address, string that
                                                    consists of four decimal integers
                                                    separated by dots, each integer ranging
                                                    from 0 to 255. In case of an IPV6
                                                    address, string that  consists of groups
                                                    of zero to four hexadecimal digits,
                                                    separated by colons.
                                                  type: string
                                                  format: IP
                                                maxAddress:
                                                  description: >
                                                    An IPV4 or IPV6 address. Representation:
                                                    In case of an IPV4 address, string that
                                                    consists of four decimal integers
                                                    separated by dots, each integer ranging
                                                    from 0 to 255. In case of an IPV6
                                                    address, string that  consists of groups
                                                    of zero to four hexadecimal digits,
                                                    separated by colons.
                                                  type: string
                                                  format: IP
                                            minAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                            maxAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                            subnetId:
                                              description: >
                                                An identifier maintained by the VIM or
                                                other resource provider. It is expected
                                                to be unique within the VIM instance.
                                              type: string
                                  extLinkPortId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                            extVirtualLinkInfo:
                              description: >
                                Information about the external VLs the VNF
                                instance is connected to.
                              type: array
                              items:
                                type: object
                                required:
                                  - id
                                  - resourceHandle
                                properties:
                                  id:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceHandle:
                                    required:
                                      - vimConnectionId
                                      - resourceId
                                    type: object
                                    description: >
                                      This type represents the information that
                                      allows addressing a virtualised resource
                                      that is used by a VNF instance.
                                      Information about the resource is
                                      available from the VIM.
                                    properties:
                                      vimConnectionId:
                                        description: >
                                          An identifier with the intention of
                                          being globally unique.
                                        type: string
                                      resourceProviderId:
                                        description: >
                                          An identifier with the intention of
                                          being globally unique.
                                        type: string
                                      resourceId:
                                        description: >
                                          An identifier maintained by the VIM or
                                          other resource provider. It is expected
                                          to be unique within the VIM instance.
                                        type: string
                                      vimLevelResourceType:
                                        description: >
                                          Type of the resource in the scope of the
                                          VIM or the resource provider.
                                        type: string
                                  extLinkPorts:
                                    description: |
                                      Link ports of this VL.
                                    type: array
                                    items:
                                      description: >
                                        This type represents information about a
                                        link port of an external VL, i.e. a port
                                        providing connectivity for the VNF to an
                                        NS VL. 
                                      type: object
                                      required:
                                        - id
                                        - resourceHandle
                                      properties:
                                        id:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceHandle:
                                          required:
                                            - vimConnectionId
                                            - resourceId
                                          type: object
                                          description: >
                                            This type represents the information
                                            that allows addressing a virtualised
                                            resource that is used by a VNF instance.
                                            Information about the resource is
                                            available from the VIM.
                                          properties:
                                            vimConnectionId:
                                              description: >
                                                An identifier with the intention of
                                                being globally unique.
                                              type: string
                                            resourceProviderId:
                                              description: >
                                                An identifier with the intention of
                                                being globally unique.
                                              type: string
                                            resourceId:
                                              description: >
                                                An identifier maintained by the VIM or
                                                other resource provider. It is expected
                                                to be unique within the VIM instance.
                                              type: string
                                            vimLevelResourceType:
                                              description: >
                                                Type of the resource in the scope of the
                                                VIM or the resource provider.
                                              type: string
                                        cpInstanceId:
                                          description: >
                                            An identifier that is unique for the
                                            respective type within a VNF instance,
                                            but may not be globally unique.
                                          type: string
                            extManagedVirtualLinkInfo:
                              description: >
                                External virtual links the VNF instance is
                                connected to.
                              type: array
                              items:
                                type: object
                                required:
                                  - id
                                  - vnfVirtualLinkDescId
                                properties:
                                  id:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  vnfVirtualLinkDescId:
                                    description: >
                                      Identifier of the VNF Virtual Link
                                      Descriptor (VLD) in the VNFD.
                                    type: string
                                  networkResource:
                                    required:
                                      - vimConnectionId
                                      - resourceId
                                    type: object
                                    description: >
                                      This type represents the information that
                                      allows addressing a virtualised resource
                                      that is used by a VNF instance.
                                      Information about the resource is
                                      available from the VIM.
                                    properties:
                                      vimConnectionId:
                                        description: >
                                          An identifier with the intention of
                                          being globally unique.
                                        type: string
                                      resourceProviderId:
                                        description: >
                                          An identifier with the intention of
                                          being globally unique.
                                        type: string
                                      resourceId:
                                        description: >
                                          An identifier maintained by the VIM or
                                          other resource provider. It is expected
                                          to be unique within the VIM instance.
                                        type: string
                                      vimLevelResourceType:
                                        description: >
                                          Type of the resource in the scope of the
                                          VIM or the resource provider.
                                        type: string
                                  vnfLinkPorts:
                                    description: |
                                      Link ports of this VL.
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - id
                                        - resourceHandle
                                      properties:
                                        id:
                                          description: >
                                            An identifier that is unique for the
                                            respective type within a VNF instance,
                                            but may not be globally unique.
                                          type: string
                                        resourceHandle:
                                          required:
                                            - vimConnectionId
                                            - resourceId
                                          type: object
                                          description: >
                                            This type represents the information
                                            that allows addressing a virtualised
                                            resource that is used by a VNF instance.
                                            Information about the resource is
                                            available from the VIM.
                                          properties:
                                            vimConnectionId:
                                              description: >
                                                An identifier with the intention of
                                                being globally unique.
                                              type: string
                                            resourceProviderId:
                                              description: >
                                                An identifier with the intention of
                                                being globally unique.
                                              type: string
                                            resourceId:
                                              description: >
                                                An identifier maintained by the VIM or
                                                other resource provider. It is expected
                                                to be unique within the VIM instance.
                                              type: string
                                            vimLevelResourceType:
                                              description: >
                                                Type of the resource in the scope of the
                                                VIM or the resource provider.
                                              type: string
                                        cpInstanceId:
                                          description: >
                                            An identifier that is unique for the
                                            respective type within a VNF instance,
                                            but may not be globally unique.
                                          type: string
                            monitoringParameters:
                              description: |
                                Active monitoring parameters.
                              type: array
                              items:
                                type: object
                                required:
                                  - id
                                  - value
                                  - timeStamp
                                properties:
                                  id:
                                    description: >
                                      Identifier of the VNF Virtual Link
                                      Descriptor (VLD) in the VNFD.
                                    type: string
                                  name:
                                    description: >
                                      Human readable name of the monitoring
                                      parameter, as defined in the VNFD.
                                    type: string
                                  value:
                                    description: >
                                      Value of the monitoring parameter known to
                                      the VNFM (e.g. obtained for auto-scaling
                                      purposes). The type of the "value"
                                      attribute (i.e. scalar, structure (Object
                                      in JSON), or array (of scalars, arrays or
                                      structures/Objects)) is assumed to be
                                      defined in an external measurement
                                      specification.
                                    type: object
                                  timeStamp:
                                    description: >
                                      Represents the point in time when the
                                      measurement has been performed, as known
                                      to the VNFM. Should be formatted according
                                      to ETF RFC 3339.
                                    type: string
                            localizationLanguage:
                              description: >
                                Information about localization language of the
                                VNF (includes e.g. strings in the VNFD). The
                                localization languages supported by a VNF can be
                                declared in the VNFD, and localization language
                                selection can take place at instantiation time.
                                The value shall comply with the format defined
                                in IETF RFC 5646.
                              type: string
                            vnfcResourceInfo:
                              description: >
                                Information about the virtualised compute and
                                storage resources used by the VNFCs of the VNF
                                instance.
                              type: array
                              items:
                                description: >
                                  This type represents the information on
                                  virtualised compute and storage resources used
                                  by a VNFC in a VNF instance.
                                type: object
                                required:
                                  - id
                                  - vduId
                                  - computeResource
                                properties:
                                  id:
                                    description: >
                                      An identifier that is unique for the
                                      respective type within a VNF instance, but
                                      may not be globally unique.
                                    type: string
                                  vduId:
                                    description: >
                                      Identifier of the VNF Virtual Link
                                      Descriptor (VLD) in the VNFD.
                                    type: string
                                  computeResource:
                                    required:
                                      - vimConnectionId
                                      - resourceId
                                    type: object
                                    description: >
                                      This type represents the information that
                                      allows addressing a virtualised resource
                                      that is used by a VNF instance.
                                      Information about the resource is
                                      available from the VIM.
                                    properties:
                                      vimConnectionId:
                                        description: >
                                          An identifier with the intention of
                                          being globally unique.
                                        type: string
                                      resourceProviderId:
                                        description: >
                                          An identifier with the intention of
                                          being globally unique.
                                        type: string
                                      resourceId:
                                        description: >
                                          An identifier maintained by the VIM or
                                          other resource provider. It is expected
                                          to be unique within the VIM instance.
                                        type: string
                                      vimLevelResourceType:
                                        description: >
                                          Type of the resource in the scope of the
                                          VIM or the resource provider.
                                        type: string
                                  storageResourceIds:
                                    description: >
                                      References to the VirtualStorage
                                      resources. The value refers to a
                                      VirtualStorageResourceInfo item in the
                                      VnfInstance.
                                    type: array
                                    items:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                  reservationId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  vnfcCpInfo:
                                    description: >
                                      CPs of the VNFC instance. Shall be present
                                      when that particular CP of the VNFC
                                      instance is associated to an external CP
                                      of the VNF instance. May be present
                                      otherwise.
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - id
                                        - cpdId
                                      properties:
                                        id:
                                          description: >
                                            An identifier that is unique for the
                                            respective type within a VNF instance,
                                            but may not be globally unique.
                                          type: string
                                        cpdId:
                                          description: >
                                            Identifier of the VNF Virtual Link
                                            Descriptor (VLD) in the VNFD.
                                          type: string
                                        vnfExtCpId:
                                          description: >
                                            An identifier that is unique for the
                                            respective type within a VNF instance,
                                            but may not be globally unique.
                                          type: string
                                        cpProtocolInfo:
                                          description: >
                                            Network protocol information for this
                                            CP.
                                          type: array
                                          items:
                                            description: >
                                              This type describes the protocol
                                              layer(s) that a CP or SAP uses together
                                              with protocol-related information, like
                                              addresses. It shall comply with the
                                              provisions defined in Table 6.5.3.58-1.
                                            type: object
                                            required:
                                              - layerProtocol
                                              - ipOverEthernet
                                            properties:
                                              layerProtocol:
                                                description: >
                                                  The identifier of layer(s) and
                                                  protocol(s) associated to the network
                                                  address information. Permitted values:
                                                  IP_OVER_ETHERNET See note.
                                                type: string
                                                enum:
                                                  - IP_OVER_ETHERNET
                                              ipOverEthernet:
                                                description: >
                                                  This type represents information about a
                                                  network address that has been assigned. 
                                                  It shall comply with the provisions
                                                  defined in Table 6.5.3.18-1.
                                                type: object
                                                required:
                                                  - macAddress
                                                  - ipAddresses
                                                  - subnetId
                                                  - addresses
                                                  - addressRange
                                                properties:
                                                  macAddress:
                                                    description: >
                                                      A MAC address. Representation: string
                                                      that consists of groups of two
                                                      hexadecimal digits, separated by hyphens
                                                      or colons.
                                                    type: string
                                                    format: MAC
                                                  ipAddresses:
                                                    description: >
                                                      Addresses assigned to the CP instance.
                                                      Each entry represents IP addresses
                                                      assigned by fixed or dynamic IP address
                                                      assignment per subnet.
                                                    type: array
                                                    items:
                                                      type: object
                                                      required:
                                                        - type
                                                      properties:
                                                        type:
                                                          description: >
                                                            The type of the IP addresses. Permitted
                                                            values: IPV4, IPV6.
                                                          type: string
                                                          enum:
                                                            - IPV4
                                                            - IPV6
                                                        addresses:
                                                          description: >
                                                            Fixed addresses assigned (from the
                                                            subnet defined by "subnetId" if
                                                            provided).
                                                          type: array
                                                          items:
                                                            description: >
                                                              An IPV4 or IPV6 address. Representation:
                                                              In case of an IPV4 address, string that
                                                              consists of four decimal integers
                                                              separated by dots, each integer ranging
                                                              from 0 to 255. In case of an IPV6
                                                              address, string that  consists of groups
                                                              of zero to four hexadecimal digits,
                                                              separated by colons.
                                                            type: string
                                                            format: IP
                                                        isDynamic:
                                                          description: >
                                                            Indicates whether this set of addresses
                                                            was assigned dynamically (true) or based
                                                            on address information provided as input
                                                            from the API consumer (false). Shall be
                                                            present if "addresses" is present and
                                                            shall be absent otherwise.
                                                          type: boolean
                                                        addressRange:
                                                          description: >
                                                            An IP address range used, e.g., in case
                                                            of egress connections. Exactly one of
                                                            "addresses" or "addressRange" shall be
                                                            present.
                                                          type: object
                                                          required:
                                                            - minAddress
                                                            - maxAddress
                                                          properties:
                                                            minAddress:
                                                              description: >
                                                                An IPV4 or IPV6 address. Representation:
                                                                In case of an IPV4 address, string that
                                                                consists of four decimal integers
                                                                separated by dots, each integer ranging
                                                                from 0 to 255. In case of an IPV6
                                                                address, string that  consists of groups
                                                                of zero to four hexadecimal digits,
                                                                separated by colons.
                                                              type: string
                                                              format: IP
                                                            maxAddress:
                                                              description: >
                                                                An IPV4 or IPV6 address. Representation:
                                                                In case of an IPV4 address, string that
                                                                consists of four decimal integers
                                                                separated by dots, each integer ranging
                                                                from 0 to 255. In case of an IPV6
                                                                address, string that  consists of groups
                                                                of zero to four hexadecimal digits,
                                                                separated by colons.
                                                              type: string
                                                              format: IP
                                                        subnetId:
                                                          description: >
                                                            An identifier maintained by the VIM or
                                                            other resource provider. It is expected
                                                            to be unique within the VIM instance.
                                                          type: string
                                                  type:
                                                    description: |
                                                      The type of the IP addresses
                                                    type: string
                                                    enum:
                                                      - PV4
                                                      - PV6
                                                  addresses:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                                  isDynamic:
                                                    description: >
                                                      Indicates whether this set of addresses
                                                      was assigned dynamically (true) or based
                                                      on address information provided as input
                                                      from the API consumer (false). Shall be
                                                      present if "addresses" is present and
                                                      shall be absent otherwise.
                                                    type: boolean
                                                  addressRange:
                                                    description: >
                                                      An IP address range used, e.g. in case
                                                      of egress connections. See note.
                                                    type: object
                                                    required:
                                                      - minAddress
                                                      - maxAddress
                                                    properties:
                                                      minAddress:
                                                        description: >
                                                          An IPV4 or IPV6 address. Representation:
                                                          In case of an IPV4 address, string that
                                                          consists of four decimal integers
                                                          separated by dots, each integer ranging
                                                          from 0 to 255. In case of an IPV6
                                                          address, string that  consists of groups
                                                          of zero to four hexadecimal digits,
                                                          separated by colons.
                                                        type: string
                                                        format: IP
                                                      maxAddress:
                                                        description: >
                                                          An IPV4 or IPV6 address. Representation:
                                                          In case of an IPV4 address, string that
                                                          consists of four decimal integers
                                                          separated by dots, each integer ranging
                                                          from 0 to 255. In case of an IPV6
                                                          address, string that  consists of groups
                                                          of zero to four hexadecimal digits,
                                                          separated by colons.
                                                        type: string
                                                        format: IP
                                                  minAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                                  maxAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                                  subnetId:
                                                    description: >
                                                      An identifier maintained by the VIM or
                                                      other resource provider. It is expected
                                                      to be unique within the VIM instance.
                                                    type: string
                                        vnfLinkPortId:
                                          description: >
                                            An identifier that is unique for the
                                            respective type within a VNF instance,
                                            but may not be globally unique.
                                          type: string
                                  metadata:
                                    description: >
                                      This type represents a list of key-value
                                      pairs. The order of the pairs in the list
                                      is not significant. In JSON, a set of key-
                                      value pairs is represented as an object.
                                      It shall comply with the provisions 
                                      defined in clause 4 of IETF RFC 7159. 
                                    type: object
                            virtualLinkResourceInfo:
                              description: >
                                Information about the virtualised network
                                resources used by the VLs of the VNF instance.
                              type: array
                              items:
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by an internal VL instance in a VNF
                                  instance.
                                type: object
                                required:
                                  - id
                                  - vnfVirtualLinkDescId
                                  - networkResource
                                properties:
                                  id:
                                    description: >
                                      An identifier that is unique for the
                                      respective type within a VNF instance, but
                                      may not be globally unique.
                                    type: string
                                  vnfVirtualLinkDescId:
                                    description: >
                                      Identifier of the VNF Virtual Link
                                      Descriptor (VLD) in the VNFD.
                                    type: string
                                  networkResource:
                                    required:
                                      - vimConnectionId
                                      - resourceId
                                    type: object
                                    description: >
                                      This type represents the information that
                                      allows addressing a virtualised resource
                                      that is used by a VNF instance.
                                      Information about the resource is
                                      available from the VIM.
                                    properties:
                                      vimConnectionId:
                                        description: >
                                          An identifier with the intention of
                                          being globally unique.
                                        type: string
                                      resourceProviderId:
                                        description: >
                                          An identifier with the intention of
                                          being globally unique.
                                        type: string
                                      resourceId:
                                        description: >
                                          An identifier maintained by the VIM or
                                          other resource provider. It is expected
                                          to be unique within the VIM instance.
                                        type: string
                                      vimLevelResourceType:
                                        description: >
                                          Type of the resource in the scope of the
                                          VIM or the resource provider.
                                        type: string
                                  reservationId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  vnfLinkPorts:
                                    description: >
                                      Links ports of this VL. Shall be present
                                      when the linkPort is used for external
                                      connectivity by the VNF (refer to
                                      VnfLinkPortInfo). May be present
                                      otherwise.
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - id
                                        - resourceHandle
                                      properties:
                                        id:
                                          description: >
                                            An identifier that is unique for the
                                            respective type within a VNF instance,
                                            but may not be globally unique.
                                          type: string
                                        resourceHandle:
                                          required:
                                            - vimConnectionId
                                            - resourceId
                                          type: object
                                          description: >
                                            This type represents the information
                                            that allows addressing a virtualised
                                            resource that is used by a VNF instance.
                                            Information about the resource is
                                            available from the VIM.
                                          properties:
                                            vimConnectionId:
                                              description: >
                                                An identifier with the intention of
                                                being globally unique.
                                              type: string
                                            resourceProviderId:
                                              description: >
                                                An identifier with the intention of
                                                being globally unique.
                                              type: string
                                            resourceId:
                                              description: >
                                                An identifier maintained by the VIM or
                                                other resource provider. It is expected
                                                to be unique within the VIM instance.
                                              type: string
                                            vimLevelResourceType:
                                              description: >
                                                Type of the resource in the scope of the
                                                VIM or the resource provider.
                                              type: string
                                        cpInstanceId:
                                          description: >
                                            An identifier that is unique for the
                                            respective type within a VNF instance,
                                            but may not be globally unique.
                                          type: string
                                  metadata:
                                    description: >
                                      This type represents a list of key-value
                                      pairs. The order of the pairs in the list
                                      is not significant. In JSON, a set of key-
                                      value pairs is represented as an object.
                                      It shall comply with the provisions 
                                      defined in clause 4 of IETF RFC 7159. 
                                    type: object
                            virtualStorageResourceInfo:
                              description: >
                                Information on the virtualised storage
                                resource(s) used as storage for the VNF
                                instance.
                              type: array
                              items:
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance.
                                type: object
                                required:
                                  - id
                                  - virtualStorageDescId
                                  - storageResource
                                properties:
                                  id:
                                    description: >
                                      An identifier that is unique for the
                                      respective type within a VNF instance, but
                                      may not be globally unique.
                                    type: string
                                  virtualStorageDescId:
                                    description: >
                                      Identifier of the VNF Virtual Link
                                      Descriptor (VLD) in the VNFD.
                                    type: string
                                  storageResource:
                                    required:
                                      - vimConnectionId
                                      - resourceId
                                    type: object
                                    description: >
                                      This type represents the information that
                                      allows addressing a virtualised resource
                                      that is used by a VNF instance.
                                      Information about the resource is
                                      available from the VIM.
                                    properties:
                                      vimConnectionId:
                                        description: >
                                          An identifier with the intention of
                                          being globally unique.
                                        type: string
                                      resourceProviderId:
                                        description: >
                                          An identifier with the intention of
                                          being globally unique.
                                        type: string
                                      resourceId:
                                        description: >
                                          An identifier maintained by the VIM or
                                          other resource provider. It is expected
                                          to be unique within the VIM instance.
                                        type: string
                                      vimLevelResourceType:
                                        description: >
                                          Type of the resource in the scope of the
                                          VIM or the resource provider.
                                        type: string
                                  reservationId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  metadata:
                                    description: >
                                      This type represents a list of key-value
                                      pairs. The order of the pairs in the list
                                      is not significant. In JSON, a set of key-
                                      value pairs is represented as an object.
                                      It shall comply with the provisions 
                                      defined in clause 4 of IETF RFC 7159. 
                                    type: object
                        metadata:
                          description: >
                            This type represents a list of key-value pairs. The
                            order of the pairs in the list is not significant.
                            In JSON, a set of key- value pairs is represented as
                            an object. It shall comply with the provisions 
                            defined in clause 4 of IETF RFC 7159. 
                          type: object
                        extensions:
                          description: >
                            This type represents a list of key-value pairs. The
                            order of the pairs in the list is not significant.
                            In JSON, a set of key- value pairs is represented as
                            an object. It shall comply with the provisions 
                            defined in clause 4 of IETF RFC 7159. 
                          type: object
                  pnfInfo:
                    description: >
                      Information on the PNF(s) that are part of the NS
                      instance.
                    type: array
                    items:
                      description: >
                        This type represents the information about a PNF that is
                        part of an NS instance.  It shall comply with the
                        provisions defined in Table 6.5.3.13-1.
                      type: object
                      required:
                        - pnfId
                        - pnfdId
                        - pnfdInfoId
                        - pnfProfileId
                      properties:
                        pnfId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        pnfName:
                          description: |
                            Name of the PNF.
                          type: string
                        pnfdId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        pnfdInfoId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        pnfProfileId:
                          description: >
                            An identifier that is unique within a NS descriptor.
                            Representation: string of variable length.
                          type: string
                        cpInfo:
                          description: >
                            This type represents the information about the
                            external CP of the PNF.  It shall comply with the
                            provisions defined in Table 6.5.3.17-1.
                          type: object
                          required:
                            - cpInstanceId
                            - cpdId
                          properties:
                            cpInstanceId:
                              description: |
                                Identifier of the CP in the scope of the PNF.
                              type: string
                            cpdId:
                              description: >
                                An identifier that is unique within a NS
                                descriptor. Representation: string of variable
                                length.
                              type: string
                            cpProtocolData:
                              description: >
                                Parameters for configuring the network protocols
                                on the CP.
                              type: array
                              items:
                                description: |
                                  This type represents network protocol data. 
                                type: object
                                required:
                                  - layerProtocol
                                properties:
                                  layerProtocol:
                                    description: >
                                      Identifier of layer(s) and protocol(s).
                                      Permitted values: IP_OVER_ETHERNET.
                                    type: string
                                    enum:
                                      - IP_OVER_ETHERNET
                                  ipOverEthernet:
                                    description: >
                                      This type represents network address data
                                      for IP over Ethernet.
                                    type: object
                                    properties:
                                      macAddress:
                                        description: >
                                          A MAC address. Representation: string
                                          that consists of groups of two
                                          hexadecimal digits, separated by hyphens
                                          or colons.
                                        type: string
                                        format: MAC
                                      ipAddresses:
                                        description: >
                                          List of IP addresses to assign to the CP
                                          instance. Each entry represents IP
                                          address data for fixed or dynamic IP
                                          address assignment per subnet. If this
                                          attribute is not present, no IP address
                                          shall be assigned.
                                        type: array
                                        items:
                                          type: object
                                          required:
                                            - type
                                          properties:
                                            type:
                                              description: >
                                                The type of the IP addresses. Permitted
                                                values: IPV4, IPV6.
                                              type: string
                                              enum:
                                                - IPV4
                                                - IPV6
                                            fixedAddresses:
                                              description: >
                                                Fixed addresses to assign (from the
                                                subnet defined by "subnetId" if
                                                provided). Exactly one of
                                                "fixedAddresses", "numDynamicAddresses"
                                                or "ipAddressRange" shall be present.
                                              type: array
                                              items:
                                                description: >
                                                  An IPV4 or IPV6 address. Representation:
                                                  In case of an IPV4 address, string that
                                                  consists of four decimal integers
                                                  separated by dots, each integer ranging
                                                  from 0 to 255. In case of an IPV6
                                                  address, string that  consists of groups
                                                  of zero to four hexadecimal digits,
                                                  separated by colons.
                                                type: string
                                                format: IP
                                            numDynamicAddresses:
                                              description: >
                                                Number of dynamic addresses to assign
                                                (from the subnet defined by "subnetId"
                                                if provided). Exactly one of
                                                "fixedAddresses", "numDynamicAddresses"
                                                or "ipAddressRange" shall be present.
                                              type: integer
                                            addressRange:
                                              description: >
                                                An IP address range to be used, e.g. in
                                                case of egress connections. In case this
                                                attribute is present, IP addresses from
                                                the range will be used.
                                              type: object
                                              required:
                                                - minAddress
                                                - maxAddress
                                              properties:
                                                minAddress:
                                                  description: >
                                                    An IPV4 or IPV6 address. Representation:
                                                    In case of an IPV4 address, string that
                                                    consists of four decimal integers
                                                    separated by dots, each integer ranging
                                                    from 0 to 255. In case of an IPV6
                                                    address, string that  consists of groups
                                                    of zero to four hexadecimal digits,
                                                    separated by colons.
                                                  type: string
                                                  format: IP
                                                maxAddress:
                                                  description: >
                                                    An IPV4 or IPV6 address. Representation:
                                                    In case of an IPV4 address, string that
                                                    consists of four decimal integers
                                                    separated by dots, each integer ranging
                                                    from 0 to 255. In case of an IPV6
                                                    address, string that  consists of groups
                                                    of zero to four hexadecimal digits,
                                                    separated by colons.
                                                  type: string
                                                  format: IP
                                            subnetId:
                                              description: >
                                                An identifier maintained by the VIM or
                                                other resource provider. It is expected
                                                to be unique within the VIM instance.
                                              type: string
                  virtualLinkInfo:
                    description: >
                      Information on the VL(s) of the NS instance. This
                      attribute shall be present if the nsState attribute value
                      is INSTANTIATED and if the NS instance has specified
                      connectivity.
                    type: array
                    items:
                      description: >
                        This type specifies the information about an NS VL
                        instance.  It shall comply with the provisions defined
                        in Table 6.5.3.53-1
                      type: object
                      required:
                        - id
                        - nsVirtualLinkDescId
                      properties:
                        id:
                          description: >
                            An identifier that is unique with respect to a NS. 
                            Representation: string of variable length.
                          type: string
                        nsVirtualLinkDescId:
                          description: >
                            An identifier that is unique within a NS descriptor.
                            Representation: string of variable length.
                          type: string
                        resourceHandle:
                          description: >
                            Identifier(s) of the virtualised network resource(s)
                            realizing the VL instance. See note.
                          type: array
                          items:
                            required:
                              - vimConnectionId
                              - resourceId
                            type: object
                            description: >
                              This type represents the information that allows
                              addressing a virtualised resource that is used by
                              a VNF instance. Information about the resource is
                              available from the VIM.
                            properties:
                              vimConnectionId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceProviderId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceId:
                                description: >
                                  An identifier maintained by the VIM or other
                                  resource provider. It is expected to be unique
                                  within the VIM instance.
                                type: string
                              vimLevelResourceType:
                                description: >
                                  Type of the resource in the scope of the VIM
                                  or the resource provider.
                                type: string
                        linkPort:
                          description: >
                            Link ports of the VL instance. Cardinality of zero
                            indicates that no port has yet been created for the
                            VL instance.
                          type: array
                          items:
                            description: >
                              This type represents information about a link port
                              of a VL instance.  It shall comply with the
                              provisions defined in Table 6.5.3.55-1.
                            type: object
                            required:
                              - id
                              - resourceHandle
                            properties:
                              id:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceHandle:
                                required:
                                  - vimConnectionId
                                  - resourceId
                                type: object
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance. Information about
                                  the resource is available from the VIM.
                                properties:
                                  vimConnectionId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceProviderId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                                  vimLevelResourceType:
                                    description: >
                                      Type of the resource in the scope of the
                                      VIM or the resource provider.
                                    type: string
                              nsCpHandle:
                                description: >
                                  Identifier of the CP/SAP instance to be
                                  connected to this link port. The value refers
                                  to a vnfExtCpInfo item in the VnfInstance, or
                                  a pnfExtCpInfo item in the PnfInfo, or a
                                  sapInfo item in the NS instance. There shall
                                  be at most one link port associated with any
                                  connection point instance.
                                type: array
                                items:
                                  description: >
                                    This type represents an identifier of the CP
                                    or SAP instance.  It shall comply with the
                                    provisions defined in Table 6.5.3.56-1.
                                  type: object
                                  properties:
                                    vnfInstanceId:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    vnfExtCpInstanceId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                                    pnfInfoId:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    pnfExtCpInstanceId:
                                      description: >
                                        Identifier of the CP in the scope of the
                                        PNF.
                                      type: string
                                    nsInstanceId:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    nsSapInstanceId:
                                      description: >
                                        An identifier that is unique with
                                        respect to a NS.  Representation: string
                                        of variable length.
                                      type: string
                  vnffgInfo:
                    description: |
                      Information on the VNFFG(s) of the NS instance.
                    type: array
                    items:
                      description: |
                        Information on the VNFFG(s) of the NS instance.
                      type: object
                      required:
                        - id
                        - vnffgdId
                        - vnfInstanceId
                        - pnfInfoId
                      properties:
                        id:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        vnffgdId:
                          description: >
                            An identifier that is unique within a NS descriptor.
                            Representation: string of variable length.
                          type: string
                        vnfInstanceId:
                          description: >
                            Identifier(s) of the constituent VNF instance(s) of
                            this VNFFG instance.
                          type: array
                          items:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                        pnfdInfoId:
                          description: >
                            Identifier(s) of the constituent PNF instance(s) of
                            this VNFFG instance.
                          type: array
                          items:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                        nsVirtualLinkInfoId:
                          description: >
                            Identifier(s) of the constituent VL instance(s) of
                            this VNFFG instance.
                          type: array
                          items:
                            description: >
                              An identifier that is unique with respect to a
                              NS.  Representation: string of variable length.
                            type: string
                        nsCpHandle:
                          description: >
                            Identifiers of the CP instances attached to the
                            constituent VNFs and PNFs or the SAP instances of
                            the VNFFG. See note.
                          type: array
                          items:
                            description: >
                              This type represents an identifier of the CP or
                              SAP instance.  It shall comply with the provisions
                              defined in Table 6.5.3.56-1.
                            type: object
                            properties:
                              vnfInstanceId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              vnfExtCpInstanceId:
                                description: >
                                  An identifier that is unique for the
                                  respective type within a VNF instance, but may
                                  not be globally unique.
                                type: string
                              pnfInfoId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              pnfExtCpInstanceId:
                                description: |
                                  Identifier of the CP in the scope of the PNF.
                                type: string
                              nsInstanceId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              nsSapInstanceId:
                                description: >
                                  An identifier that is unique with respect to a
                                  NS.  Representation: string of variable
                                  length.
                                type: string
                  sapInfo:
                    description: |
                      Information on the SAP(s) of the NS instance.
                    type: array
                    items:
                      description: >
                        This type represents an SAP instance. It shall comply
                        with the provisions defined in Table 6.5.3.67-1.
                      type: object
                      required:
                        - id
                        - sapdId
                        - sapName
                        - sapProtocolInfo
                      properties:
                        id:
                          description: >
                            An identifier that is unique with respect to a NS. 
                            Representation: string of variable length.
                          type: string
                        sapdId:
                          description: >
                            An identifier that is unique within a NS descriptor.
                            Representation: string of variable length.
                          type: string
                        sapName:
                          description: |
                            Human readable name for the SAP instance.
                          type: string
                        description:
                          description: |
                            Human readable description for the SAP instance.
                          type: string
                        sapProtocolInfo:
                          description: |
                            Network protocol information for this SAP.
                          type: array
                          items:
                            description: >
                              This type describes the protocol layer(s) that a
                              CP or SAP uses together with protocol-related
                              information, like addresses. It shall comply with
                              the provisions defined in Table 6.5.3.58-1.
                            type: object
                            required:
                              - layerProtocol
                              - ipOverEthernet
                            properties:
                              layerProtocol:
                                description: >
                                  The identifier of layer(s) and protocol(s)
                                  associated to the network address information.
                                  Permitted values: IP_OVER_ETHERNET See note.
                                type: string
                                enum:
                                  - IP_OVER_ETHERNET
                              ipOverEthernet:
                                description: >
                                  This type represents information about a
                                  network address that has been assigned.  It
                                  shall comply with the provisions defined in
                                  Table 6.5.3.18-1.
                                type: object
                                required:
                                  - macAddress
                                  - ipAddresses
                                  - subnetId
                                  - addresses
                                  - addressRange
                                properties:
                                  macAddress:
                                    description: >
                                      A MAC address. Representation: string that
                                      consists of groups of two hexadecimal
                                      digits, separated by hyphens or colons.
                                    type: string
                                    format: MAC
                                  ipAddresses:
                                    description: >
                                      Addresses assigned to the CP instance.
                                      Each entry represents IP addresses
                                      assigned by fixed or dynamic IP address
                                      assignment per subnet.
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - type
                                      properties:
                                        type:
                                          description: >
                                            The type of the IP addresses. Permitted
                                            values: IPV4, IPV6.
                                          type: string
                                          enum:
                                            - IPV4
                                            - IPV6
                                        addresses:
                                          description: >
                                            Fixed addresses assigned (from the
                                            subnet defined by "subnetId" if
                                            provided).
                                          type: array
                                          items:
                                            description: >
                                              An IPV4 or IPV6 address. Representation:
                                              In case of an IPV4 address, string that
                                              consists of four decimal integers
                                              separated by dots, each integer ranging
                                              from 0 to 255. In case of an IPV6
                                              address, string that  consists of groups
                                              of zero to four hexadecimal digits,
                                              separated by colons.
                                            type: string
                                            format: IP
                                        isDynamic:
                                          description: >
                                            Indicates whether this set of addresses
                                            was assigned dynamically (true) or based
                                            on address information provided as input
                                            from the API consumer (false). Shall be
                                            present if "addresses" is present and
                                            shall be absent otherwise.
                                          type: boolean
                                        addressRange:
                                          description: >
                                            An IP address range used, e.g., in case
                                            of egress connections. Exactly one of
                                            "addresses" or "addressRange" shall be
                                            present.
                                          type: object
                                          required:
                                            - minAddress
                                            - maxAddress
                                          properties:
                                            minAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                            maxAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                        subnetId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                                  type:
                                    description: |
                                      The type of the IP addresses
                                    type: string
                                    enum:
                                      - PV4
                                      - PV6
                                  addresses:
                                    description: >
                                      An IPV4 or IPV6 address. Representation:
                                      In case of an IPV4 address, string that
                                      consists of four decimal integers
                                      separated by dots, each integer ranging
                                      from 0 to 255. In case of an IPV6 address,
                                      string that  consists of groups of zero to
                                      four hexadecimal digits, separated by
                                      colons.
                                    type: string
                                    format: IP
                                  isDynamic:
                                    description: >
                                      Indicates whether this set of addresses
                                      was assigned dynamically (true) or based
                                      on address information provided as input
                                      from the API consumer (false). Shall be
                                      present if "addresses" is present and
                                      shall be absent otherwise.
                                    type: boolean
                                  addressRange:
                                    description: >
                                      An IP address range used, e.g. in case of
                                      egress connections. See note.
                                    type: object
                                    required:
                                      - minAddress
                                      - maxAddress
                                    properties:
                                      minAddress:
                                        description: >
                                          An IPV4 or IPV6 address. Representation:
                                          In case of an IPV4 address, string that
                                          consists of four decimal integers
                                          separated by dots, each integer ranging
                                          from 0 to 255. In case of an IPV6
                                          address, string that  consists of groups
                                          of zero to four hexadecimal digits,
                                          separated by colons.
                                        type: string
                                        format: IP
                                      maxAddress:
                                        description: >
                                          An IPV4 or IPV6 address. Representation:
                                          In case of an IPV4 address, string that
                                          consists of four decimal integers
                                          separated by dots, each integer ranging
                                          from 0 to 255. In case of an IPV6
                                          address, string that  consists of groups
                                          of zero to four hexadecimal digits,
                                          separated by colons.
                                        type: string
                                        format: IP
                                  minAddress:
                                    description: >
                                      An IPV4 or IPV6 address. Representation:
                                      In case of an IPV4 address, string that
                                      consists of four decimal integers
                                      separated by dots, each integer ranging
                                      from 0 to 255. In case of an IPV6 address,
                                      string that  consists of groups of zero to
                                      four hexadecimal digits, separated by
                                      colons.
                                    type: string
                                    format: IP
                                  maxAddress:
                                    description: >
                                      An IPV4 or IPV6 address. Representation:
                                      In case of an IPV4 address, string that
                                      consists of four decimal integers
                                      separated by dots, each integer ranging
                                      from 0 to 255. In case of an IPV6 address,
                                      string that  consists of groups of zero to
                                      four hexadecimal digits, separated by
                                      colons.
                                    type: string
                                    format: IP
                                  subnetId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                  nestedNsInstanceId:
                    description: |
                      Identifier of the nested NS(s) of the NS instance.
                    type: array
                    items:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                  nsState:
                    description: >
                      The state of the NS instance. Permitted values:
                      NOT_INSTANTIATED: The NS instance is terminated or not
                      instantiated. INSTANTIATED: The NS instance is
                      instantiated.
                    type: string
                    enum:
                      - NOT_INSTANTIATED
                      - INSTANTIATED
                  nsScaleStatus:
                    description: >
                      Status of each NS scaling aspect declared in the
                      applicable DF, how "big" the NS instance has been scaled
                      w.r.t. that aspect. This attribute shall be present if the
                      nsState attribute value is INSTANTIATED.
                    type: array
                    items:
                      description: >
                        This type represents the target NS Scale level for each
                        NS scaling aspect of the current deployment flavor.
                      type: object
                      required:
                        - nsScalingAspectId
                        - nsScaleLevelId
                      properties:
                        nsScalingAspectId:
                          description: >
                            An identifier that is unique within a NS descriptor.
                            Representation: string of variable length.
                          type: string
                        nsScaleLevelId:
                          description: >
                            An identifier that is unique within a NS descriptor.
                            Representation: string of variable length.
                          type: string
                  additionalAffinityOrAntiAffinityRule:
                    description: >
                      Information on the additional affinity or anti-affinity
                      rule from NS instantiation operation. Shall not conflict
                      with rules already specified in the NSD.
                    type: array
                    items:
                      description: >
                        This type describes the additional affinity or
                        anti-affinity rule  applicable between the VNF instances
                        to be instantiated in the NS instantiation operation
                        request or between the VNF instances  to be instantiated
                        in the NS instantiation operation request and the
                        existing VNF instances..
                      type: object
                      required:
                        - affinityOrAntiAffiinty
                        - scope
                      properties:
                        vnfdId:
                          description: >
                            Reference to a VNFD. When the VNFD which is not used
                            to instantiate VNF, it presents all VNF instances of
                            this type as the subjects of the affinity or
                            anti-affinity rule. The VNF instance which the VNFD
                            presents is not necessary as a part of the NS to be
                            instantiated.
                          type: array
                          items:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                        vnfProfileId:
                          description: >
                            Reference to a vnfProfile defined in the NSD. At
                            least one VnfProfile which is used to instantiate
                            VNF for the NS to be instantiated as the subject of
                            the affinity or anti-affinity rule shall be present.
                            When the VnfProfile which is not used to instantiate
                            VNF, it presents all VNF instances of this type as
                            the subjects of the affinity or anti-affinity rule.
                            The VNF instance which the VnfProfile presents is
                            not necessary as a part of the NS to be
                            instantiated.
                          type: array
                          items:
                            description: >
                              An identifier that is unique within a NS
                              descriptor. Representation: string of variable
                              length.
                            type: string
                        vnfInstanceId:
                          description: >
                            Reference to the existing VNF instance as the
                            subject of the affinity or anti-affinity rule. The
                            existing VNF instance is not necessary as a part of
                            the NS to be instantiated.
                          type: array
                          items:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                        affinityOrAntiAffiinty:
                          description: >
                            The type of the constraint. Permitted values:
                            AFFINITY ANTI_AFFINITY.
                          type: string
                          enum:
                            - AFFINITY
                            - ANTI_AFFINITY
                        scope:
                          description: >
                            Specifies the scope of the rule where the placement
                            constraint applies. Permitted values: NFVI_POP ZONE
                            ZONE_GROUP NFVI_NODE.
                          type: string
                          enum:
                            - NFVI_POP
                            - ZONE
                            - ZONE_GROUP
                            - NFVI_NODE
                  _links:
                    type: object
                    description: Links to resources related to this resource.
                    required:
                      - self
                    properties:
                      self:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
                      nestedNsInstances:
                        description: |
                          Links to resources related to this notification.
                        type: array
                        items:
                          description: |
                            This type represents a link to a resource.
                          type: object
                          required:
                            - href
                          properties:
                            href:
                              description: |
                                URI of the referenced resource.
                              type: string
                              format: url
                      instantiate:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
                      terminate:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
                      update:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
                      scale:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
                      heal:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
          headers:
            Content-Type:
              type: string
              description: >
                The MIME type of the body of the response.This header field
                shall be present if the response has a non-empty message body.
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              maximum: 1
              minimum: 0
        '400':
          description: >
            Error: Invalid attribute selector. The response body shall contain a
            ProblemDetails structure, in which the "detail" attribute should
            convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '401':
          description: >
            Unauthorized If the request contains no access token even though one
            is required, or if the request contains an authorization token that
            is invalid (e.g. expired or revoked), the API producer should
            respond with this response. The details of the error shall be
            returned in the WWW-Authenticate HTTP header, as defined in IETF RFC
            6750 and IETF RFC 7235. The ProblemDetails structure may be
            provided.
          headers:
            Content-Type:
              type: string
              description: The MIME type of the body of the response.
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '403':
          description: >
            Forbidden If the API consumer is not allowed to perform a particular
            request to a particular resource, the API producer shall respond
            with this response code. The "ProblemDetails" structure shall be
            provided.  It should include in the "detail" attribute information
            about the source of the problem, and may indicate how to solve it.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '404':
          description: >
            Not Found If the API producer did not find a current representation
            for the resource addressed by the URI passed in the request, or is
            not willing to disclose that one exists, it shall respond with this
            response code.  The "ProblemDetails" structure may be provided,
            including in the "detail" attribute information about the source of
            the problem, e.g. a wrong resource URI variable.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '405':
          description: >
            Method Not Allowed If a particular HTTP method is not supported for
            a particular resource, the API producer shall respond with this
            response code. The "ProblemDetails" structure may be omitted in that
            case.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '406':
          description: >
            Not Acceptable If the Accept HTTP header does not contain at least
            one name of a content type that is acceptable to the API producer,
            the API producer shall respond with this response code. The
            ProblemDetails structure may be omitted in that case.        
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '409':
          description: >
            Conflict

            Another request is in progress that prohibits the fulfilment of the
            current request, or the current resource state is inconsistent with
            the request.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '416':
          description: >
            Requested Range Not Satisfiable This code is returned if the
            requested byte range in the Range HTTP header is not present in the
            requested resource.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '500':
          description: >
            Internal Server Error If there is an application error not related
            to the client's input that cannot be easily mapped to any other HTTP
            response code ("catch all error"), the API producer shall respond
            withthis response code. The ProblemDetails structure shall be
            provided, and shall include in the "detail" attribute more
            information about the source of the problem.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '503':
          description: >
            Service Unavailable If the API producer encounters an internal
            overload situation of itself or of a system it relies on, it should
            respond with this response code, following the provisions in IETF
            RFC 7231 [13] for the use of the Retry-After HTTP header and for the
            alternative to refuse the connection. The "ProblemDetails" structure
            may be omitted.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
    get:
      summary: Query multiple NS instances.
      description: >
        Query NS Instances.

        The GET method queries information about multiple NS instances. This
        method shall support the URI query parameters, request and response data
        structures, and response codes, as specified in the Tables 6.4.2.3.2-1
        and 6.4.2.3.2-2.
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          description: >
            "Attribute-based filtering parameters according to clause 4.3.2. The
            NFVO shall support receiving filtering parameters as part of the URI
            query string. The OSS/BSS may supply filtering parameters. All
            attribute names that appear in the NsInstance and in data types
            referenced from it shall be supported in attribute-based filtering
            parameters"
        - name: all_fields
          in: query
          required: false
          type: string
          description: >
            "Include all complex attributes in the response. See clause 4.3.3
            for details. The NFVO shall support this parameter."
        - name: fields
          in: query
          required: false
          type: string
          description: >
            "Complex attributes to be included into the response. See clause
            4.3.3 for details. The NFVO should support this
            parameter."          
        - name: exclude_fields
          in: query
          required: false
          type: string
          description: >
            "Complex attributes to be excluded from the response. See clause
            4.3.3 for details. The NFVO should support this parameter."
        - name: exclude_default
          in: query
          required: false
          type: string
          description: >
            "Indicates to exclude the following complex attributes from the
            response. See clause 4.3.3 for details. The NFVO shall support this
            parameter. The following attributes shall be excluded from the
            NsInstance structure in the response body if this parameter is
            provided, or none of the parameters "all_fields," "fields",
            "exclude_fields", "exclude_default" are provided: - vnfInstances -
            pnfInfo - virtualLinkInfo - vnffgInfo - sapInfo - nsScaleStatus -
            additionalAffinityOrAntiAffinityRules"
        - name: Accept
          description: >
            Content-Types that are acceptable for the response. Reference: IETF
            RFC 7231
          in: header
          required: true
          type: string
        - name: Authorization
          description: |
            The authorization token for the request. Reference: IETF RFC 7235
          in: header
          required: false
          type: string
      responses:
        '200':
          description: >
            200 OK

            Information about zero or more NS instances was queried
            successfully. The response body shall contain representations of
            zero or more NS instances, as defined in clause 6.5.2.8.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              maximum: 1
              minimum: 0
          schema:
            type: array
            items:
              properties:
                NsInstance:
                  description: >
                    This type represents a response for Query NS operation.  It
                    shall comply with the provisions defined in Table
                    6.5.2.10-1.
                  type: object
                  required:
                    - id
                    - nsInstanceName
                    - nsInstanceDescription
                    - nsdId
                    - nsdInfoId
                    - nsState
                  properties:
                    id:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    nsInstanceName:
                      description: |
                        Human readable name of the NS instance.
                      type: string
                    nsInstanceDescription:
                      description: |
                        Human readable description of the NS instance.
                      type: string
                    nsdId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    nsdInfoId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    flavourId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
                    vnfInstance:
                      description: |
                        Information on constituent VNF(s) of the NS instance.
                      type: array
                      items:
                        description: |
                          This type represents a VNF instance.
                        type: object
                        required:
                          - id
                          - vnfdId
                          - vnfProvider
                          - vnfProductName
                          - vnfSoftwareVersion
                          - vnfdVersion
                          - vnfPkgId
                          - instantiationState
                        properties:
                          id:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          vnfInstanceName:
                            description: >
                              Name of the VNF instance. This attribute can be
                              modified with the PATCH method.
                            type: string
                          vnfInstanceDescription:
                            description: >
                              Human-readable description of the VNF instance.
                              This attribute can be modified with the PATCH
                              method.
                            type: string
                          vnfdId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          vnfProvider:
                            description: >
                              Provider of the VNF and the VNFD. The value is
                              copied from the VNFD.
                            type: string
                          vnfProductName:
                            description: >
                              Name to identify the VNF Product. The value is
                              copied from the VNFD.
                            type: string
                          vnfSoftwareVersion:
                            description: |
                              A Version.
                            type: string
                          vnfdVersion:
                            description: |
                              A Version.
                            type: string
                          vnfPkgId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          vnfConfigurableProperties:
                            description: >
                              This type represents a list of key-value pairs.
                              The order of the pairs in the list is not
                              significant. In JSON, a set of key- value pairs is
                              represented as an object. It shall comply with the
                              provisions  defined in clause 4 of IETF RFC 7159. 
                            type: object
                          vimId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          instantiationState:
                            description: |
                              The instantiation state of the VNF.
                            type: string
                            enum:
                              - NOT_INSTANTIATED
                              - INSTANTIATED
                          instantiatedVnfInfo:
                            description: >
                              Information specific to an instantiated VNF
                              instance. This attribute shall be present if the
                              instantiateState attribute value is INSTANTIATED.
                            type: object
                            required:
                              - flavourId
                              - vnfState
                            properties:
                              flavourId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              vnfState:
                                type: string
                                enum:
                                  - STARTED
                                  - STOPPED
                              scaleStatus:
                                description: >
                                  Scale status of the VNF, one entry per aspect.
                                  Represents for every scaling aspect how "big"
                                  the VNF has been scaled w.r.t. that aspect.
                                type: array
                                items:
                                  required:
                                    - aspectId
                                    - scaleLevel
                                  type: object
                                  properties:
                                    aspectId:
                                      description: >
                                        Identifier of the VNF Virtual Link
                                        Descriptor (VLD) in the VNFD.
                                      type: string
                                    scaleLevel:
                                      description: >
                                        Indicates the scale level. The minimum
                                        value shall be 0 and the maximum value
                                        shall be <= maxScaleLevel as described
                                        in the VNFD.
                                      type: integer
                              extCpInfo:
                                description: >
                                  Information about the external CPs exposed by
                                  the VNF instance.
                                type: array
                                minItems: 1
                                items:
                                  type: object
                                  required:
                                    - id
                                    - cpdId
                                  properties:
                                    id:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                                    cpdId:
                                      description: >
                                        Identifier of the VNF Virtual Link
                                        Descriptor (VLD) in the VNFD.
                                      type: string
                                    cpProtocolInfo:
                                      description: >
                                        Network protocol information for this
                                        CP.
                                      type: array
                                      items:
                                        description: >
                                          This type describes the protocol
                                          layer(s) that a CP or SAP uses together
                                          with protocol-related information, like
                                          addresses. It shall comply with the
                                          provisions defined in Table 6.5.3.58-1.
                                        type: object
                                        required:
                                          - layerProtocol
                                          - ipOverEthernet
                                        properties:
                                          layerProtocol:
                                            description: >
                                              The identifier of layer(s) and
                                              protocol(s) associated to the network
                                              address information. Permitted values:
                                              IP_OVER_ETHERNET See note.
                                            type: string
                                            enum:
                                              - IP_OVER_ETHERNET
                                          ipOverEthernet:
                                            description: >
                                              This type represents information about a
                                              network address that has been assigned. 
                                              It shall comply with the provisions
                                              defined in Table 6.5.3.18-1.
                                            type: object
                                            required:
                                              - macAddress
                                              - ipAddresses
                                              - subnetId
                                              - addresses
                                              - addressRange
                                            properties:
                                              macAddress:
                                                description: >
                                                  A MAC address. Representation: string
                                                  that consists of groups of two
                                                  hexadecimal digits, separated by hyphens
                                                  or colons.
                                                type: string
                                                format: MAC
                                              ipAddresses:
                                                description: >
                                                  Addresses assigned to the CP instance.
                                                  Each entry represents IP addresses
                                                  assigned by fixed or dynamic IP address
                                                  assignment per subnet.
                                                type: array
                                                items:
                                                  type: object
                                                  required:
                                                    - type
                                                  properties:
                                                    type:
                                                      description: >
                                                        The type of the IP addresses. Permitted
                                                        values: IPV4, IPV6.
                                                      type: string
                                                      enum:
                                                        - IPV4
                                                        - IPV6
                                                    addresses:
                                                      description: >
                                                        Fixed addresses assigned (from the
                                                        subnet defined by "subnetId" if
                                                        provided).
                                                      type: array
                                                      items:
                                                        description: >
                                                          An IPV4 or IPV6 address. Representation:
                                                          In case of an IPV4 address, string that
                                                          consists of four decimal integers
                                                          separated by dots, each integer ranging
                                                          from 0 to 255. In case of an IPV6
                                                          address, string that  consists of groups
                                                          of zero to four hexadecimal digits,
                                                          separated by colons.
                                                        type: string
                                                        format: IP
                                                    isDynamic:
                                                      description: >
                                                        Indicates whether this set of addresses
                                                        was assigned dynamically (true) or based
                                                        on address information provided as input
                                                        from the API consumer (false). Shall be
                                                        present if "addresses" is present and
                                                        shall be absent otherwise.
                                                      type: boolean
                                                    addressRange:
                                                      description: >
                                                        An IP address range used, e.g., in case
                                                        of egress connections. Exactly one of
                                                        "addresses" or "addressRange" shall be
                                                        present.
                                                      type: object
                                                      required:
                                                        - minAddress
                                                        - maxAddress
                                                      properties:
                                                        minAddress:
                                                          description: >
                                                            An IPV4 or IPV6 address. Representation:
                                                            In case of an IPV4 address, string that
                                                            consists of four decimal integers
                                                            separated by dots, each integer ranging
                                                            from 0 to 255. In case of an IPV6
                                                            address, string that  consists of groups
                                                            of zero to four hexadecimal digits,
                                                            separated by colons.
                                                          type: string
                                                          format: IP
                                                        maxAddress:
                                                          description: >
                                                            An IPV4 or IPV6 address. Representation:
                                                            In case of an IPV4 address, string that
                                                            consists of four decimal integers
                                                            separated by dots, each integer ranging
                                                            from 0 to 255. In case of an IPV6
                                                            address, string that  consists of groups
                                                            of zero to four hexadecimal digits,
                                                            separated by colons.
                                                          type: string
                                                          format: IP
                                                    subnetId:
                                                      description: >
                                                        An identifier maintained by the VIM or
                                                        other resource provider. It is expected
                                                        to be unique within the VIM instance.
                                                      type: string
                                              type:
                                                description: |
                                                  The type of the IP addresses
                                                type: string
                                                enum:
                                                  - PV4
                                                  - PV6
                                              addresses:
                                                description: >
                                                  An IPV4 or IPV6 address. Representation:
                                                  In case of an IPV4 address, string that
                                                  consists of four decimal integers
                                                  separated by dots, each integer ranging
                                                  from 0 to 255. In case of an IPV6
                                                  address, string that  consists of groups
                                                  of zero to four hexadecimal digits,
                                                  separated by colons.
                                                type: string
                                                format: IP
                                              isDynamic:
                                                description: >
                                                  Indicates whether this set of addresses
                                                  was assigned dynamically (true) or based
                                                  on address information provided as input
                                                  from the API consumer (false). Shall be
                                                  present if "addresses" is present and
                                                  shall be absent otherwise.
                                                type: boolean
                                              addressRange:
                                                description: >
                                                  An IP address range used, e.g. in case
                                                  of egress connections. See note.
                                                type: object
                                                required:
                                                  - minAddress
                                                  - maxAddress
                                                properties:
                                                  minAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                                  maxAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                              minAddress:
                                                description: >
                                                  An IPV4 or IPV6 address. Representation:
                                                  In case of an IPV4 address, string that
                                                  consists of four decimal integers
                                                  separated by dots, each integer ranging
                                                  from 0 to 255. In case of an IPV6
                                                  address, string that  consists of groups
                                                  of zero to four hexadecimal digits,
                                                  separated by colons.
                                                type: string
                                                format: IP
                                              maxAddress:
                                                description: >
                                                  An IPV4 or IPV6 address. Representation:
                                                  In case of an IPV4 address, string that
                                                  consists of four decimal integers
                                                  separated by dots, each integer ranging
                                                  from 0 to 255. In case of an IPV6
                                                  address, string that  consists of groups
                                                  of zero to four hexadecimal digits,
                                                  separated by colons.
                                                type: string
                                                format: IP
                                              subnetId:
                                                description: >
                                                  An identifier maintained by the VIM or
                                                  other resource provider. It is expected
                                                  to be unique within the VIM instance.
                                                type: string
                                    extLinkPortId:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                              extVirtualLinkInfo:
                                description: >
                                  Information about the external VLs the VNF
                                  instance is connected to.
                                type: array
                                items:
                                  type: object
                                  required:
                                    - id
                                    - resourceHandle
                                  properties:
                                    id:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    resourceHandle:
                                      required:
                                        - vimConnectionId
                                        - resourceId
                                      type: object
                                      description: >
                                        This type represents the information
                                        that allows addressing a virtualised
                                        resource that is used by a VNF instance.
                                        Information about the resource is
                                        available from the VIM.
                                      properties:
                                        vimConnectionId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceProviderId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                                        vimLevelResourceType:
                                          description: >
                                            Type of the resource in the scope of the
                                            VIM or the resource provider.
                                          type: string
                                    extLinkPorts:
                                      description: |
                                        Link ports of this VL.
                                      type: array
                                      items:
                                        description: >
                                          This type represents information about a
                                          link port of an external VL, i.e. a port
                                          providing connectivity for the VNF to an
                                          NS VL. 
                                        type: object
                                        required:
                                          - id
                                          - resourceHandle
                                        properties:
                                          id:
                                            description: >
                                              An identifier with the intention of
                                              being globally unique.
                                            type: string
                                          resourceHandle:
                                            required:
                                              - vimConnectionId
                                              - resourceId
                                            type: object
                                            description: >
                                              This type represents the information
                                              that allows addressing a virtualised
                                              resource that is used by a VNF instance.
                                              Information about the resource is
                                              available from the VIM.
                                            properties:
                                              vimConnectionId:
                                                description: >
                                                  An identifier with the intention of
                                                  being globally unique.
                                                type: string
                                              resourceProviderId:
                                                description: >
                                                  An identifier with the intention of
                                                  being globally unique.
                                                type: string
                                              resourceId:
                                                description: >
                                                  An identifier maintained by the VIM or
                                                  other resource provider. It is expected
                                                  to be unique within the VIM instance.
                                                type: string
                                              vimLevelResourceType:
                                                description: >
                                                  Type of the resource in the scope of the
                                                  VIM or the resource provider.
                                                type: string
                                          cpInstanceId:
                                            description: >
                                              An identifier that is unique for the
                                              respective type within a VNF instance,
                                              but may not be globally unique.
                                            type: string
                              extManagedVirtualLinkInfo:
                                description: >
                                  External virtual links the VNF instance is
                                  connected to.
                                type: array
                                items:
                                  type: object
                                  required:
                                    - id
                                    - vnfVirtualLinkDescId
                                  properties:
                                    id:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    vnfVirtualLinkDescId:
                                      description: >
                                        Identifier of the VNF Virtual Link
                                        Descriptor (VLD) in the VNFD.
                                      type: string
                                    networkResource:
                                      required:
                                        - vimConnectionId
                                        - resourceId
                                      type: object
                                      description: >
                                        This type represents the information
                                        that allows addressing a virtualised
                                        resource that is used by a VNF instance.
                                        Information about the resource is
                                        available from the VIM.
                                      properties:
                                        vimConnectionId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceProviderId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                                        vimLevelResourceType:
                                          description: >
                                            Type of the resource in the scope of the
                                            VIM or the resource provider.
                                          type: string
                                    vnfLinkPorts:
                                      description: |
                                        Link ports of this VL.
                                      type: array
                                      items:
                                        type: object
                                        required:
                                          - id
                                          - resourceHandle
                                        properties:
                                          id:
                                            description: >
                                              An identifier that is unique for the
                                              respective type within a VNF instance,
                                              but may not be globally unique.
                                            type: string
                                          resourceHandle:
                                            required:
                                              - vimConnectionId
                                              - resourceId
                                            type: object
                                            description: >
                                              This type represents the information
                                              that allows addressing a virtualised
                                              resource that is used by a VNF instance.
                                              Information about the resource is
                                              available from the VIM.
                                            properties:
                                              vimConnectionId:
                                                description: >
                                                  An identifier with the intention of
                                                  being globally unique.
                                                type: string
                                              resourceProviderId:
                                                description: >
                                                  An identifier with the intention of
                                                  being globally unique.
                                                type: string
                                              resourceId:
                                                description: >
                                                  An identifier maintained by the VIM or
                                                  other resource provider. It is expected
                                                  to be unique within the VIM instance.
                                                type: string
                                              vimLevelResourceType:
                                                description: >
                                                  Type of the resource in the scope of the
                                                  VIM or the resource provider.
                                                type: string
                                          cpInstanceId:
                                            description: >
                                              An identifier that is unique for the
                                              respective type within a VNF instance,
                                              but may not be globally unique.
                                            type: string
                              monitoringParameters:
                                description: |
                                  Active monitoring parameters.
                                type: array
                                items:
                                  type: object
                                  required:
                                    - id
                                    - value
                                    - timeStamp
                                  properties:
                                    id:
                                      description: >
                                        Identifier of the VNF Virtual Link
                                        Descriptor (VLD) in the VNFD.
                                      type: string
                                    name:
                                      description: >
                                        Human readable name of the monitoring
                                        parameter, as defined in the VNFD.
                                      type: string
                                    value:
                                      description: >
                                        Value of the monitoring parameter known
                                        to the VNFM (e.g. obtained for
                                        auto-scaling purposes). The type of the
                                        "value" attribute (i.e. scalar,
                                        structure (Object in JSON), or array (of
                                        scalars, arrays or structures/Objects))
                                        is assumed to be defined in an external
                                        measurement specification.
                                      type: object
                                    timeStamp:
                                      description: >
                                        Represents the point in time when the
                                        measurement has been performed, as known
                                        to the VNFM. Should be formatted
                                        according to ETF RFC 3339.
                                      type: string
                              localizationLanguage:
                                description: >
                                  Information about localization language of the
                                  VNF (includes e.g. strings in the VNFD). The
                                  localization languages supported by a VNF can
                                  be declared in the VNFD, and localization
                                  language selection can take place at
                                  instantiation time. The value shall comply
                                  with the format defined in IETF RFC 5646.
                                type: string
                              vnfcResourceInfo:
                                description: >
                                  Information about the virtualised compute and
                                  storage resources used by the VNFCs of the VNF
                                  instance.
                                type: array
                                items:
                                  description: >
                                    This type represents the information on
                                    virtualised compute and storage resources
                                    used by a VNFC in a VNF instance.
                                  type: object
                                  required:
                                    - id
                                    - vduId
                                    - computeResource
                                  properties:
                                    id:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                                    vduId:
                                      description: >
                                        Identifier of the VNF Virtual Link
                                        Descriptor (VLD) in the VNFD.
                                      type: string
                                    computeResource:
                                      required:
                                        - vimConnectionId
                                        - resourceId
                                      type: object
                                      description: >
                                        This type represents the information
                                        that allows addressing a virtualised
                                        resource that is used by a VNF instance.
                                        Information about the resource is
                                        available from the VIM.
                                      properties:
                                        vimConnectionId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceProviderId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                                        vimLevelResourceType:
                                          description: >
                                            Type of the resource in the scope of the
                                            VIM or the resource provider.
                                          type: string
                                    storageResourceIds:
                                      description: >
                                        References to the VirtualStorage
                                        resources. The value refers to a
                                        VirtualStorageResourceInfo item in the
                                        VnfInstance.
                                      type: array
                                      items:
                                        description: >
                                          An identifier with the intention of
                                          being globally unique.
                                        type: string
                                    reservationId:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    vnfcCpInfo:
                                      description: >
                                        CPs of the VNFC instance. Shall be
                                        present when that particular CP of the
                                        VNFC instance is associated to an
                                        external CP of the VNF instance. May be
                                        present otherwise.
                                      type: array
                                      items:
                                        type: object
                                        required:
                                          - id
                                          - cpdId
                                        properties:
                                          id:
                                            description: >
                                              An identifier that is unique for the
                                              respective type within a VNF instance,
                                              but may not be globally unique.
                                            type: string
                                          cpdId:
                                            description: >
                                              Identifier of the VNF Virtual Link
                                              Descriptor (VLD) in the VNFD.
                                            type: string
                                          vnfExtCpId:
                                            description: >
                                              An identifier that is unique for the
                                              respective type within a VNF instance,
                                              but may not be globally unique.
                                            type: string
                                          cpProtocolInfo:
                                            description: >
                                              Network protocol information for this
                                              CP.
                                            type: array
                                            items:
                                              description: >
                                                This type describes the protocol
                                                layer(s) that a CP or SAP uses together
                                                with protocol-related information, like
                                                addresses. It shall comply with the
                                                provisions defined in Table 6.5.3.58-1.
                                              type: object
                                              required:
                                                - layerProtocol
                                                - ipOverEthernet
                                              properties:
                                                layerProtocol:
                                                  description: >
                                                    The identifier of layer(s) and
                                                    protocol(s) associated to the network
                                                    address information. Permitted values:
                                                    IP_OVER_ETHERNET See note.
                                                  type: string
                                                  enum:
                                                    - IP_OVER_ETHERNET
                                                ipOverEthernet:
                                                  description: >
                                                    This type represents information about a
                                                    network address that has been assigned. 
                                                    It shall comply with the provisions
                                                    defined in Table 6.5.3.18-1.
                                                  type: object
                                                  required:
                                                    - macAddress
                                                    - ipAddresses
                                                    - subnetId
                                                    - addresses
                                                    - addressRange
                                                  properties:
                                                    macAddress:
                                                      description: >
                                                        A MAC address. Representation: string
                                                        that consists of groups of two
                                                        hexadecimal digits, separated by hyphens
                                                        or colons.
                                                      type: string
                                                      format: MAC
                                                    ipAddresses:
                                                      description: >
                                                        Addresses assigned to the CP instance.
                                                        Each entry represents IP addresses
                                                        assigned by fixed or dynamic IP address
                                                        assignment per subnet.
                                                      type: array
                                                      items:
                                                        type: object
                                                        required:
                                                          - type
                                                        properties:
                                                          type:
                                                            description: >
                                                              The type of the IP addresses. Permitted
                                                              values: IPV4, IPV6.
                                                            type: string
                                                            enum:
                                                              - IPV4
                                                              - IPV6
                                                          addresses:
                                                            description: >
                                                              Fixed addresses assigned (from the
                                                              subnet defined by "subnetId" if
                                                              provided).
                                                            type: array
                                                            items:
                                                              description: >
                                                                An IPV4 or IPV6 address. Representation:
                                                                In case of an IPV4 address, string that
                                                                consists of four decimal integers
                                                                separated by dots, each integer ranging
                                                                from 0 to 255. In case of an IPV6
                                                                address, string that  consists of groups
                                                                of zero to four hexadecimal digits,
                                                                separated by colons.
                                                              type: string
                                                              format: IP
                                                          isDynamic:
                                                            description: >
                                                              Indicates whether this set of addresses
                                                              was assigned dynamically (true) or based
                                                              on address information provided as input
                                                              from the API consumer (false). Shall be
                                                              present if "addresses" is present and
                                                              shall be absent otherwise.
                                                            type: boolean
                                                          addressRange:
                                                            description: >
                                                              An IP address range used, e.g., in case
                                                              of egress connections. Exactly one of
                                                              "addresses" or "addressRange" shall be
                                                              present.
                                                            type: object
                                                            required:
                                                              - minAddress
                                                              - maxAddress
                                                            properties:
                                                              minAddress:
                                                                description: >
                                                                  An IPV4 or IPV6 address. Representation:
                                                                  In case of an IPV4 address, string that
                                                                  consists of four decimal integers
                                                                  separated by dots, each integer ranging
                                                                  from 0 to 255. In case of an IPV6
                                                                  address, string that  consists of groups
                                                                  of zero to four hexadecimal digits,
                                                                  separated by colons.
                                                                type: string
                                                                format: IP
                                                              maxAddress:
                                                                description: >
                                                                  An IPV4 or IPV6 address. Representation:
                                                                  In case of an IPV4 address, string that
                                                                  consists of four decimal integers
                                                                  separated by dots, each integer ranging
                                                                  from 0 to 255. In case of an IPV6
                                                                  address, string that  consists of groups
                                                                  of zero to four hexadecimal digits,
                                                                  separated by colons.
                                                                type: string
                                                                format: IP
                                                          subnetId:
                                                            description: >
                                                              An identifier maintained by the VIM or
                                                              other resource provider. It is expected
                                                              to be unique within the VIM instance.
                                                            type: string
                                                    type:
                                                      description: |
                                                        The type of the IP addresses
                                                      type: string
                                                      enum:
                                                        - PV4
                                                        - PV6
                                                    addresses:
                                                      description: >
                                                        An IPV4 or IPV6 address. Representation:
                                                        In case of an IPV4 address, string that
                                                        consists of four decimal integers
                                                        separated by dots, each integer ranging
                                                        from 0 to 255. In case of an IPV6
                                                        address, string that  consists of groups
                                                        of zero to four hexadecimal digits,
                                                        separated by colons.
                                                      type: string
                                                      format: IP
                                                    isDynamic:
                                                      description: >
                                                        Indicates whether this set of addresses
                                                        was assigned dynamically (true) or based
                                                        on address information provided as input
                                                        from the API consumer (false). Shall be
                                                        present if "addresses" is present and
                                                        shall be absent otherwise.
                                                      type: boolean
                                                    addressRange:
                                                      description: >
                                                        An IP address range used, e.g. in case
                                                        of egress connections. See note.
                                                      type: object
                                                      required:
                                                        - minAddress
                                                        - maxAddress
                                                      properties:
                                                        minAddress:
                                                          description: >
                                                            An IPV4 or IPV6 address. Representation:
                                                            In case of an IPV4 address, string that
                                                            consists of four decimal integers
                                                            separated by dots, each integer ranging
                                                            from 0 to 255. In case of an IPV6
                                                            address, string that  consists of groups
                                                            of zero to four hexadecimal digits,
                                                            separated by colons.
                                                          type: string
                                                          format: IP
                                                        maxAddress:
                                                          description: >
                                                            An IPV4 or IPV6 address. Representation:
                                                            In case of an IPV4 address, string that
                                                            consists of four decimal integers
                                                            separated by dots, each integer ranging
                                                            from 0 to 255. In case of an IPV6
                                                            address, string that  consists of groups
                                                            of zero to four hexadecimal digits,
                                                            separated by colons.
                                                          type: string
                                                          format: IP
                                                    minAddress:
                                                      description: >
                                                        An IPV4 or IPV6 address. Representation:
                                                        In case of an IPV4 address, string that
                                                        consists of four decimal integers
                                                        separated by dots, each integer ranging
                                                        from 0 to 255. In case of an IPV6
                                                        address, string that  consists of groups
                                                        of zero to four hexadecimal digits,
                                                        separated by colons.
                                                      type: string
                                                      format: IP
                                                    maxAddress:
                                                      description: >
                                                        An IPV4 or IPV6 address. Representation:
                                                        In case of an IPV4 address, string that
                                                        consists of four decimal integers
                                                        separated by dots, each integer ranging
                                                        from 0 to 255. In case of an IPV6
                                                        address, string that  consists of groups
                                                        of zero to four hexadecimal digits,
                                                        separated by colons.
                                                      type: string
                                                      format: IP
                                                    subnetId:
                                                      description: >
                                                        An identifier maintained by the VIM or
                                                        other resource provider. It is expected
                                                        to be unique within the VIM instance.
                                                      type: string
                                          vnfLinkPortId:
                                            description: >
                                              An identifier that is unique for the
                                              respective type within a VNF instance,
                                              but may not be globally unique.
                                            type: string
                                    metadata:
                                      description: >
                                        This type represents a list of key-value
                                        pairs. The order of the pairs in the
                                        list is not significant. In JSON, a set
                                        of key- value pairs is represented as an
                                        object. It shall comply with the
                                        provisions  defined in clause 4 of IETF
                                        RFC 7159. 
                                      type: object
                              virtualLinkResourceInfo:
                                description: >
                                  Information about the virtualised network
                                  resources used by the VLs of the VNF instance.
                                type: array
                                items:
                                  description: >
                                    This type represents the information that
                                    allows addressing a virtualised resource
                                    that is used by an internal VL instance in a
                                    VNF instance.
                                  type: object
                                  required:
                                    - id
                                    - vnfVirtualLinkDescId
                                    - networkResource
                                  properties:
                                    id:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                                    vnfVirtualLinkDescId:
                                      description: >
                                        Identifier of the VNF Virtual Link
                                        Descriptor (VLD) in the VNFD.
                                      type: string
                                    networkResource:
                                      required:
                                        - vimConnectionId
                                        - resourceId
                                      type: object
                                      description: >
                                        This type represents the information
                                        that allows addressing a virtualised
                                        resource that is used by a VNF instance.
                                        Information about the resource is
                                        available from the VIM.
                                      properties:
                                        vimConnectionId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceProviderId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                                        vimLevelResourceType:
                                          description: >
                                            Type of the resource in the scope of the
                                            VIM or the resource provider.
                                          type: string
                                    reservationId:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    vnfLinkPorts:
                                      description: >
                                        Links ports of this VL. Shall be present
                                        when the linkPort is used for external
                                        connectivity by the VNF (refer to
                                        VnfLinkPortInfo). May be present
                                        otherwise.
                                      type: array
                                      items:
                                        type: object
                                        required:
                                          - id
                                          - resourceHandle
                                        properties:
                                          id:
                                            description: >
                                              An identifier that is unique for the
                                              respective type within a VNF instance,
                                              but may not be globally unique.
                                            type: string
                                          resourceHandle:
                                            required:
                                              - vimConnectionId
                                              - resourceId
                                            type: object
                                            description: >
                                              This type represents the information
                                              that allows addressing a virtualised
                                              resource that is used by a VNF instance.
                                              Information about the resource is
                                              available from the VIM.
                                            properties:
                                              vimConnectionId:
                                                description: >
                                                  An identifier with the intention of
                                                  being globally unique.
                                                type: string
                                              resourceProviderId:
                                                description: >
                                                  An identifier with the intention of
                                                  being globally unique.
                                                type: string
                                              resourceId:
                                                description: >
                                                  An identifier maintained by the VIM or
                                                  other resource provider. It is expected
                                                  to be unique within the VIM instance.
                                                type: string
                                              vimLevelResourceType:
                                                description: >
                                                  Type of the resource in the scope of the
                                                  VIM or the resource provider.
                                                type: string
                                          cpInstanceId:
                                            description: >
                                              An identifier that is unique for the
                                              respective type within a VNF instance,
                                              but may not be globally unique.
                                            type: string
                                    metadata:
                                      description: >
                                        This type represents a list of key-value
                                        pairs. The order of the pairs in the
                                        list is not significant. In JSON, a set
                                        of key- value pairs is represented as an
                                        object. It shall comply with the
                                        provisions  defined in clause 4 of IETF
                                        RFC 7159. 
                                      type: object
                              virtualStorageResourceInfo:
                                description: >
                                  Information on the virtualised storage
                                  resource(s) used as storage for the VNF
                                  instance.
                                type: array
                                items:
                                  description: >
                                    This type represents the information that
                                    allows addressing a virtualised resource
                                    that is used by a VNF instance.
                                  type: object
                                  required:
                                    - id
                                    - virtualStorageDescId
                                    - storageResource
                                  properties:
                                    id:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                                    virtualStorageDescId:
                                      description: >
                                        Identifier of the VNF Virtual Link
                                        Descriptor (VLD) in the VNFD.
                                      type: string
                                    storageResource:
                                      required:
                                        - vimConnectionId
                                        - resourceId
                                      type: object
                                      description: >
                                        This type represents the information
                                        that allows addressing a virtualised
                                        resource that is used by a VNF instance.
                                        Information about the resource is
                                        available from the VIM.
                                      properties:
                                        vimConnectionId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceProviderId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                                        vimLevelResourceType:
                                          description: >
                                            Type of the resource in the scope of the
                                            VIM or the resource provider.
                                          type: string
                                    reservationId:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    metadata:
                                      description: >
                                        This type represents a list of key-value
                                        pairs. The order of the pairs in the
                                        list is not significant. In JSON, a set
                                        of key- value pairs is represented as an
                                        object. It shall comply with the
                                        provisions  defined in clause 4 of IETF
                                        RFC 7159. 
                                      type: object
                          metadata:
                            description: >
                              This type represents a list of key-value pairs.
                              The order of the pairs in the list is not
                              significant. In JSON, a set of key- value pairs is
                              represented as an object. It shall comply with the
                              provisions  defined in clause 4 of IETF RFC 7159. 
                            type: object
                          extensions:
                            description: >
                              This type represents a list of key-value pairs.
                              The order of the pairs in the list is not
                              significant. In JSON, a set of key- value pairs is
                              represented as an object. It shall comply with the
                              provisions  defined in clause 4 of IETF RFC 7159. 
                            type: object
                    pnfInfo:
                      description: >
                        Information on the PNF(s) that are part of the NS
                        instance.
                      type: array
                      items:
                        description: >
                          This type represents the information about a PNF that
                          is part of an NS instance.  It shall comply with the
                          provisions defined in Table 6.5.3.13-1.
                        type: object
                        required:
                          - pnfId
                          - pnfdId
                          - pnfdInfoId
                          - pnfProfileId
                        properties:
                          pnfId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          pnfName:
                            description: |
                              Name of the PNF.
                            type: string
                          pnfdId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          pnfdInfoId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          pnfProfileId:
                            description: >
                              An identifier that is unique within a NS
                              descriptor. Representation: string of variable
                              length.
                            type: string
                          cpInfo:
                            description: >
                              This type represents the information about the
                              external CP of the PNF.  It shall comply with the
                              provisions defined in Table 6.5.3.17-1.
                            type: object
                            required:
                              - cpInstanceId
                              - cpdId
                            properties:
                              cpInstanceId:
                                description: |
                                  Identifier of the CP in the scope of the PNF.
                                type: string
                              cpdId:
                                description: >
                                  An identifier that is unique within a NS
                                  descriptor. Representation: string of variable
                                  length.
                                type: string
                              cpProtocolData:
                                description: >
                                  Parameters for configuring the network
                                  protocols on the CP.
                                type: array
                                items:
                                  description: |
                                    This type represents network protocol data. 
                                  type: object
                                  required:
                                    - layerProtocol
                                  properties:
                                    layerProtocol:
                                      description: >
                                        Identifier of layer(s) and protocol(s).
                                        Permitted values: IP_OVER_ETHERNET.
                                      type: string
                                      enum:
                                        - IP_OVER_ETHERNET
                                    ipOverEthernet:
                                      description: >
                                        This type represents network address
                                        data for IP over Ethernet.
                                      type: object
                                      properties:
                                        macAddress:
                                          description: >
                                            A MAC address. Representation: string
                                            that consists of groups of two
                                            hexadecimal digits, separated by hyphens
                                            or colons.
                                          type: string
                                          format: MAC
                                        ipAddresses:
                                          description: >
                                            List of IP addresses to assign to the CP
                                            instance. Each entry represents IP
                                            address data for fixed or dynamic IP
                                            address assignment per subnet. If this
                                            attribute is not present, no IP address
                                            shall be assigned.
                                          type: array
                                          items:
                                            type: object
                                            required:
                                              - type
                                            properties:
                                              type:
                                                description: >
                                                  The type of the IP addresses. Permitted
                                                  values: IPV4, IPV6.
                                                type: string
                                                enum:
                                                  - IPV4
                                                  - IPV6
                                              fixedAddresses:
                                                description: >
                                                  Fixed addresses to assign (from the
                                                  subnet defined by "subnetId" if
                                                  provided). Exactly one of
                                                  "fixedAddresses", "numDynamicAddresses"
                                                  or "ipAddressRange" shall be present.
                                                type: array
                                                items:
                                                  description: >
                                                    An IPV4 or IPV6 address. Representation:
                                                    In case of an IPV4 address, string that
                                                    consists of four decimal integers
                                                    separated by dots, each integer ranging
                                                    from 0 to 255. In case of an IPV6
                                                    address, string that  consists of groups
                                                    of zero to four hexadecimal digits,
                                                    separated by colons.
                                                  type: string
                                                  format: IP
                                              numDynamicAddresses:
                                                description: >
                                                  Number of dynamic addresses to assign
                                                  (from the subnet defined by "subnetId"
                                                  if provided). Exactly one of
                                                  "fixedAddresses", "numDynamicAddresses"
                                                  or "ipAddressRange" shall be present.
                                                type: integer
                                              addressRange:
                                                description: >
                                                  An IP address range to be used, e.g. in
                                                  case of egress connections. In case this
                                                  attribute is present, IP addresses from
                                                  the range will be used.
                                                type: object
                                                required:
                                                  - minAddress
                                                  - maxAddress
                                                properties:
                                                  minAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                                  maxAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                              subnetId:
                                                description: >
                                                  An identifier maintained by the VIM or
                                                  other resource provider. It is expected
                                                  to be unique within the VIM instance.
                                                type: string
                    virtualLinkInfo:
                      description: >
                        Information on the VL(s) of the NS instance. This
                        attribute shall be present if the nsState attribute
                        value is INSTANTIATED and if the NS instance has
                        specified connectivity.
                      type: array
                      items:
                        description: >
                          This type specifies the information about an NS VL
                          instance.  It shall comply with the provisions defined
                          in Table 6.5.3.53-1
                        type: object
                        required:
                          - id
                          - nsVirtualLinkDescId
                        properties:
                          id:
                            description: >
                              An identifier that is unique with respect to a
                              NS.  Representation: string of variable length.
                            type: string
                          nsVirtualLinkDescId:
                            description: >
                              An identifier that is unique within a NS
                              descriptor. Representation: string of variable
                              length.
                            type: string
                          resourceHandle:
                            description: >
                              Identifier(s) of the virtualised network
                              resource(s) realizing the VL instance. See note.
                            type: array
                            items:
                              required:
                                - vimConnectionId
                                - resourceId
                              type: object
                              description: >
                                This type represents the information that allows
                                addressing a virtualised resource that is used
                                by a VNF instance. Information about the
                                resource is available from the VIM.
                              properties:
                                vimConnectionId:
                                  description: >
                                    An identifier with the intention of being
                                    globally unique.
                                  type: string
                                resourceProviderId:
                                  description: >
                                    An identifier with the intention of being
                                    globally unique.
                                  type: string
                                resourceId:
                                  description: >
                                    An identifier maintained by the VIM or other
                                    resource provider. It is expected to be
                                    unique within the VIM instance.
                                  type: string
                                vimLevelResourceType:
                                  description: >
                                    Type of the resource in the scope of the VIM
                                    or the resource provider.
                                  type: string
                          linkPort:
                            description: >
                              Link ports of the VL instance. Cardinality of zero
                              indicates that no port has yet been created for
                              the VL instance.
                            type: array
                            items:
                              description: >
                                This type represents information about a link
                                port of a VL instance.  It shall comply with the
                                provisions defined in Table 6.5.3.55-1.
                              type: object
                              required:
                                - id
                                - resourceHandle
                              properties:
                                id:
                                  description: >
                                    An identifier with the intention of being
                                    globally unique.
                                  type: string
                                resourceHandle:
                                  required:
                                    - vimConnectionId
                                    - resourceId
                                  type: object
                                  description: >
                                    This type represents the information that
                                    allows addressing a virtualised resource
                                    that is used by a VNF instance. Information
                                    about the resource is available from the
                                    VIM.
                                  properties:
                                    vimConnectionId:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    resourceProviderId:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    resourceId:
                                      description: >
                                        An identifier maintained by the VIM or
                                        other resource provider. It is expected
                                        to be unique within the VIM instance.
                                      type: string
                                    vimLevelResourceType:
                                      description: >
                                        Type of the resource in the scope of the
                                        VIM or the resource provider.
                                      type: string
                                nsCpHandle:
                                  description: >
                                    Identifier of the CP/SAP instance to be
                                    connected to this link port. The value
                                    refers to a vnfExtCpInfo item in the
                                    VnfInstance, or a pnfExtCpInfo item in the
                                    PnfInfo, or a sapInfo item in the NS
                                    instance. There shall be at most one link
                                    port associated with any connection point
                                    instance.
                                  type: array
                                  items:
                                    description: >
                                      This type represents an identifier of the
                                      CP or SAP instance.  It shall comply with
                                      the provisions defined in Table
                                      6.5.3.56-1.
                                    type: object
                                    properties:
                                      vnfInstanceId:
                                        description: >
                                          An identifier with the intention of
                                          being globally unique.
                                        type: string
                                      vnfExtCpInstanceId:
                                        description: >
                                          An identifier that is unique for the
                                          respective type within a VNF instance,
                                          but may not be globally unique.
                                        type: string
                                      pnfInfoId:
                                        description: >
                                          An identifier with the intention of
                                          being globally unique.
                                        type: string
                                      pnfExtCpInstanceId:
                                        description: >
                                          Identifier of the CP in the scope of the
                                          PNF.
                                        type: string
                                      nsInstanceId:
                                        description: >
                                          An identifier with the intention of
                                          being globally unique.
                                        type: string
                                      nsSapInstanceId:
                                        description: >
                                          An identifier that is unique with
                                          respect to a NS.  Representation: string
                                          of variable length.
                                        type: string
                    vnffgInfo:
                      description: |
                        Information on the VNFFG(s) of the NS instance.
                      type: array
                      items:
                        description: |
                          Information on the VNFFG(s) of the NS instance.
                        type: object
                        required:
                          - id
                          - vnffgdId
                          - vnfInstanceId
                          - pnfInfoId
                        properties:
                          id:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          vnffgdId:
                            description: >
                              An identifier that is unique within a NS
                              descriptor. Representation: string of variable
                              length.
                            type: string
                          vnfInstanceId:
                            description: >
                              Identifier(s) of the constituent VNF instance(s)
                              of this VNFFG instance.
                            type: array
                            items:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                          pnfdInfoId:
                            description: >
                              Identifier(s) of the constituent PNF instance(s)
                              of this VNFFG instance.
                            type: array
                            items:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                          nsVirtualLinkInfoId:
                            description: >
                              Identifier(s) of the constituent VL instance(s) of
                              this VNFFG instance.
                            type: array
                            items:
                              description: >
                                An identifier that is unique with respect to a
                                NS.  Representation: string of variable length.
                              type: string
                          nsCpHandle:
                            description: >
                              Identifiers of the CP instances attached to the
                              constituent VNFs and PNFs or the SAP instances of
                              the VNFFG. See note.
                            type: array
                            items:
                              description: >
                                This type represents an identifier of the CP or
                                SAP instance.  It shall comply with the
                                provisions defined in Table 6.5.3.56-1.
                              type: object
                              properties:
                                vnfInstanceId:
                                  description: >
                                    An identifier with the intention of being
                                    globally unique.
                                  type: string
                                vnfExtCpInstanceId:
                                  description: >
                                    An identifier that is unique for the
                                    respective type within a VNF instance, but
                                    may not be globally unique.
                                  type: string
                                pnfInfoId:
                                  description: >
                                    An identifier with the intention of being
                                    globally unique.
                                  type: string
                                pnfExtCpInstanceId:
                                  description: >
                                    Identifier of the CP in the scope of the
                                    PNF.
                                  type: string
                                nsInstanceId:
                                  description: >
                                    An identifier with the intention of being
                                    globally unique.
                                  type: string
                                nsSapInstanceId:
                                  description: >
                                    An identifier that is unique with respect to
                                    a NS.  Representation: string of variable
                                    length.
                                  type: string
                    sapInfo:
                      description: |
                        Information on the SAP(s) of the NS instance.
                      type: array
                      items:
                        description: >
                          This type represents an SAP instance. It shall comply
                          with the provisions defined in Table 6.5.3.67-1.
                        type: object
                        required:
                          - id
                          - sapdId
                          - sapName
                          - sapProtocolInfo
                        properties:
                          id:
                            description: >
                              An identifier that is unique with respect to a
                              NS.  Representation: string of variable length.
                            type: string
                          sapdId:
                            description: >
                              An identifier that is unique within a NS
                              descriptor. Representation: string of variable
                              length.
                            type: string
                          sapName:
                            description: |
                              Human readable name for the SAP instance.
                            type: string
                          description:
                            description: |
                              Human readable description for the SAP instance.
                            type: string
                          sapProtocolInfo:
                            description: |
                              Network protocol information for this SAP.
                            type: array
                            items:
                              description: >
                                This type describes the protocol layer(s) that a
                                CP or SAP uses together with protocol-related
                                information, like addresses. It shall comply
                                with the provisions defined in Table 6.5.3.58-1.
                              type: object
                              required:
                                - layerProtocol
                                - ipOverEthernet
                              properties:
                                layerProtocol:
                                  description: >
                                    The identifier of layer(s) and protocol(s)
                                    associated to the network address
                                    information. Permitted values:
                                    IP_OVER_ETHERNET See note.
                                  type: string
                                  enum:
                                    - IP_OVER_ETHERNET
                                ipOverEthernet:
                                  description: >
                                    This type represents information about a
                                    network address that has been assigned.  It
                                    shall comply with the provisions defined in
                                    Table 6.5.3.18-1.
                                  type: object
                                  required:
                                    - macAddress
                                    - ipAddresses
                                    - subnetId
                                    - addresses
                                    - addressRange
                                  properties:
                                    macAddress:
                                      description: >
                                        A MAC address. Representation: string
                                        that consists of groups of two
                                        hexadecimal digits, separated by hyphens
                                        or colons.
                                      type: string
                                      format: MAC
                                    ipAddresses:
                                      description: >
                                        Addresses assigned to the CP instance.
                                        Each entry represents IP addresses
                                        assigned by fixed or dynamic IP address
                                        assignment per subnet.
                                      type: array
                                      items:
                                        type: object
                                        required:
                                          - type
                                        properties:
                                          type:
                                            description: >
                                              The type of the IP addresses. Permitted
                                              values: IPV4, IPV6.
                                            type: string
                                            enum:
                                              - IPV4
                                              - IPV6
                                          addresses:
                                            description: >
                                              Fixed addresses assigned (from the
                                              subnet defined by "subnetId" if
                                              provided).
                                            type: array
                                            items:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                          isDynamic:
                                            description: >
                                              Indicates whether this set of addresses
                                              was assigned dynamically (true) or based
                                              on address information provided as input
                                              from the API consumer (false). Shall be
                                              present if "addresses" is present and
                                              shall be absent otherwise.
                                            type: boolean
                                          addressRange:
                                            description: >
                                              An IP address range used, e.g., in case
                                              of egress connections. Exactly one of
                                              "addresses" or "addressRange" shall be
                                              present.
                                            type: object
                                            required:
                                              - minAddress
                                              - maxAddress
                                            properties:
                                              minAddress:
                                                description: >
                                                  An IPV4 or IPV6 address. Representation:
                                                  In case of an IPV4 address, string that
                                                  consists of four decimal integers
                                                  separated by dots, each integer ranging
                                                  from 0 to 255. In case of an IPV6
                                                  address, string that  consists of groups
                                                  of zero to four hexadecimal digits,
                                                  separated by colons.
                                                type: string
                                                format: IP
                                              maxAddress:
                                                description: >
                                                  An IPV4 or IPV6 address. Representation:
                                                  In case of an IPV4 address, string that
                                                  consists of four decimal integers
                                                  separated by dots, each integer ranging
                                                  from 0 to 255. In case of an IPV6
                                                  address, string that  consists of groups
                                                  of zero to four hexadecimal digits,
                                                  separated by colons.
                                                type: string
                                                format: IP
                                          subnetId:
                                            description: >
                                              An identifier maintained by the VIM or
                                              other resource provider. It is expected
                                              to be unique within the VIM instance.
                                            type: string
                                    type:
                                      description: |
                                        The type of the IP addresses
                                      type: string
                                      enum:
                                        - PV4
                                        - PV6
                                    addresses:
                                      description: >
                                        An IPV4 or IPV6 address. Representation:
                                        In case of an IPV4 address, string that
                                        consists of four decimal integers
                                        separated by dots, each integer ranging
                                        from 0 to 255. In case of an IPV6
                                        address, string that  consists of groups
                                        of zero to four hexadecimal digits,
                                        separated by colons.
                                      type: string
                                      format: IP
                                    isDynamic:
                                      description: >
                                        Indicates whether this set of addresses
                                        was assigned dynamically (true) or based
                                        on address information provided as input
                                        from the API consumer (false). Shall be
                                        present if "addresses" is present and
                                        shall be absent otherwise.
                                      type: boolean
                                    addressRange:
                                      description: >
                                        An IP address range used, e.g. in case
                                        of egress connections. See note.
                                      type: object
                                      required:
                                        - minAddress
                                        - maxAddress
                                      properties:
                                        minAddress:
                                          description: >
                                            An IPV4 or IPV6 address. Representation:
                                            In case of an IPV4 address, string that
                                            consists of four decimal integers
                                            separated by dots, each integer ranging
                                            from 0 to 255. In case of an IPV6
                                            address, string that  consists of groups
                                            of zero to four hexadecimal digits,
                                            separated by colons.
                                          type: string
                                          format: IP
                                        maxAddress:
                                          description: >
                                            An IPV4 or IPV6 address. Representation:
                                            In case of an IPV4 address, string that
                                            consists of four decimal integers
                                            separated by dots, each integer ranging
                                            from 0 to 255. In case of an IPV6
                                            address, string that  consists of groups
                                            of zero to four hexadecimal digits,
                                            separated by colons.
                                          type: string
                                          format: IP
                                    minAddress:
                                      description: >
                                        An IPV4 or IPV6 address. Representation:
                                        In case of an IPV4 address, string that
                                        consists of four decimal integers
                                        separated by dots, each integer ranging
                                        from 0 to 255. In case of an IPV6
                                        address, string that  consists of groups
                                        of zero to four hexadecimal digits,
                                        separated by colons.
                                      type: string
                                      format: IP
                                    maxAddress:
                                      description: >
                                        An IPV4 or IPV6 address. Representation:
                                        In case of an IPV4 address, string that
                                        consists of four decimal integers
                                        separated by dots, each integer ranging
                                        from 0 to 255. In case of an IPV6
                                        address, string that  consists of groups
                                        of zero to four hexadecimal digits,
                                        separated by colons.
                                      type: string
                                      format: IP
                                    subnetId:
                                      description: >
                                        An identifier maintained by the VIM or
                                        other resource provider. It is expected
                                        to be unique within the VIM instance.
                                      type: string
                    nestedNsInstanceId:
                      description: |
                        Identifier of the nested NS(s) of the NS instance.
                      type: array
                      items:
                        description: >
                          An identifier with the intention of being globally
                          unique.
                        type: string
                    nsState:
                      description: >
                        The state of the NS instance. Permitted values:
                        NOT_INSTANTIATED: The NS instance is terminated or not
                        instantiated. INSTANTIATED: The NS instance is
                        instantiated.
                      type: string
                      enum:
                        - NOT_INSTANTIATED
                        - INSTANTIATED
                    nsScaleStatus:
                      description: >
                        Status of each NS scaling aspect declared in the
                        applicable DF, how "big" the NS instance has been scaled
                        w.r.t. that aspect. This attribute shall be present if
                        the nsState attribute value is INSTANTIATED.
                      type: array
                      items:
                        description: >
                          This type represents the target NS Scale level for
                          each NS scaling aspect of the current deployment
                          flavor.
                        type: object
                        required:
                          - nsScalingAspectId
                          - nsScaleLevelId
                        properties:
                          nsScalingAspectId:
                            description: >
                              An identifier that is unique within a NS
                              descriptor. Representation: string of variable
                              length.
                            type: string
                          nsScaleLevelId:
                            description: >
                              An identifier that is unique within a NS
                              descriptor. Representation: string of variable
                              length.
                            type: string
                    additionalAffinityOrAntiAffinityRule:
                      description: >
                        Information on the additional affinity or anti-affinity
                        rule from NS instantiation operation. Shall not conflict
                        with rules already specified in the NSD.
                      type: array
                      items:
                        description: >
                          This type describes the additional affinity or
                          anti-affinity rule  applicable between the VNF
                          instances to be instantiated in the NS instantiation
                          operation request or between the VNF instances  to be
                          instantiated in the NS instantiation operation request
                          and the existing VNF instances..
                        type: object
                        required:
                          - affinityOrAntiAffiinty
                          - scope
                        properties:
                          vnfdId:
                            description: >
                              Reference to a VNFD. When the VNFD which is not
                              used to instantiate VNF, it presents all VNF
                              instances of this type as the subjects of the
                              affinity or anti-affinity rule. The VNF instance
                              which the VNFD presents is not necessary as a part
                              of the NS to be instantiated.
                            type: array
                            items:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                          vnfProfileId:
                            description: >
                              Reference to a vnfProfile defined in the NSD. At
                              least one VnfProfile which is used to instantiate
                              VNF for the NS to be instantiated as the subject
                              of the affinity or anti-affinity rule shall be
                              present. When the VnfProfile which is not used to
                              instantiate VNF, it presents all VNF instances of
                              this type as the subjects of the affinity or
                              anti-affinity rule. The VNF instance which the
                              VnfProfile presents is not necessary as a part of
                              the NS to be instantiated.
                            type: array
                            items:
                              description: >
                                An identifier that is unique within a NS
                                descriptor. Representation: string of variable
                                length.
                              type: string
                          vnfInstanceId:
                            description: >
                              Reference to the existing VNF instance as the
                              subject of the affinity or anti-affinity rule. The
                              existing VNF instance is not necessary as a part
                              of the NS to be instantiated.
                            type: array
                            items:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                          affinityOrAntiAffiinty:
                            description: >
                              The type of the constraint. Permitted values:
                              AFFINITY ANTI_AFFINITY.
                            type: string
                            enum:
                              - AFFINITY
                              - ANTI_AFFINITY
                          scope:
                            description: >
                              Specifies the scope of the rule where the
                              placement constraint applies. Permitted values:
                              NFVI_POP ZONE ZONE_GROUP NFVI_NODE.
                            type: string
                            enum:
                              - NFVI_POP
                              - ZONE
                              - ZONE_GROUP
                              - NFVI_NODE
                    _links:
                      type: object
                      description: Links to resources related to this resource.
                      required:
                        - self
                      properties:
                        self:
                          description: |
                            This type represents a link to a resource.
                          type: object
                          required:
                            - href
                          properties:
                            href:
                              description: |
                                URI of the referenced resource.
                              type: string
                              format: url
                        nestedNsInstances:
                          description: |
                            Links to resources related to this notification.
                          type: array
                          items:
                            description: |
                              This type represents a link to a resource.
                            type: object
                            required:
                              - href
                            properties:
                              href:
                                description: |
                                  URI of the referenced resource.
                                type: string
                                format: url
                        instantiate:
                          description: |
                            This type represents a link to a resource.
                          type: object
                          required:
                            - href
                          properties:
                            href:
                              description: |
                                URI of the referenced resource.
                              type: string
                              format: url
                        terminate:
                          description: |
                            This type represents a link to a resource.
                          type: object
                          required:
                            - href
                          properties:
                            href:
                              description: |
                                URI of the referenced resource.
                              type: string
                              format: url
                        update:
                          description: |
                            This type represents a link to a resource.
                          type: object
                          required:
                            - href
                          properties:
                            href:
                              description: |
                                URI of the referenced resource.
                              type: string
                              format: url
                        scale:
                          description: |
                            This type represents a link to a resource.
                          type: object
                          required:
                            - href
                          properties:
                            href:
                              description: |
                                URI of the referenced resource.
                              type: string
                              format: url
                        heal:
                          description: |
                            This type represents a link to a resource.
                          type: object
                          required:
                            - href
                          properties:
                            href:
                              description: |
                                URI of the referenced resource.
                              type: string
                              format: url
        '400':
          description: >
            Error: Invalid attribute selector. The response body shall contain a
            ProblemDetails structure, in which the "detail" attribute should
            convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '401':
          description: >
            Unauthorized If the request contains no access token even though one
            is required, or if the request contains an authorization token that
            is invalid (e.g. expired or revoked), the API producer should
            respond with this response. The details of the error shall be
            returned in the WWW-Authenticate HTTP header, as defined in IETF RFC
            6750 and IETF RFC 7235. The ProblemDetails structure may be
            provided.
          headers:
            Content-Type:
              type: string
              description: The MIME type of the body of the response.
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '403':
          description: >
            Forbidden If the API consumer is not allowed to perform a particular
            request to a particular resource, the API producer shall respond
            with this response code. The "ProblemDetails" structure shall be
            provided.  It should include in the "detail" attribute information
            about the source of the problem, and may indicate how to solve it.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '404':
          description: >
            Not Found If the API producer did not find a current representation
            for the resource addressed by the URI passed in the request, or is
            not willing to disclose that one exists, it shall respond with this
            response code.  The "ProblemDetails" structure may be provided,
            including in the "detail" attribute information about the source of
            the problem, e.g. a wrong resource URI variable.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '405':
          description: >
            Method Not Allowed If a particular HTTP method is not supported for
            a particular resource, the API producer shall respond with this
            response code. The "ProblemDetails" structure may be omitted in that
            case.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '406':
          description: >
            Not Acceptable If the Accept HTTP header does not contain at least
            one name of a content type that is acceptable to the API producer,
            the API producer shall respond with this response code. The
            ProblemDetails structure may be omitted in that case.        
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '409':
          description: >
            Conflict

            Another request is in progress that prohibits the fulfilment of the
            current request, or the current resource state is inconsistent with
            the request.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '416':
          description: >
            Requested Range Not Satisfiable This code is returned if the
            requested byte range in the Range HTTP header is not present in the
            requested resource.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '500':
          description: >
            Internal Server Error If there is an application error not related
            to the client's input that cannot be easily mapped to any other HTTP
            response code ("catch all error"), the API producer shall respond
            withthis response code. The ProblemDetails structure shall be
            provided, and shall include in the "detail" attribute more
            information about the source of the problem.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '503':
          description: >
            Service Unavailable If the API producer encounters an internal
            overload situation of itself or of a system it relies on, it should
            respond with this response code, following the provisions in IETF
            RFC 7231 [13] for the use of the Retry-After HTTP header and for the
            alternative to refuse the connection. The "ProblemDetails" structure
            may be omitted.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
  '/ns_instances/{nsInstanceId}':
    parameters:
      - name: nsInstanceId
        description: |
          Identifier of the NS instance.
        in: path
        type: string
        required: true
    get:
      summary: Read an individual NS instance resource.
      description: >
        The GET method retrieves information about a NS instance by  reading an
        individual NS instance resource.   
      parameters:
        - name: Accept
          description: >
            Content-Types that are acceptable for the response. Reference: IETF
            RFC 7231
          in: header
          required: true
          type: string
        - name: Authorization
          description: |
            The authorization token for the request. Reference: IETF RFC 7235
          in: header
          required: false
          type: string
        - name: Content-Type
          description: |
            The MIME type of the body of the request. Reference: IETF RFC 7231
          in: header
          required: true
          type: string
      responses:
        '200':
          description: >
            200 OK

            Information about an individual NS instance was queried
            successfully. The response body shall contain a representation of
            the NS instance.
          schema:
            type: object
            properties:
              NsInstance:
                description: >
                  This type represents a response for Query NS operation.  It
                  shall comply with the provisions defined in Table 6.5.2.10-1.
                type: object
                required:
                  - id
                  - nsInstanceName
                  - nsInstanceDescription
                  - nsdId
                  - nsdInfoId
                  - nsState
                properties:
                  id:
                    description: |
                      An identifier with the intention of being globally unique.
                    type: string
                  nsInstanceName:
                    description: |
                      Human readable name of the NS instance.
                    type: string
                  nsInstanceDescription:
                    description: |
                      Human readable description of the NS instance.
                    type: string
                  nsdId:
                    description: |
                      An identifier with the intention of being globally unique.
                    type: string
                  nsdInfoId:
                    description: |
                      An identifier with the intention of being globally unique.
                    type: string
                  flavourId:
                    description: >
                      An identifier that is unique within a NS descriptor.
                      Representation: string of variable length.
                    type: string
                  vnfInstance:
                    description: |
                      Information on constituent VNF(s) of the NS instance.
                    type: array
                    items:
                      description: |
                        This type represents a VNF instance.
                      type: object
                      required:
                        - id
                        - vnfdId
                        - vnfProvider
                        - vnfProductName
                        - vnfSoftwareVersion
                        - vnfdVersion
                        - vnfPkgId
                        - instantiationState
                      properties:
                        id:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        vnfInstanceName:
                          description: >
                            Name of the VNF instance. This attribute can be
                            modified with the PATCH method.
                          type: string
                        vnfInstanceDescription:
                          description: >
                            Human-readable description of the VNF instance. This
                            attribute can be modified with the PATCH method.
                          type: string
                        vnfdId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        vnfProvider:
                          description: >
                            Provider of the VNF and the VNFD. The value is
                            copied from the VNFD.
                          type: string
                        vnfProductName:
                          description: >
                            Name to identify the VNF Product. The value is
                            copied from the VNFD.
                          type: string
                        vnfSoftwareVersion:
                          description: |
                            A Version.
                          type: string
                        vnfdVersion:
                          description: |
                            A Version.
                          type: string
                        vnfPkgId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        vnfConfigurableProperties:
                          description: >
                            This type represents a list of key-value pairs. The
                            order of the pairs in the list is not significant.
                            In JSON, a set of key- value pairs is represented as
                            an object. It shall comply with the provisions 
                            defined in clause 4 of IETF RFC 7159. 
                          type: object
                        vimId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        instantiationState:
                          description: |
                            The instantiation state of the VNF.
                          type: string
                          enum:
                            - NOT_INSTANTIATED
                            - INSTANTIATED
                        instantiatedVnfInfo:
                          description: >
                            Information specific to an instantiated VNF
                            instance. This attribute shall be present if the
                            instantiateState attribute value is INSTANTIATED.
                          type: object
                          required:
                            - flavourId
                            - vnfState
                          properties:
                            flavourId:
                              description: >
                                Identifier of the VNF Virtual Link Descriptor
                                (VLD) in the VNFD.
                              type: string
                            vnfState:
                              type: string
                              enum:
                                - STARTED
                                - STOPPED
                            scaleStatus:
                              description: >
                                Scale status of the VNF, one entry per aspect.
                                Represents for every scaling aspect how "big"
                                the VNF has been scaled w.r.t. that aspect.
                              type: array
                              items:
                                required:
                                  - aspectId
                                  - scaleLevel
                                type: object
                                properties:
                                  aspectId:
                                    description: >
                                      Identifier of the VNF Virtual Link
                                      Descriptor (VLD) in the VNFD.
                                    type: string
                                  scaleLevel:
                                    description: >
                                      Indicates the scale level. The minimum
                                      value shall be 0 and the maximum value
                                      shall be <= maxScaleLevel as described in
                                      the VNFD.
                                    type: integer
                            extCpInfo:
                              description: >
                                Information about the external CPs exposed by
                                the VNF instance.
                              type: array
                              minItems: 1
                              items:
                                type: object
                                required:
                                  - id
                                  - cpdId
                                properties:
                                  id:
                                    description: >
                                      An identifier that is unique for the
                                      respective type within a VNF instance, but
                                      may not be globally unique.
                                    type: string
                                  cpdId:
                                    description: >
                                      Identifier of the VNF Virtual Link
                                      Descriptor (VLD) in the VNFD.
                                    type: string
                                  cpProtocolInfo:
                                    description: |
                                      Network protocol information for this CP.
                                    type: array
                                    items:
                                      description: >
                                        This type describes the protocol
                                        layer(s) that a CP or SAP uses together
                                        with protocol-related information, like
                                        addresses. It shall comply with the
                                        provisions defined in Table 6.5.3.58-1.
                                      type: object
                                      required:
                                        - layerProtocol
                                        - ipOverEthernet
                                      properties:
                                        layerProtocol:
                                          description: >
                                            The identifier of layer(s) and
                                            protocol(s) associated to the network
                                            address information. Permitted values:
                                            IP_OVER_ETHERNET See note.
                                          type: string
                                          enum:
                                            - IP_OVER_ETHERNET
                                        ipOverEthernet:
                                          description: >
                                            This type represents information about a
                                            network address that has been assigned. 
                                            It shall comply with the provisions
                                            defined in Table 6.5.3.18-1.
                                          type: object
                                          required:
                                            - macAddress
                                            - ipAddresses
                                            - subnetId
                                            - addresses
                                            - addressRange
                                          properties:
                                            macAddress:
                                              description: >
                                                A MAC address. Representation: string
                                                that consists of groups of two
                                                hexadecimal digits, separated by hyphens
                                                or colons.
                                              type: string
                                              format: MAC
                                            ipAddresses:
                                              description: >
                                                Addresses assigned to the CP instance.
                                                Each entry represents IP addresses
                                                assigned by fixed or dynamic IP address
                                                assignment per subnet.
                                              type: array
                                              items:
                                                type: object
                                                required:
                                                  - type
                                                properties:
                                                  type:
                                                    description: >
                                                      The type of the IP addresses. Permitted
                                                      values: IPV4, IPV6.
                                                    type: string
                                                    enum:
                                                      - IPV4
                                                      - IPV6
                                                  addresses:
                                                    description: >
                                                      Fixed addresses assigned (from the
                                                      subnet defined by "subnetId" if
                                                      provided).
                                                    type: array
                                                    items:
                                                      description: >
                                                        An IPV4 or IPV6 address. Representation:
                                                        In case of an IPV4 address, string that
                                                        consists of four decimal integers
                                                        separated by dots, each integer ranging
                                                        from 0 to 255. In case of an IPV6
                                                        address, string that  consists of groups
                                                        of zero to four hexadecimal digits,
                                                        separated by colons.
                                                      type: string
                                                      format: IP
                                                  isDynamic:
                                                    description: >
                                                      Indicates whether this set of addresses
                                                      was assigned dynamically (true) or based
                                                      on address information provided as input
                                                      from the API consumer (false). Shall be
                                                      present if "addresses" is present and
                                                      shall be absent otherwise.
                                                    type: boolean
                                                  addressRange:
                                                    description: >
                                                      An IP address range used, e.g., in case
                                                      of egress connections. Exactly one of
                                                      "addresses" or "addressRange" shall be
                                                      present.
                                                    type: object
                                                    required:
                                                      - minAddress
                                                      - maxAddress
                                                    properties:
                                                      minAddress:
                                                        description: >
                                                          An IPV4 or IPV6 address. Representation:
                                                          In case of an IPV4 address, string that
                                                          consists of four decimal integers
                                                          separated by dots, each integer ranging
                                                          from 0 to 255. In case of an IPV6
                                                          address, string that  consists of groups
                                                          of zero to four hexadecimal digits,
                                                          separated by colons.
                                                        type: string
                                                        format: IP
                                                      maxAddress:
                                                        description: >
                                                          An IPV4 or IPV6 address. Representation:
                                                          In case of an IPV4 address, string that
                                                          consists of four decimal integers
                                                          separated by dots, each integer ranging
                                                          from 0 to 255. In case of an IPV6
                                                          address, string that  consists of groups
                                                          of zero to four hexadecimal digits,
                                                          separated by colons.
                                                        type: string
                                                        format: IP
                                                  subnetId:
                                                    description: >
                                                      An identifier maintained by the VIM or
                                                      other resource provider. It is expected
                                                      to be unique within the VIM instance.
                                                    type: string
                                            type:
                                              description: |
                                                The type of the IP addresses
                                              type: string
                                              enum:
                                                - PV4
                                                - PV6
                                            addresses:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                            isDynamic:
                                              description: >
                                                Indicates whether this set of addresses
                                                was assigned dynamically (true) or based
                                                on address information provided as input
                                                from the API consumer (false). Shall be
                                                present if "addresses" is present and
                                                shall be absent otherwise.
                                              type: boolean
                                            addressRange:
                                              description: >
                                                An IP address range used, e.g. in case
                                                of egress connections. See note.
                                              type: object
                                              required:
                                                - minAddress
                                                - maxAddress
                                              properties:
                                                minAddress:
                                                  description: >
                                                    An IPV4 or IPV6 address. Representation:
                                                    In case of an IPV4 address, string that
                                                    consists of four decimal integers
                                                    separated by dots, each integer ranging
                                                    from 0 to 255. In case of an IPV6
                                                    address, string that  consists of groups
                                                    of zero to four hexadecimal digits,
                                                    separated by colons.
                                                  type: string
                                                  format: IP
                                                maxAddress:
                                                  description: >
                                                    An IPV4 or IPV6 address. Representation:
                                                    In case of an IPV4 address, string that
                                                    consists of four decimal integers
                                                    separated by dots, each integer ranging
                                                    from 0 to 255. In case of an IPV6
                                                    address, string that  consists of groups
                                                    of zero to four hexadecimal digits,
                                                    separated by colons.
                                                  type: string
                                                  format: IP
                                            minAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                            maxAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                            subnetId:
                                              description: >
                                                An identifier maintained by the VIM or
                                                other resource provider. It is expected
                                                to be unique within the VIM instance.
                                              type: string
                                  extLinkPortId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                            extVirtualLinkInfo:
                              description: >
                                Information about the external VLs the VNF
                                instance is connected to.
                              type: array
                              items:
                                type: object
                                required:
                                  - id
                                  - resourceHandle
                                properties:
                                  id:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceHandle:
                                    required:
                                      - vimConnectionId
                                      - resourceId
                                    type: object
                                    description: >
                                      This type represents the information that
                                      allows addressing a virtualised resource
                                      that is used by a VNF instance.
                                      Information about the resource is
                                      available from the VIM.
                                    properties:
                                      vimConnectionId:
                                        description: >
                                          An identifier with the intention of
                                          being globally unique.
                                        type: string
                                      resourceProviderId:
                                        description: >
                                          An identifier with the intention of
                                          being globally unique.
                                        type: string
                                      resourceId:
                                        description: >
                                          An identifier maintained by the VIM or
                                          other resource provider. It is expected
                                          to be unique within the VIM instance.
                                        type: string
                                      vimLevelResourceType:
                                        description: >
                                          Type of the resource in the scope of the
                                          VIM or the resource provider.
                                        type: string
                                  extLinkPorts:
                                    description: |
                                      Link ports of this VL.
                                    type: array
                                    items:
                                      description: >
                                        This type represents information about a
                                        link port of an external VL, i.e. a port
                                        providing connectivity for the VNF to an
                                        NS VL. 
                                      type: object
                                      required:
                                        - id
                                        - resourceHandle
                                      properties:
                                        id:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceHandle:
                                          required:
                                            - vimConnectionId
                                            - resourceId
                                          type: object
                                          description: >
                                            This type represents the information
                                            that allows addressing a virtualised
                                            resource that is used by a VNF instance.
                                            Information about the resource is
                                            available from the VIM.
                                          properties:
                                            vimConnectionId:
                                              description: >
                                                An identifier with the intention of
                                                being globally unique.
                                              type: string
                                            resourceProviderId:
                                              description: >
                                                An identifier with the intention of
                                                being globally unique.
                                              type: string
                                            resourceId:
                                              description: >
                                                An identifier maintained by the VIM or
                                                other resource provider. It is expected
                                                to be unique within the VIM instance.
                                              type: string
                                            vimLevelResourceType:
                                              description: >
                                                Type of the resource in the scope of the
                                                VIM or the resource provider.
                                              type: string
                                        cpInstanceId:
                                          description: >
                                            An identifier that is unique for the
                                            respective type within a VNF instance,
                                            but may not be globally unique.
                                          type: string
                            extManagedVirtualLinkInfo:
                              description: >
                                External virtual links the VNF instance is
                                connected to.
                              type: array
                              items:
                                type: object
                                required:
                                  - id
                                  - vnfVirtualLinkDescId
                                properties:
                                  id:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  vnfVirtualLinkDescId:
                                    description: >
                                      Identifier of the VNF Virtual Link
                                      Descriptor (VLD) in the VNFD.
                                    type: string
                                  networkResource:
                                    required:
                                      - vimConnectionId
                                      - resourceId
                                    type: object
                                    description: >
                                      This type represents the information that
                                      allows addressing a virtualised resource
                                      that is used by a VNF instance.
                                      Information about the resource is
                                      available from the VIM.
                                    properties:
                                      vimConnectionId:
                                        description: >
                                          An identifier with the intention of
                                          being globally unique.
                                        type: string
                                      resourceProviderId:
                                        description: >
                                          An identifier with the intention of
                                          being globally unique.
                                        type: string
                                      resourceId:
                                        description: >
                                          An identifier maintained by the VIM or
                                          other resource provider. It is expected
                                          to be unique within the VIM instance.
                                        type: string
                                      vimLevelResourceType:
                                        description: >
                                          Type of the resource in the scope of the
                                          VIM or the resource provider.
                                        type: string
                                  vnfLinkPorts:
                                    description: |
                                      Link ports of this VL.
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - id
                                        - resourceHandle
                                      properties:
                                        id:
                                          description: >
                                            An identifier that is unique for the
                                            respective type within a VNF instance,
                                            but may not be globally unique.
                                          type: string
                                        resourceHandle:
                                          required:
                                            - vimConnectionId
                                            - resourceId
                                          type: object
                                          description: >
                                            This type represents the information
                                            that allows addressing a virtualised
                                            resource that is used by a VNF instance.
                                            Information about the resource is
                                            available from the VIM.
                                          properties:
                                            vimConnectionId:
                                              description: >
                                                An identifier with the intention of
                                                being globally unique.
                                              type: string
                                            resourceProviderId:
                                              description: >
                                                An identifier with the intention of
                                                being globally unique.
                                              type: string
                                            resourceId:
                                              description: >
                                                An identifier maintained by the VIM or
                                                other resource provider. It is expected
                                                to be unique within the VIM instance.
                                              type: string
                                            vimLevelResourceType:
                                              description: >
                                                Type of the resource in the scope of the
                                                VIM or the resource provider.
                                              type: string
                                        cpInstanceId:
                                          description: >
                                            An identifier that is unique for the
                                            respective type within a VNF instance,
                                            but may not be globally unique.
                                          type: string
                            monitoringParameters:
                              description: |
                                Active monitoring parameters.
                              type: array
                              items:
                                type: object
                                required:
                                  - id
                                  - value
                                  - timeStamp
                                properties:
                                  id:
                                    description: >
                                      Identifier of the VNF Virtual Link
                                      Descriptor (VLD) in the VNFD.
                                    type: string
                                  name:
                                    description: >
                                      Human readable name of the monitoring
                                      parameter, as defined in the VNFD.
                                    type: string
                                  value:
                                    description: >
                                      Value of the monitoring parameter known to
                                      the VNFM (e.g. obtained for auto-scaling
                                      purposes). The type of the "value"
                                      attribute (i.e. scalar, structure (Object
                                      in JSON), or array (of scalars, arrays or
                                      structures/Objects)) is assumed to be
                                      defined in an external measurement
                                      specification.
                                    type: object
                                  timeStamp:
                                    description: >
                                      Represents the point in time when the
                                      measurement has been performed, as known
                                      to the VNFM. Should be formatted according
                                      to ETF RFC 3339.
                                    type: string
                            localizationLanguage:
                              description: >
                                Information about localization language of the
                                VNF (includes e.g. strings in the VNFD). The
                                localization languages supported by a VNF can be
                                declared in the VNFD, and localization language
                                selection can take place at instantiation time.
                                The value shall comply with the format defined
                                in IETF RFC 5646.
                              type: string
                            vnfcResourceInfo:
                              description: >
                                Information about the virtualised compute and
                                storage resources used by the VNFCs of the VNF
                                instance.
                              type: array
                              items:
                                description: >
                                  This type represents the information on
                                  virtualised compute and storage resources used
                                  by a VNFC in a VNF instance.
                                type: object
                                required:
                                  - id
                                  - vduId
                                  - computeResource
                                properties:
                                  id:
                                    description: >
                                      An identifier that is unique for the
                                      respective type within a VNF instance, but
                                      may not be globally unique.
                                    type: string
                                  vduId:
                                    description: >
                                      Identifier of the VNF Virtual Link
                                      Descriptor (VLD) in the VNFD.
                                    type: string
                                  computeResource:
                                    required:
                                      - vimConnectionId
                                      - resourceId
                                    type: object
                                    description: >
                                      This type represents the information that
                                      allows addressing a virtualised resource
                                      that is used by a VNF instance.
                                      Information about the resource is
                                      available from the VIM.
                                    properties:
                                      vimConnectionId:
                                        description: >
                                          An identifier with the intention of
                                          being globally unique.
                                        type: string
                                      resourceProviderId:
                                        description: >
                                          An identifier with the intention of
                                          being globally unique.
                                        type: string
                                      resourceId:
                                        description: >
                                          An identifier maintained by the VIM or
                                          other resource provider. It is expected
                                          to be unique within the VIM instance.
                                        type: string
                                      vimLevelResourceType:
                                        description: >
                                          Type of the resource in the scope of the
                                          VIM or the resource provider.
                                        type: string
                                  storageResourceIds:
                                    description: >
                                      References to the VirtualStorage
                                      resources. The value refers to a
                                      VirtualStorageResourceInfo item in the
                                      VnfInstance.
                                    type: array
                                    items:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                  reservationId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  vnfcCpInfo:
                                    description: >
                                      CPs of the VNFC instance. Shall be present
                                      when that particular CP of the VNFC
                                      instance is associated to an external CP
                                      of the VNF instance. May be present
                                      otherwise.
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - id
                                        - cpdId
                                      properties:
                                        id:
                                          description: >
                                            An identifier that is unique for the
                                            respective type within a VNF instance,
                                            but may not be globally unique.
                                          type: string
                                        cpdId:
                                          description: >
                                            Identifier of the VNF Virtual Link
                                            Descriptor (VLD) in the VNFD.
                                          type: string
                                        vnfExtCpId:
                                          description: >
                                            An identifier that is unique for the
                                            respective type within a VNF instance,
                                            but may not be globally unique.
                                          type: string
                                        cpProtocolInfo:
                                          description: >
                                            Network protocol information for this
                                            CP.
                                          type: array
                                          items:
                                            description: >
                                              This type describes the protocol
                                              layer(s) that a CP or SAP uses together
                                              with protocol-related information, like
                                              addresses. It shall comply with the
                                              provisions defined in Table 6.5.3.58-1.
                                            type: object
                                            required:
                                              - layerProtocol
                                              - ipOverEthernet
                                            properties:
                                              layerProtocol:
                                                description: >
                                                  The identifier of layer(s) and
                                                  protocol(s) associated to the network
                                                  address information. Permitted values:
                                                  IP_OVER_ETHERNET See note.
                                                type: string
                                                enum:
                                                  - IP_OVER_ETHERNET
                                              ipOverEthernet:
                                                description: >
                                                  This type represents information about a
                                                  network address that has been assigned. 
                                                  It shall comply with the provisions
                                                  defined in Table 6.5.3.18-1.
                                                type: object
                                                required:
                                                  - macAddress
                                                  - ipAddresses
                                                  - subnetId
                                                  - addresses
                                                  - addressRange
                                                properties:
                                                  macAddress:
                                                    description: >
                                                      A MAC address. Representation: string
                                                      that consists of groups of two
                                                      hexadecimal digits, separated by hyphens
                                                      or colons.
                                                    type: string
                                                    format: MAC
                                                  ipAddresses:
                                                    description: >
                                                      Addresses assigned to the CP instance.
                                                      Each entry represents IP addresses
                                                      assigned by fixed or dynamic IP address
                                                      assignment per subnet.
                                                    type: array
                                                    items:
                                                      type: object
                                                      required:
                                                        - type
                                                      properties:
                                                        type:
                                                          description: >
                                                            The type of the IP addresses. Permitted
                                                            values: IPV4, IPV6.
                                                          type: string
                                                          enum:
                                                            - IPV4
                                                            - IPV6
                                                        addresses:
                                                          description: >
                                                            Fixed addresses assigned (from the
                                                            subnet defined by "subnetId" if
                                                            provided).
                                                          type: array
                                                          items:
                                                            description: >
                                                              An IPV4 or IPV6 address. Representation:
                                                              In case of an IPV4 address, string that
                                                              consists of four decimal integers
                                                              separated by dots, each integer ranging
                                                              from 0 to 255. In case of an IPV6
                                                              address, string that  consists of groups
                                                              of zero to four hexadecimal digits,
                                                              separated by colons.
                                                            type: string
                                                            format: IP
                                                        isDynamic:
                                                          description: >
                                                            Indicates whether this set of addresses
                                                            was assigned dynamically (true) or based
                                                            on address information provided as input
                                                            from the API consumer (false). Shall be
                                                            present if "addresses" is present and
                                                            shall be absent otherwise.
                                                          type: boolean
                                                        addressRange:
                                                          description: >
                                                            An IP address range used, e.g., in case
                                                            of egress connections. Exactly one of
                                                            "addresses" or "addressRange" shall be
                                                            present.
                                                          type: object
                                                          required:
                                                            - minAddress
                                                            - maxAddress
                                                          properties:
                                                            minAddress:
                                                              description: >
                                                                An IPV4 or IPV6 address. Representation:
                                                                In case of an IPV4 address, string that
                                                                consists of four decimal integers
                                                                separated by dots, each integer ranging
                                                                from 0 to 255. In case of an IPV6
                                                                address, string that  consists of groups
                                                                of zero to four hexadecimal digits,
                                                                separated by colons.
                                                              type: string
                                                              format: IP
                                                            maxAddress:
                                                              description: >
                                                                An IPV4 or IPV6 address. Representation:
                                                                In case of an IPV4 address, string that
                                                                consists of four decimal integers
                                                                separated by dots, each integer ranging
                                                                from 0 to 255. In case of an IPV6
                                                                address, string that  consists of groups
                                                                of zero to four hexadecimal digits,
                                                                separated by colons.
                                                              type: string
                                                              format: IP
                                                        subnetId:
                                                          description: >
                                                            An identifier maintained by the VIM or
                                                            other resource provider. It is expected
                                                            to be unique within the VIM instance.
                                                          type: string
                                                  type:
                                                    description: |
                                                      The type of the IP addresses
                                                    type: string
                                                    enum:
                                                      - PV4
                                                      - PV6
                                                  addresses:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                                  isDynamic:
                                                    description: >
                                                      Indicates whether this set of addresses
                                                      was assigned dynamically (true) or based
                                                      on address information provided as input
                                                      from the API consumer (false). Shall be
                                                      present if "addresses" is present and
                                                      shall be absent otherwise.
                                                    type: boolean
                                                  addressRange:
                                                    description: >
                                                      An IP address range used, e.g. in case
                                                      of egress connections. See note.
                                                    type: object
                                                    required:
                                                      - minAddress
                                                      - maxAddress
                                                    properties:
                                                      minAddress:
                                                        description: >
                                                          An IPV4 or IPV6 address. Representation:
                                                          In case of an IPV4 address, string that
                                                          consists of four decimal integers
                                                          separated by dots, each integer ranging
                                                          from 0 to 255. In case of an IPV6
                                                          address, string that  consists of groups
                                                          of zero to four hexadecimal digits,
                                                          separated by colons.
                                                        type: string
                                                        format: IP
                                                      maxAddress:
                                                        description: >
                                                          An IPV4 or IPV6 address. Representation:
                                                          In case of an IPV4 address, string that
                                                          consists of four decimal integers
                                                          separated by dots, each integer ranging
                                                          from 0 to 255. In case of an IPV6
                                                          address, string that  consists of groups
                                                          of zero to four hexadecimal digits,
                                                          separated by colons.
                                                        type: string
                                                        format: IP
                                                  minAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                                  maxAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                                  subnetId:
                                                    description: >
                                                      An identifier maintained by the VIM or
                                                      other resource provider. It is expected
                                                      to be unique within the VIM instance.
                                                    type: string
                                        vnfLinkPortId:
                                          description: >
                                            An identifier that is unique for the
                                            respective type within a VNF instance,
                                            but may not be globally unique.
                                          type: string
                                  metadata:
                                    description: >
                                      This type represents a list of key-value
                                      pairs. The order of the pairs in the list
                                      is not significant. In JSON, a set of key-
                                      value pairs is represented as an object.
                                      It shall comply with the provisions 
                                      defined in clause 4 of IETF RFC 7159. 
                                    type: object
                            virtualLinkResourceInfo:
                              description: >
                                Information about the virtualised network
                                resources used by the VLs of the VNF instance.
                              type: array
                              items:
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by an internal VL instance in a VNF
                                  instance.
                                type: object
                                required:
                                  - id
                                  - vnfVirtualLinkDescId
                                  - networkResource
                                properties:
                                  id:
                                    description: >
                                      An identifier that is unique for the
                                      respective type within a VNF instance, but
                                      may not be globally unique.
                                    type: string
                                  vnfVirtualLinkDescId:
                                    description: >
                                      Identifier of the VNF Virtual Link
                                      Descriptor (VLD) in the VNFD.
                                    type: string
                                  networkResource:
                                    required:
                                      - vimConnectionId
                                      - resourceId
                                    type: object
                                    description: >
                                      This type represents the information that
                                      allows addressing a virtualised resource
                                      that is used by a VNF instance.
                                      Information about the resource is
                                      available from the VIM.
                                    properties:
                                      vimConnectionId:
                                        description: >
                                          An identifier with the intention of
                                          being globally unique.
                                        type: string
                                      resourceProviderId:
                                        description: >
                                          An identifier with the intention of
                                          being globally unique.
                                        type: string
                                      resourceId:
                                        description: >
                                          An identifier maintained by the VIM or
                                          other resource provider. It is expected
                                          to be unique within the VIM instance.
                                        type: string
                                      vimLevelResourceType:
                                        description: >
                                          Type of the resource in the scope of the
                                          VIM or the resource provider.
                                        type: string
                                  reservationId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  vnfLinkPorts:
                                    description: >
                                      Links ports of this VL. Shall be present
                                      when the linkPort is used for external
                                      connectivity by the VNF (refer to
                                      VnfLinkPortInfo). May be present
                                      otherwise.
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - id
                                        - resourceHandle
                                      properties:
                                        id:
                                          description: >
                                            An identifier that is unique for the
                                            respective type within a VNF instance,
                                            but may not be globally unique.
                                          type: string
                                        resourceHandle:
                                          required:
                                            - vimConnectionId
                                            - resourceId
                                          type: object
                                          description: >
                                            This type represents the information
                                            that allows addressing a virtualised
                                            resource that is used by a VNF instance.
                                            Information about the resource is
                                            available from the VIM.
                                          properties:
                                            vimConnectionId:
                                              description: >
                                                An identifier with the intention of
                                                being globally unique.
                                              type: string
                                            resourceProviderId:
                                              description: >
                                                An identifier with the intention of
                                                being globally unique.
                                              type: string
                                            resourceId:
                                              description: >
                                                An identifier maintained by the VIM or
                                                other resource provider. It is expected
                                                to be unique within the VIM instance.
                                              type: string
                                            vimLevelResourceType:
                                              description: >
                                                Type of the resource in the scope of the
                                                VIM or the resource provider.
                                              type: string
                                        cpInstanceId:
                                          description: >
                                            An identifier that is unique for the
                                            respective type within a VNF instance,
                                            but may not be globally unique.
                                          type: string
                                  metadata:
                                    description: >
                                      This type represents a list of key-value
                                      pairs. The order of the pairs in the list
                                      is not significant. In JSON, a set of key-
                                      value pairs is represented as an object.
                                      It shall comply with the provisions 
                                      defined in clause 4 of IETF RFC 7159. 
                                    type: object
                            virtualStorageResourceInfo:
                              description: >
                                Information on the virtualised storage
                                resource(s) used as storage for the VNF
                                instance.
                              type: array
                              items:
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance.
                                type: object
                                required:
                                  - id
                                  - virtualStorageDescId
                                  - storageResource
                                properties:
                                  id:
                                    description: >
                                      An identifier that is unique for the
                                      respective type within a VNF instance, but
                                      may not be globally unique.
                                    type: string
                                  virtualStorageDescId:
                                    description: >
                                      Identifier of the VNF Virtual Link
                                      Descriptor (VLD) in the VNFD.
                                    type: string
                                  storageResource:
                                    required:
                                      - vimConnectionId
                                      - resourceId
                                    type: object
                                    description: >
                                      This type represents the information that
                                      allows addressing a virtualised resource
                                      that is used by a VNF instance.
                                      Information about the resource is
                                      available from the VIM.
                                    properties:
                                      vimConnectionId:
                                        description: >
                                          An identifier with the intention of
                                          being globally unique.
                                        type: string
                                      resourceProviderId:
                                        description: >
                                          An identifier with the intention of
                                          being globally unique.
                                        type: string
                                      resourceId:
                                        description: >
                                          An identifier maintained by the VIM or
                                          other resource provider. It is expected
                                          to be unique within the VIM instance.
                                        type: string
                                      vimLevelResourceType:
                                        description: >
                                          Type of the resource in the scope of the
                                          VIM or the resource provider.
                                        type: string
                                  reservationId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  metadata:
                                    description: >
                                      This type represents a list of key-value
                                      pairs. The order of the pairs in the list
                                      is not significant. In JSON, a set of key-
                                      value pairs is represented as an object.
                                      It shall comply with the provisions 
                                      defined in clause 4 of IETF RFC 7159. 
                                    type: object
                        metadata:
                          description: >
                            This type represents a list of key-value pairs. The
                            order of the pairs in the list is not significant.
                            In JSON, a set of key- value pairs is represented as
                            an object. It shall comply with the provisions 
                            defined in clause 4 of IETF RFC 7159. 
                          type: object
                        extensions:
                          description: >
                            This type represents a list of key-value pairs. The
                            order of the pairs in the list is not significant.
                            In JSON, a set of key- value pairs is represented as
                            an object. It shall comply with the provisions 
                            defined in clause 4 of IETF RFC 7159. 
                          type: object
                  pnfInfo:
                    description: >
                      Information on the PNF(s) that are part of the NS
                      instance.
                    type: array
                    items:
                      description: >
                        This type represents the information about a PNF that is
                        part of an NS instance.  It shall comply with the
                        provisions defined in Table 6.5.3.13-1.
                      type: object
                      required:
                        - pnfId
                        - pnfdId
                        - pnfdInfoId
                        - pnfProfileId
                      properties:
                        pnfId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        pnfName:
                          description: |
                            Name of the PNF.
                          type: string
                        pnfdId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        pnfdInfoId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        pnfProfileId:
                          description: >
                            An identifier that is unique within a NS descriptor.
                            Representation: string of variable length.
                          type: string
                        cpInfo:
                          description: >
                            This type represents the information about the
                            external CP of the PNF.  It shall comply with the
                            provisions defined in Table 6.5.3.17-1.
                          type: object
                          required:
                            - cpInstanceId
                            - cpdId
                          properties:
                            cpInstanceId:
                              description: |
                                Identifier of the CP in the scope of the PNF.
                              type: string
                            cpdId:
                              description: >
                                An identifier that is unique within a NS
                                descriptor. Representation: string of variable
                                length.
                              type: string
                            cpProtocolData:
                              description: >
                                Parameters for configuring the network protocols
                                on the CP.
                              type: array
                              items:
                                description: |
                                  This type represents network protocol data. 
                                type: object
                                required:
                                  - layerProtocol
                                properties:
                                  layerProtocol:
                                    description: >
                                      Identifier of layer(s) and protocol(s).
                                      Permitted values: IP_OVER_ETHERNET.
                                    type: string
                                    enum:
                                      - IP_OVER_ETHERNET
                                  ipOverEthernet:
                                    description: >
                                      This type represents network address data
                                      for IP over Ethernet.
                                    type: object
                                    properties:
                                      macAddress:
                                        description: >
                                          A MAC address. Representation: string
                                          that consists of groups of two
                                          hexadecimal digits, separated by hyphens
                                          or colons.
                                        type: string
                                        format: MAC
                                      ipAddresses:
                                        description: >
                                          List of IP addresses to assign to the CP
                                          instance. Each entry represents IP
                                          address data for fixed or dynamic IP
                                          address assignment per subnet. If this
                                          attribute is not present, no IP address
                                          shall be assigned.
                                        type: array
                                        items:
                                          type: object
                                          required:
                                            - type
                                          properties:
                                            type:
                                              description: >
                                                The type of the IP addresses. Permitted
                                                values: IPV4, IPV6.
                                              type: string
                                              enum:
                                                - IPV4
                                                - IPV6
                                            fixedAddresses:
                                              description: >
                                                Fixed addresses to assign (from the
                                                subnet defined by "subnetId" if
                                                provided). Exactly one of
                                                "fixedAddresses", "numDynamicAddresses"
                                                or "ipAddressRange" shall be present.
                                              type: array
                                              items:
                                                description: >
                                                  An IPV4 or IPV6 address. Representation:
                                                  In case of an IPV4 address, string that
                                                  consists of four decimal integers
                                                  separated by dots, each integer ranging
                                                  from 0 to 255. In case of an IPV6
                                                  address, string that  consists of groups
                                                  of zero to four hexadecimal digits,
                                                  separated by colons.
                                                type: string
                                                format: IP
                                            numDynamicAddresses:
                                              description: >
                                                Number of dynamic addresses to assign
                                                (from the subnet defined by "subnetId"
                                                if provided). Exactly one of
                                                "fixedAddresses", "numDynamicAddresses"
                                                or "ipAddressRange" shall be present.
                                              type: integer
                                            addressRange:
                                              description: >
                                                An IP address range to be used, e.g. in
                                                case of egress connections. In case this
                                                attribute is present, IP addresses from
                                                the range will be used.
                                              type: object
                                              required:
                                                - minAddress
                                                - maxAddress
                                              properties:
                                                minAddress:
                                                  description: >
                                                    An IPV4 or IPV6 address. Representation:
                                                    In case of an IPV4 address, string that
                                                    consists of four decimal integers
                                                    separated by dots, each integer ranging
                                                    from 0 to 255. In case of an IPV6
                                                    address, string that  consists of groups
                                                    of zero to four hexadecimal digits,
                                                    separated by colons.
                                                  type: string
                                                  format: IP
                                                maxAddress:
                                                  description: >
                                                    An IPV4 or IPV6 address. Representation:
                                                    In case of an IPV4 address, string that
                                                    consists of four decimal integers
                                                    separated by dots, each integer ranging
                                                    from 0 to 255. In case of an IPV6
                                                    address, string that  consists of groups
                                                    of zero to four hexadecimal digits,
                                                    separated by colons.
                                                  type: string
                                                  format: IP
                                            subnetId:
                                              description: >
                                                An identifier maintained by the VIM or
                                                other resource provider. It is expected
                                                to be unique within the VIM instance.
                                              type: string
                  virtualLinkInfo:
                    description: >
                      Information on the VL(s) of the NS instance. This
                      attribute shall be present if the nsState attribute value
                      is INSTANTIATED and if the NS instance has specified
                      connectivity.
                    type: array
                    items:
                      description: >
                        This type specifies the information about an NS VL
                        instance.  It shall comply with the provisions defined
                        in Table 6.5.3.53-1
                      type: object
                      required:
                        - id
                        - nsVirtualLinkDescId
                      properties:
                        id:
                          description: >
                            An identifier that is unique with respect to a NS. 
                            Representation: string of variable length.
                          type: string
                        nsVirtualLinkDescId:
                          description: >
                            An identifier that is unique within a NS descriptor.
                            Representation: string of variable length.
                          type: string
                        resourceHandle:
                          description: >
                            Identifier(s) of the virtualised network resource(s)
                            realizing the VL instance. See note.
                          type: array
                          items:
                            required:
                              - vimConnectionId
                              - resourceId
                            type: object
                            description: >
                              This type represents the information that allows
                              addressing a virtualised resource that is used by
                              a VNF instance. Information about the resource is
                              available from the VIM.
                            properties:
                              vimConnectionId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceProviderId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceId:
                                description: >
                                  An identifier maintained by the VIM or other
                                  resource provider. It is expected to be unique
                                  within the VIM instance.
                                type: string
                              vimLevelResourceType:
                                description: >
                                  Type of the resource in the scope of the VIM
                                  or the resource provider.
                                type: string
                        linkPort:
                          description: >
                            Link ports of the VL instance. Cardinality of zero
                            indicates that no port has yet been created for the
                            VL instance.
                          type: array
                          items:
                            description: >
                              This type represents information about a link port
                              of a VL instance.  It shall comply with the
                              provisions defined in Table 6.5.3.55-1.
                            type: object
                            required:
                              - id
                              - resourceHandle
                            properties:
                              id:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceHandle:
                                required:
                                  - vimConnectionId
                                  - resourceId
                                type: object
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance. Information about
                                  the resource is available from the VIM.
                                properties:
                                  vimConnectionId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceProviderId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                                  vimLevelResourceType:
                                    description: >
                                      Type of the resource in the scope of the
                                      VIM or the resource provider.
                                    type: string
                              nsCpHandle:
                                description: >
                                  Identifier of the CP/SAP instance to be
                                  connected to this link port. The value refers
                                  to a vnfExtCpInfo item in the VnfInstance, or
                                  a pnfExtCpInfo item in the PnfInfo, or a
                                  sapInfo item in the NS instance. There shall
                                  be at most one link port associated with any
                                  connection point instance.
                                type: array
                                items:
                                  description: >
                                    This type represents an identifier of the CP
                                    or SAP instance.  It shall comply with the
                                    provisions defined in Table 6.5.3.56-1.
                                  type: object
                                  properties:
                                    vnfInstanceId:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    vnfExtCpInstanceId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                                    pnfInfoId:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    pnfExtCpInstanceId:
                                      description: >
                                        Identifier of the CP in the scope of the
                                        PNF.
                                      type: string
                                    nsInstanceId:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    nsSapInstanceId:
                                      description: >
                                        An identifier that is unique with
                                        respect to a NS.  Representation: string
                                        of variable length.
                                      type: string
                  vnffgInfo:
                    description: |
                      Information on the VNFFG(s) of the NS instance.
                    type: array
                    items:
                      description: |
                        Information on the VNFFG(s) of the NS instance.
                      type: object
                      required:
                        - id
                        - vnffgdId
                        - vnfInstanceId
                        - pnfInfoId
                      properties:
                        id:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        vnffgdId:
                          description: >
                            An identifier that is unique within a NS descriptor.
                            Representation: string of variable length.
                          type: string
                        vnfInstanceId:
                          description: >
                            Identifier(s) of the constituent VNF instance(s) of
                            this VNFFG instance.
                          type: array
                          items:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                        pnfdInfoId:
                          description: >
                            Identifier(s) of the constituent PNF instance(s) of
                            this VNFFG instance.
                          type: array
                          items:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                        nsVirtualLinkInfoId:
                          description: >
                            Identifier(s) of the constituent VL instance(s) of
                            this VNFFG instance.
                          type: array
                          items:
                            description: >
                              An identifier that is unique with respect to a
                              NS.  Representation: string of variable length.
                            type: string
                        nsCpHandle:
                          description: >
                            Identifiers of the CP instances attached to the
                            constituent VNFs and PNFs or the SAP instances of
                            the VNFFG. See note.
                          type: array
                          items:
                            description: >
                              This type represents an identifier of the CP or
                              SAP instance.  It shall comply with the provisions
                              defined in Table 6.5.3.56-1.
                            type: object
                            properties:
                              vnfInstanceId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              vnfExtCpInstanceId:
                                description: >
                                  An identifier that is unique for the
                                  respective type within a VNF instance, but may
                                  not be globally unique.
                                type: string
                              pnfInfoId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              pnfExtCpInstanceId:
                                description: |
                                  Identifier of the CP in the scope of the PNF.
                                type: string
                              nsInstanceId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              nsSapInstanceId:
                                description: >
                                  An identifier that is unique with respect to a
                                  NS.  Representation: string of variable
                                  length.
                                type: string
                  sapInfo:
                    description: |
                      Information on the SAP(s) of the NS instance.
                    type: array
                    items:
                      description: >
                        This type represents an SAP instance. It shall comply
                        with the provisions defined in Table 6.5.3.67-1.
                      type: object
                      required:
                        - id
                        - sapdId
                        - sapName
                        - sapProtocolInfo
                      properties:
                        id:
                          description: >
                            An identifier that is unique with respect to a NS. 
                            Representation: string of variable length.
                          type: string
                        sapdId:
                          description: >
                            An identifier that is unique within a NS descriptor.
                            Representation: string of variable length.
                          type: string
                        sapName:
                          description: |
                            Human readable name for the SAP instance.
                          type: string
                        description:
                          description: |
                            Human readable description for the SAP instance.
                          type: string
                        sapProtocolInfo:
                          description: |
                            Network protocol information for this SAP.
                          type: array
                          items:
                            description: >
                              This type describes the protocol layer(s) that a
                              CP or SAP uses together with protocol-related
                              information, like addresses. It shall comply with
                              the provisions defined in Table 6.5.3.58-1.
                            type: object
                            required:
                              - layerProtocol
                              - ipOverEthernet
                            properties:
                              layerProtocol:
                                description: >
                                  The identifier of layer(s) and protocol(s)
                                  associated to the network address information.
                                  Permitted values: IP_OVER_ETHERNET See note.
                                type: string
                                enum:
                                  - IP_OVER_ETHERNET
                              ipOverEthernet:
                                description: >
                                  This type represents information about a
                                  network address that has been assigned.  It
                                  shall comply with the provisions defined in
                                  Table 6.5.3.18-1.
                                type: object
                                required:
                                  - macAddress
                                  - ipAddresses
                                  - subnetId
                                  - addresses
                                  - addressRange
                                properties:
                                  macAddress:
                                    description: >
                                      A MAC address. Representation: string that
                                      consists of groups of two hexadecimal
                                      digits, separated by hyphens or colons.
                                    type: string
                                    format: MAC
                                  ipAddresses:
                                    description: >
                                      Addresses assigned to the CP instance.
                                      Each entry represents IP addresses
                                      assigned by fixed or dynamic IP address
                                      assignment per subnet.
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - type
                                      properties:
                                        type:
                                          description: >
                                            The type of the IP addresses. Permitted
                                            values: IPV4, IPV6.
                                          type: string
                                          enum:
                                            - IPV4
                                            - IPV6
                                        addresses:
                                          description: >
                                            Fixed addresses assigned (from the
                                            subnet defined by "subnetId" if
                                            provided).
                                          type: array
                                          items:
                                            description: >
                                              An IPV4 or IPV6 address. Representation:
                                              In case of an IPV4 address, string that
                                              consists of four decimal integers
                                              separated by dots, each integer ranging
                                              from 0 to 255. In case of an IPV6
                                              address, string that  consists of groups
                                              of zero to four hexadecimal digits,
                                              separated by colons.
                                            type: string
                                            format: IP
                                        isDynamic:
                                          description: >
                                            Indicates whether this set of addresses
                                            was assigned dynamically (true) or based
                                            on address information provided as input
                                            from the API consumer (false). Shall be
                                            present if "addresses" is present and
                                            shall be absent otherwise.
                                          type: boolean
                                        addressRange:
                                          description: >
                                            An IP address range used, e.g., in case
                                            of egress connections. Exactly one of
                                            "addresses" or "addressRange" shall be
                                            present.
                                          type: object
                                          required:
                                            - minAddress
                                            - maxAddress
                                          properties:
                                            minAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                            maxAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                        subnetId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                                  type:
                                    description: |
                                      The type of the IP addresses
                                    type: string
                                    enum:
                                      - PV4
                                      - PV6
                                  addresses:
                                    description: >
                                      An IPV4 or IPV6 address. Representation:
                                      In case of an IPV4 address, string that
                                      consists of four decimal integers
                                      separated by dots, each integer ranging
                                      from 0 to 255. In case of an IPV6 address,
                                      string that  consists of groups of zero to
                                      four hexadecimal digits, separated by
                                      colons.
                                    type: string
                                    format: IP
                                  isDynamic:
                                    description: >
                                      Indicates whether this set of addresses
                                      was assigned dynamically (true) or based
                                      on address information provided as input
                                      from the API consumer (false). Shall be
                                      present if "addresses" is present and
                                      shall be absent otherwise.
                                    type: boolean
                                  addressRange:
                                    description: >
                                      An IP address range used, e.g. in case of
                                      egress connections. See note.
                                    type: object
                                    required:
                                      - minAddress
                                      - maxAddress
                                    properties:
                                      minAddress:
                                        description: >
                                          An IPV4 or IPV6 address. Representation:
                                          In case of an IPV4 address, string that
                                          consists of four decimal integers
                                          separated by dots, each integer ranging
                                          from 0 to 255. In case of an IPV6
                                          address, string that  consists of groups
                                          of zero to four hexadecimal digits,
                                          separated by colons.
                                        type: string
                                        format: IP
                                      maxAddress:
                                        description: >
                                          An IPV4 or IPV6 address. Representation:
                                          In case of an IPV4 address, string that
                                          consists of four decimal integers
                                          separated by dots, each integer ranging
                                          from 0 to 255. In case of an IPV6
                                          address, string that  consists of groups
                                          of zero to four hexadecimal digits,
                                          separated by colons.
                                        type: string
                                        format: IP
                                  minAddress:
                                    description: >
                                      An IPV4 or IPV6 address. Representation:
                                      In case of an IPV4 address, string that
                                      consists of four decimal integers
                                      separated by dots, each integer ranging
                                      from 0 to 255. In case of an IPV6 address,
                                      string that  consists of groups of zero to
                                      four hexadecimal digits, separated by
                                      colons.
                                    type: string
                                    format: IP
                                  maxAddress:
                                    description: >
                                      An IPV4 or IPV6 address. Representation:
                                      In case of an IPV4 address, string that
                                      consists of four decimal integers
                                      separated by dots, each integer ranging
                                      from 0 to 255. In case of an IPV6 address,
                                      string that  consists of groups of zero to
                                      four hexadecimal digits, separated by
                                      colons.
                                    type: string
                                    format: IP
                                  subnetId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                  nestedNsInstanceId:
                    description: |
                      Identifier of the nested NS(s) of the NS instance.
                    type: array
                    items:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                  nsState:
                    description: >
                      The state of the NS instance. Permitted values:
                      NOT_INSTANTIATED: The NS instance is terminated or not
                      instantiated. INSTANTIATED: The NS instance is
                      instantiated.
                    type: string
                    enum:
                      - NOT_INSTANTIATED
                      - INSTANTIATED
                  nsScaleStatus:
                    description: >
                      Status of each NS scaling aspect declared in the
                      applicable DF, how "big" the NS instance has been scaled
                      w.r.t. that aspect. This attribute shall be present if the
                      nsState attribute value is INSTANTIATED.
                    type: array
                    items:
                      description: >
                        This type represents the target NS Scale level for each
                        NS scaling aspect of the current deployment flavor.
                      type: object
                      required:
                        - nsScalingAspectId
                        - nsScaleLevelId
                      properties:
                        nsScalingAspectId:
                          description: >
                            An identifier that is unique within a NS descriptor.
                            Representation: string of variable length.
                          type: string
                        nsScaleLevelId:
                          description: >
                            An identifier that is unique within a NS descriptor.
                            Representation: string of variable length.
                          type: string
                  additionalAffinityOrAntiAffinityRule:
                    description: >
                      Information on the additional affinity or anti-affinity
                      rule from NS instantiation operation. Shall not conflict
                      with rules already specified in the NSD.
                    type: array
                    items:
                      description: >
                        This type describes the additional affinity or
                        anti-affinity rule  applicable between the VNF instances
                        to be instantiated in the NS instantiation operation
                        request or between the VNF instances  to be instantiated
                        in the NS instantiation operation request and the
                        existing VNF instances..
                      type: object
                      required:
                        - affinityOrAntiAffiinty
                        - scope
                      properties:
                        vnfdId:
                          description: >
                            Reference to a VNFD. When the VNFD which is not used
                            to instantiate VNF, it presents all VNF instances of
                            this type as the subjects of the affinity or
                            anti-affinity rule. The VNF instance which the VNFD
                            presents is not necessary as a part of the NS to be
                            instantiated.
                          type: array
                          items:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                        vnfProfileId:
                          description: >
                            Reference to a vnfProfile defined in the NSD. At
                            least one VnfProfile which is used to instantiate
                            VNF for the NS to be instantiated as the subject of
                            the affinity or anti-affinity rule shall be present.
                            When the VnfProfile which is not used to instantiate
                            VNF, it presents all VNF instances of this type as
                            the subjects of the affinity or anti-affinity rule.
                            The VNF instance which the VnfProfile presents is
                            not necessary as a part of the NS to be
                            instantiated.
                          type: array
                          items:
                            description: >
                              An identifier that is unique within a NS
                              descriptor. Representation: string of variable
                              length.
                            type: string
                        vnfInstanceId:
                          description: >
                            Reference to the existing VNF instance as the
                            subject of the affinity or anti-affinity rule. The
                            existing VNF instance is not necessary as a part of
                            the NS to be instantiated.
                          type: array
                          items:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                        affinityOrAntiAffiinty:
                          description: >
                            The type of the constraint. Permitted values:
                            AFFINITY ANTI_AFFINITY.
                          type: string
                          enum:
                            - AFFINITY
                            - ANTI_AFFINITY
                        scope:
                          description: >
                            Specifies the scope of the rule where the placement
                            constraint applies. Permitted values: NFVI_POP ZONE
                            ZONE_GROUP NFVI_NODE.
                          type: string
                          enum:
                            - NFVI_POP
                            - ZONE
                            - ZONE_GROUP
                            - NFVI_NODE
                  _links:
                    type: object
                    description: Links to resources related to this resource.
                    required:
                      - self
                    properties:
                      self:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
                      nestedNsInstances:
                        description: |
                          Links to resources related to this notification.
                        type: array
                        items:
                          description: |
                            This type represents a link to a resource.
                          type: object
                          required:
                            - href
                          properties:
                            href:
                              description: |
                                URI of the referenced resource.
                              type: string
                              format: url
                      instantiate:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
                      terminate:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
                      update:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
                      scale:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
                      heal:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
          headers:
            Content-Type:
              type: string
              description: >
                The MIME type of the body of the response.This header field
                shall be present if the response has a non-empty message body.
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              maximum: 1
              minimum: 0
        '400':
          description: >
            Error: Invalid attribute selector. The response body shall contain a
            ProblemDetails structure, in which the "detail" attribute should
            convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '401':
          description: >
            Unauthorized If the request contains no access token even though one
            is required, or if the request contains an authorization token that
            is invalid (e.g. expired or revoked), the API producer should
            respond with this response. The details of the error shall be
            returned in the WWW-Authenticate HTTP header, as defined in IETF RFC
            6750 and IETF RFC 7235. The ProblemDetails structure may be
            provided.
          headers:
            Content-Type:
              type: string
              description: The MIME type of the body of the response.
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '403':
          description: >
            Forbidden If the API consumer is not allowed to perform a particular
            request to a particular resource, the API producer shall respond
            with this response code. The "ProblemDetails" structure shall be
            provided.  It should include in the "detail" attribute information
            about the source of the problem, and may indicate how to solve it.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '404':
          description: >
            Not Found If the API producer did not find a current representation
            for the resource addressed by the URI passed in the request, or is
            not willing to disclose that one exists, it shall respond with this
            response code.  The "ProblemDetails" structure may be provided,
            including in the "detail" attribute information about the source of
            the problem, e.g. a wrong resource URI variable.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '405':
          description: >
            Method Not Allowed If a particular HTTP method is not supported for
            a particular resource, the API producer shall respond with this
            response code. The "ProblemDetails" structure may be omitted in that
            case.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '406':
          description: >
            Not Acceptable If the Accept HTTP header does not contain at least
            one name of a content type that is acceptable to the API producer,
            the API producer shall respond with this response code. The
            ProblemDetails structure may be omitted in that case.        
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '409':
          description: >
            Conflict

            Another request is in progress that prohibits the fulfilment of the
            current request, or the current resource state is inconsistent with
            the request.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '416':
          description: >
            Requested Range Not Satisfiable This code is returned if the
            requested byte range in the Range HTTP header is not present in the
            requested resource.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '500':
          description: >
            Internal Server Error If there is an application error not related
            to the client's input that cannot be easily mapped to any other HTTP
            response code ("catch all error"), the API producer shall respond
            withthis response code. The ProblemDetails structure shall be
            provided, and shall include in the "detail" attribute more
            information about the source of the problem.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '503':
          description: >
            Service Unavailable If the API producer encounters an internal
            overload situation of itself or of a system it relies on, it should
            respond with this response code, following the provisions in IETF
            RFC 7231 [13] for the use of the Retry-After HTTP header and for the
            alternative to refuse the connection. The "ProblemDetails" structure
            may be omitted.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
    delete:
      summary: Delete NS instance resource.
      description: |
        Delete NS Identifier
        This method deletes an individual NS instance resource.
      parameters:
        - name: Authorization
          description: |
            The authorization token for the request. Reference: IETF RFC 7235
          in: header
          required: false
          type: string
      responses:
        '204':
          description: >
            204 No Content

            The NS instance resource and the associated NS identifier were
            deleted successfully. The response body shall be empty.
          headers:
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              maximum: 1
              minimum: 0
        '400':
          description: >
            Error: Invalid attribute selector. The response body shall contain a
            ProblemDetails structure, in which the "detail" attribute should
            convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '401':
          description: >
            Unauthorized If the request contains no access token even though one
            is required, or if the request contains an authorization token that
            is invalid (e.g. expired or revoked), the API producer should
            respond with this response. The details of the error shall be
            returned in the WWW-Authenticate HTTP header, as defined in IETF RFC
            6750 and IETF RFC 7235. The ProblemDetails structure may be
            provided.
          headers:
            Content-Type:
              type: string
              description: The MIME type of the body of the response.
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '403':
          description: >
            Forbidden If the API consumer is not allowed to perform a particular
            request to a particular resource, the API producer shall respond
            with this response code. The "ProblemDetails" structure shall be
            provided.  It should include in the "detail" attribute information
            about the source of the problem, and may indicate how to solve it.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '404':
          description: >
            Not Found If the API producer did not find a current representation
            for the resource addressed by the URI passed in the request, or is
            not willing to disclose that one exists, it shall respond with this
            response code.  The "ProblemDetails" structure may be provided,
            including in the "detail" attribute information about the source of
            the problem, e.g. a wrong resource URI variable.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '405':
          description: >
            Method Not Allowed If a particular HTTP method is not supported for
            a particular resource, the API producer shall respond with this
            response code. The "ProblemDetails" structure may be omitted in that
            case.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '406':
          description: >
            Not Acceptable If the Accept HTTP header does not contain at least
            one name of a content type that is acceptable to the API producer,
            the API producer shall respond with this response code. The
            ProblemDetails structure may be omitted in that case.        
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '409':
          description: >
            Conflict

            Error: The operation cannot be executed currently, due to a conflict
            with the state of the NS LCM operation occurrence resource.
            Typically, this is due to the fact that the NS LCM operation
            occurrence is not in FAILED_TEMP state, or another error handling
            action is starting, such as retry or fail. The response body shall
            contain a ProblemDetails structure, in which the "detail" attribute
            shall convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '412':
          description: >
            Precondition Failed A precondition given in an HTTP request header
            is not fulfilled. Typically, this is due to an ETag mismatch,
            indicating that the resource was modified by another entity. The
            response body should contain a ProblemDetails structure, in which
            the "detail" attribute should convey more information about the
            error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '500':
          description: >
            Internal Server Error If there is an application error not related
            to the client's input that cannot be easily mapped to any other HTTP
            response code ("catch all error"), the API producer shall respond
            withthis response code. The ProblemDetails structure shall be
            provided, and shall include in the "detail" attribute more
            information about the source of the problem.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '503':
          description: >
            Service Unavailable If the API producer encounters an internal
            overload situation of itself or of a system it relies on, it should
            respond with this response code, following the provisions in IETF
            RFC 7231 [13] for the use of the Retry-After HTTP header and for the
            alternative to refuse the connection. The "ProblemDetails" structure
            may be omitted.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
  '/ns_instances/{nsInstanceId}/instantiate':
    parameters:
      - name: nsInstanceId
        description: |
          Identifier of the NS instance to be instantiated.
        in: path
        type: string
        required: true
    post:
      summary: Instantiate a NS.
      description: |
        The POST method requests to instantiate a NS instance resource.
      parameters:
        - name: Accept
          description: >
            Content-Types that are acceptable for the response. Reference: IETF
            RFC 7231
          in: header
          required: true
          type: string
        - name: Authorization
          description: |
            The authorization token for the request. Reference: IETF RFC 7235
          in: header
          required: false
          type: string
        - name: Content-Type
          description: |
            The MIME type of the body of the request. Reference: IETF RFC 7231
          in: header
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - InstantiateNsRequest
            properties:
              InstantiateNsRequest:
                type: object
                required:
                  - nsFlavourId
                properties:
                  nsFlavourId:
                    description: >
                      An identifier that is unique within a NS descriptor.
                      Representation: string of variable length.
                    type: string
                  sapData:
                    description: |
                      Create data concerning the SAPs of this NS.
                    type: array
                    items:
                      description: >
                        This type represents the information related to a SAP of
                        a NS.  It shall comply with the provisions defined in
                        Table 6.5.3.10-1.
                      type: object
                      required:
                        - sapdId
                        - sapName
                        - description
                      properties:
                        sapdId:
                          description: >
                            An identifier that is unique within a NS descriptor.
                            Representation: string of variable length.
                          type: string
                        sapName:
                          description: |
                            Human readable name for the SAP.
                          type: string
                        description:
                          description: |
                            Human readable description for the SAP.
                          type: string
                        sapProtocolData:
                          description: >
                            Parameters for configuring the network protocols on
                            the SAP.
                          type: array
                          items:
                            description: |
                              This type represents network protocol data. 
                            type: object
                            required:
                              - layerProtocol
                            properties:
                              layerProtocol:
                                description: >
                                  Identifier of layer(s) and protocol(s).
                                  Permitted values: IP_OVER_ETHERNET.
                                type: string
                                enum:
                                  - IP_OVER_ETHERNET
                              ipOverEthernet:
                                description: >
                                  This type represents network address data for
                                  IP over Ethernet.
                                type: object
                                properties:
                                  macAddress:
                                    description: >
                                      A MAC address. Representation: string that
                                      consists of groups of two hexadecimal
                                      digits, separated by hyphens or colons.
                                    type: string
                                    format: MAC
                                  ipAddresses:
                                    description: >
                                      List of IP addresses to assign to the CP
                                      instance. Each entry represents IP address
                                      data for fixed or dynamic IP address
                                      assignment per subnet. If this attribute
                                      is not present, no IP address shall be
                                      assigned.
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - type
                                      properties:
                                        type:
                                          description: >
                                            The type of the IP addresses. Permitted
                                            values: IPV4, IPV6.
                                          type: string
                                          enum:
                                            - IPV4
                                            - IPV6
                                        fixedAddresses:
                                          description: >
                                            Fixed addresses to assign (from the
                                            subnet defined by "subnetId" if
                                            provided). Exactly one of
                                            "fixedAddresses", "numDynamicAddresses"
                                            or "ipAddressRange" shall be present.
                                          type: array
                                          items:
                                            description: >
                                              An IPV4 or IPV6 address. Representation:
                                              In case of an IPV4 address, string that
                                              consists of four decimal integers
                                              separated by dots, each integer ranging
                                              from 0 to 255. In case of an IPV6
                                              address, string that  consists of groups
                                              of zero to four hexadecimal digits,
                                              separated by colons.
                                            type: string
                                            format: IP
                                        numDynamicAddresses:
                                          description: >
                                            Number of dynamic addresses to assign
                                            (from the subnet defined by "subnetId"
                                            if provided). Exactly one of
                                            "fixedAddresses", "numDynamicAddresses"
                                            or "ipAddressRange" shall be present.
                                          type: integer
                                        addressRange:
                                          description: >
                                            An IP address range to be used, e.g. in
                                            case of egress connections. In case this
                                            attribute is present, IP addresses from
                                            the range will be used.
                                          type: object
                                          required:
                                            - minAddress
                                            - maxAddress
                                          properties:
                                            minAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                            maxAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                        subnetId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                  addpnfData:
                    description: |
                      Information on the PNF(s) that are part of this NS.
                    type: array
                    items:
                      description: >
                        This type specifies an PNF to be added to the NS
                        instance and the PNF Profile  to use for this PNF. It
                        shall comply with the provisions defined in Table
                        6.5.3.14-1.
                      type: object
                      required:
                        - pnfId
                        - pnfName
                        - pnfdId
                        - pnfProfileId
                      properties:
                        pnfId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        pnfName:
                          description: |
                            Name of the PNF
                          type: string
                        pnfdId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        pnfProfileId:
                          description: >
                            An identifier that is unique within a NS descriptor.
                            Representation: string of variable length.
                          type: string
                        cpData:
                          description: |
                            Address assigned for the PNF external CP(s).
                          type: array
                          items:
                            description: >
                              This type represents the configuration data on the
                              external CP of the PNF.  It shall comply with the
                              provisions defined in Table 6.5.3.16-1.
                            type: object
                            required:
                              - cpProtocolData
                            properties:
                              cpInstanceI16:
                                description: |
                                  Identifier of the CP in the scope of the PNF.
                                type: string
                              cpdId:
                                description: >
                                  An identifier that is unique within a NS
                                  descriptor. Representation: string of variable
                                  length.
                                type: string
                              cpProtocolData:
                                description: |
                                  Address assigned for this CP.
                                type: array
                                items:
                                  description: |
                                    This type represents network protocol data. 
                                  type: object
                                  required:
                                    - layerProtocol
                                  properties:
                                    layerProtocol:
                                      description: >
                                        Identifier of layer(s) and protocol(s).
                                        Permitted values: IP_OVER_ETHERNET.
                                      type: string
                                      enum:
                                        - IP_OVER_ETHERNET
                                    ipOverEthernet:
                                      description: >
                                        This type represents network address
                                        data for IP over Ethernet.
                                      type: object
                                      properties:
                                        macAddress:
                                          description: >
                                            A MAC address. Representation: string
                                            that consists of groups of two
                                            hexadecimal digits, separated by hyphens
                                            or colons.
                                          type: string
                                          format: MAC
                                        ipAddresses:
                                          description: >
                                            List of IP addresses to assign to the CP
                                            instance. Each entry represents IP
                                            address data for fixed or dynamic IP
                                            address assignment per subnet. If this
                                            attribute is not present, no IP address
                                            shall be assigned.
                                          type: array
                                          items:
                                            type: object
                                            required:
                                              - type
                                            properties:
                                              type:
                                                description: >
                                                  The type of the IP addresses. Permitted
                                                  values: IPV4, IPV6.
                                                type: string
                                                enum:
                                                  - IPV4
                                                  - IPV6
                                              fixedAddresses:
                                                description: >
                                                  Fixed addresses to assign (from the
                                                  subnet defined by "subnetId" if
                                                  provided). Exactly one of
                                                  "fixedAddresses", "numDynamicAddresses"
                                                  or "ipAddressRange" shall be present.
                                                type: array
                                                items:
                                                  description: >
                                                    An IPV4 or IPV6 address. Representation:
                                                    In case of an IPV4 address, string that
                                                    consists of four decimal integers
                                                    separated by dots, each integer ranging
                                                    from 0 to 255. In case of an IPV6
                                                    address, string that  consists of groups
                                                    of zero to four hexadecimal digits,
                                                    separated by colons.
                                                  type: string
                                                  format: IP
                                              numDynamicAddresses:
                                                description: >
                                                  Number of dynamic addresses to assign
                                                  (from the subnet defined by "subnetId"
                                                  if provided). Exactly one of
                                                  "fixedAddresses", "numDynamicAddresses"
                                                  or "ipAddressRange" shall be present.
                                                type: integer
                                              addressRange:
                                                description: >
                                                  An IP address range to be used, e.g. in
                                                  case of egress connections. In case this
                                                  attribute is present, IP addresses from
                                                  the range will be used.
                                                type: object
                                                required:
                                                  - minAddress
                                                  - maxAddress
                                                properties:
                                                  minAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                                  maxAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                              subnetId:
                                                description: >
                                                  An identifier maintained by the VIM or
                                                  other resource provider. It is expected
                                                  to be unique within the VIM instance.
                                                type: string
                  vnfInstanceData:
                    description: >
                      Specify an existing VNF instance to be used in the NS. If
                      needed, the VNF Profile to be used for this VNF instance
                      is also provided.
                    type: array
                    items:
                      description: >
                        This type specifies an existing VNF instance to be used
                        in the NS instance and  if needed, the VNF Profile to
                        use for this VNF instance.  It shall comply with the
                        provisions defined in Table 6.5.3.19-1.
                      type: object
                      required:
                        - vnfInstanceId
                        - vnfProfileId
                      properties:
                        vnfInstanceId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        vnfProfileId:
                          description: >
                            An identifier that is unique within a NS descriptor.
                            Representation: string of variable length.
                          type: string
                  nestedNsInstanceId:
                    description: >
                      Specify an existing NS instance to be used as a nested NS
                      within the NS.
                    type: array
                    items:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                  localizationLanguage:
                    description: >
                      Defines the location constraints for the VNF to be
                      instantiated as part of the NS instantiation. An example
                      can be a constraint for the VNF to be in a specific
                      geographic location..
                    type: array
                    items:
                      description: >
                        This type represents the association of location
                        constraints to a VNF instance  to be created according
                        to a specific VNF profile.  It shall comply with the
                        provisions defined in Table 6.5.3.20-1.
                      type: object
                      required:
                        - vnfProfileId
                      properties:
                        vnfProfileId:
                          description: >
                            An identifier that is unique within a NS descriptor.
                            Representation: string of variable length.
                          type: string
                        locationConstraints:
                          description: >
                            This type represents location constraints for a VNF
                            to be instantiated.  The location constraints shall
                            be presented as a country code, optionally followed
                            by a civic address based on  the format defined by
                            IETF RFC 4776 [13].
                          type: object
                          required:
                            - countryCode
                          properties:
                            countryCode:
                              description: >
                                The two-letter ISO 3166 [29] country code in
                                capital letters.
                              type: string
                            civicAddressElement:
                              description: >
                                Zero or more elements comprising the civic
                                address.
                              type: array
                              items:
                                type: object
                                required:
                                  - caType
                                  - caValue
                                properties:
                                  caType:
                                    description: >
                                      Describe the content type of caValue. The
                                      value of caType shall comply with Section
                                      3.4 of IETF RFC 4776 [13].
                                    type: integer
                                  caValue:
                                    description: >
                                      Content of civic address element
                                      corresponding to the caType. The format
                                      caValue shall comply with Section 3.4 of
                                      IETF RFC 4776 [13].
                                    type: string
                  additionalParamsForNs:
                    description: >
                      This type represents a list of key-value pairs. The order
                      of the pairs in the list is not significant. In JSON, a
                      set of key- value pairs is represented as an object. It
                      shall comply with the provisions  defined in clause 4 of
                      IETF RFC 7159. 
                    type: object
                  additionalParamsForVnf:
                    description: >
                      Allows the OSS/BSS to provide additional parameter(s) per
                      VNF instance (as opposed to the NS level, which is covered
                      in additionalParamsForNs). This is for VNFs that are to be
                      created by the NFVO as part of the NS instantiation and
                      not for existing VNF that are referenced for reuse..
                    type: array
                    items:
                      description: >
                        This type defines the additional parameters for the VNF
                        instance  to be created associated with an NS instance. 
                        It shall comply with the provisions defined in Table
                        6.5.3.22-1.
                      type: object
                      required:
                        - vnfProfileId
                      properties:
                        vnfProfileId:
                          description: >
                            An identifier that is unique within a NS descriptor.
                            Representation: string of variable length.
                          type: string
                        additionalParams:
                          description: >
                            This type represents a list of key-value pairs. The
                            order of the pairs in the list is not significant.
                            In JSON, a set of key- value pairs is represented as
                            an object. It shall comply with the provisions 
                            defined in clause 4 of IETF RFC 7159. 
                          type: object
                  startTime:
                    description: >
                      Date-time stamp.  Representation: String formatted
                      according to IETF RFC 3339.
                    type: string
                    format: date-time
                  nsInstantiationLevelId:
                    description: >
                      An identifier that is unique within a NS descriptor.
                      Representation: string of variable length.
                    type: string
                  additionalAffinityOrAntiAffiniityRule:
                    description: >
                      Specifies additional affinity or anti-affinity constraint
                      for the VNF instances to be instantiated as part of the NS
                      instantiation. Shall not conflict with rules already
                      specified in the NSD.
                    type: array
                    items:
                      description: >
                        This type describes the additional affinity or
                        anti-affinity rule  applicable between the VNF instances
                        to be instantiated in the NS instantiation operation
                        request or between the VNF instances  to be instantiated
                        in the NS instantiation operation request and the
                        existing VNF instances..
                      type: object
                      required:
                        - affinityOrAntiAffiinty
                        - scope
                      properties:
                        vnfdId:
                          description: >
                            Reference to a VNFD. When the VNFD which is not used
                            to instantiate VNF, it presents all VNF instances of
                            this type as the subjects of the affinity or
                            anti-affinity rule. The VNF instance which the VNFD
                            presents is not necessary as a part of the NS to be
                            instantiated.
                          type: array
                          items:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                        vnfProfileId:
                          description: >
                            Reference to a vnfProfile defined in the NSD. At
                            least one VnfProfile which is used to instantiate
                            VNF for the NS to be instantiated as the subject of
                            the affinity or anti-affinity rule shall be present.
                            When the VnfProfile which is not used to instantiate
                            VNF, it presents all VNF instances of this type as
                            the subjects of the affinity or anti-affinity rule.
                            The VNF instance which the VnfProfile presents is
                            not necessary as a part of the NS to be
                            instantiated.
                          type: array
                          items:
                            description: >
                              An identifier that is unique within a NS
                              descriptor. Representation: string of variable
                              length.
                            type: string
                        vnfInstanceId:
                          description: >
                            Reference to the existing VNF instance as the
                            subject of the affinity or anti-affinity rule. The
                            existing VNF instance is not necessary as a part of
                            the NS to be instantiated.
                          type: array
                          items:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                        affinityOrAntiAffiinty:
                          description: >
                            The type of the constraint. Permitted values:
                            AFFINITY ANTI_AFFINITY.
                          type: string
                          enum:
                            - AFFINITY
                            - ANTI_AFFINITY
                        scope:
                          description: >
                            Specifies the scope of the rule where the placement
                            constraint applies. Permitted values: NFVI_POP ZONE
                            ZONE_GROUP NFVI_NODE.
                          type: string
                          enum:
                            - NFVI_POP
                            - ZONE
                            - ZONE_GROUP
                            - NFVI_NODE
            description: >
              Parameters for the instantiate NS operation, as defined in clause
              6.5.2.10.
      responses:
        '202':
          description: >
            202 Accepted

            The request was accepted for processing, but the processing has not 
            been completed. 

            The response body shall be empty.

            The HTTP response shall include a "Location" HTTP header that
            contains the URI of the newly-created "NS lifecycle operation
            occurrence" resource corresponding to the operation.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            Location:
              description: The resource URI of the created NS instance
              type: string
              format: url
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              This type represents a response for Query NS operation.  It shall
              comply with the provisions defined in Table 6.5.2.10-1.
            type: object
            required:
              - id
              - nsInstanceName
              - nsInstanceDescription
              - nsdId
              - nsdInfoId
              - nsState
            properties:
              id:
                description: |
                  An identifier with the intention of being globally unique.
                type: string
              nsInstanceName:
                description: |
                  Human readable name of the NS instance.
                type: string
              nsInstanceDescription:
                description: |
                  Human readable description of the NS instance.
                type: string
              nsdId:
                description: |
                  An identifier with the intention of being globally unique.
                type: string
              nsdInfoId:
                description: |
                  An identifier with the intention of being globally unique.
                type: string
              flavourId:
                description: >
                  An identifier that is unique within a NS descriptor.
                  Representation: string of variable length.
                type: string
              vnfInstance:
                description: |
                  Information on constituent VNF(s) of the NS instance.
                type: array
                items:
                  description: |
                    This type represents a VNF instance.
                  type: object
                  required:
                    - id
                    - vnfdId
                    - vnfProvider
                    - vnfProductName
                    - vnfSoftwareVersion
                    - vnfdVersion
                    - vnfPkgId
                    - instantiationState
                  properties:
                    id:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    vnfInstanceName:
                      description: >
                        Name of the VNF instance. This attribute can be modified
                        with the PATCH method.
                      type: string
                    vnfInstanceDescription:
                      description: >
                        Human-readable description of the VNF instance. This
                        attribute can be modified with the PATCH method.
                      type: string
                    vnfdId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    vnfProvider:
                      description: >
                        Provider of the VNF and the VNFD. The value is copied
                        from the VNFD.
                      type: string
                    vnfProductName:
                      description: >
                        Name to identify the VNF Product. The value is copied
                        from the VNFD.
                      type: string
                    vnfSoftwareVersion:
                      description: |
                        A Version.
                      type: string
                    vnfdVersion:
                      description: |
                        A Version.
                      type: string
                    vnfPkgId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    vnfConfigurableProperties:
                      description: >
                        This type represents a list of key-value pairs. The
                        order of the pairs in the list is not significant. In
                        JSON, a set of key- value pairs is represented as an
                        object. It shall comply with the provisions  defined in
                        clause 4 of IETF RFC 7159. 
                      type: object
                    vimId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    instantiationState:
                      description: |
                        The instantiation state of the VNF.
                      type: string
                      enum:
                        - NOT_INSTANTIATED
                        - INSTANTIATED
                    instantiatedVnfInfo:
                      description: >
                        Information specific to an instantiated VNF instance.
                        This attribute shall be present if the instantiateState
                        attribute value is INSTANTIATED.
                      type: object
                      required:
                        - flavourId
                        - vnfState
                      properties:
                        flavourId:
                          description: >
                            Identifier of the VNF Virtual Link Descriptor (VLD)
                            in the VNFD.
                          type: string
                        vnfState:
                          type: string
                          enum:
                            - STARTED
                            - STOPPED
                        scaleStatus:
                          description: >
                            Scale status of the VNF, one entry per aspect.
                            Represents for every scaling aspect how "big" the
                            VNF has been scaled w.r.t. that aspect.
                          type: array
                          items:
                            required:
                              - aspectId
                              - scaleLevel
                            type: object
                            properties:
                              aspectId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              scaleLevel:
                                description: >
                                  Indicates the scale level. The minimum value
                                  shall be 0 and the maximum value shall be <=
                                  maxScaleLevel as described in the VNFD.
                                type: integer
                        extCpInfo:
                          description: >
                            Information about the external CPs exposed by the
                            VNF instance.
                          type: array
                          minItems: 1
                          items:
                            type: object
                            required:
                              - id
                              - cpdId
                            properties:
                              id:
                                description: >
                                  An identifier that is unique for the
                                  respective type within a VNF instance, but may
                                  not be globally unique.
                                type: string
                              cpdId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              cpProtocolInfo:
                                description: |
                                  Network protocol information for this CP.
                                type: array
                                items:
                                  description: >
                                    This type describes the protocol layer(s)
                                    that a CP or SAP uses together with
                                    protocol-related information, like
                                    addresses. It shall comply with the
                                    provisions defined in Table 6.5.3.58-1.
                                  type: object
                                  required:
                                    - layerProtocol
                                    - ipOverEthernet
                                  properties:
                                    layerProtocol:
                                      description: >
                                        The identifier of layer(s) and
                                        protocol(s) associated to the network
                                        address information. Permitted values:
                                        IP_OVER_ETHERNET See note.
                                      type: string
                                      enum:
                                        - IP_OVER_ETHERNET
                                    ipOverEthernet:
                                      description: >
                                        This type represents information about a
                                        network address that has been assigned. 
                                        It shall comply with the provisions
                                        defined in Table 6.5.3.18-1.
                                      type: object
                                      required:
                                        - macAddress
                                        - ipAddresses
                                        - subnetId
                                        - addresses
                                        - addressRange
                                      properties:
                                        macAddress:
                                          description: >
                                            A MAC address. Representation: string
                                            that consists of groups of two
                                            hexadecimal digits, separated by hyphens
                                            or colons.
                                          type: string
                                          format: MAC
                                        ipAddresses:
                                          description: >
                                            Addresses assigned to the CP instance.
                                            Each entry represents IP addresses
                                            assigned by fixed or dynamic IP address
                                            assignment per subnet.
                                          type: array
                                          items:
                                            type: object
                                            required:
                                              - type
                                            properties:
                                              type:
                                                description: >
                                                  The type of the IP addresses. Permitted
                                                  values: IPV4, IPV6.
                                                type: string
                                                enum:
                                                  - IPV4
                                                  - IPV6
                                              addresses:
                                                description: >
                                                  Fixed addresses assigned (from the
                                                  subnet defined by "subnetId" if
                                                  provided).
                                                type: array
                                                items:
                                                  description: >
                                                    An IPV4 or IPV6 address. Representation:
                                                    In case of an IPV4 address, string that
                                                    consists of four decimal integers
                                                    separated by dots, each integer ranging
                                                    from 0 to 255. In case of an IPV6
                                                    address, string that  consists of groups
                                                    of zero to four hexadecimal digits,
                                                    separated by colons.
                                                  type: string
                                                  format: IP
                                              isDynamic:
                                                description: >
                                                  Indicates whether this set of addresses
                                                  was assigned dynamically (true) or based
                                                  on address information provided as input
                                                  from the API consumer (false). Shall be
                                                  present if "addresses" is present and
                                                  shall be absent otherwise.
                                                type: boolean
                                              addressRange:
                                                description: >
                                                  An IP address range used, e.g., in case
                                                  of egress connections. Exactly one of
                                                  "addresses" or "addressRange" shall be
                                                  present.
                                                type: object
                                                required:
                                                  - minAddress
                                                  - maxAddress
                                                properties:
                                                  minAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                                  maxAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                              subnetId:
                                                description: >
                                                  An identifier maintained by the VIM or
                                                  other resource provider. It is expected
                                                  to be unique within the VIM instance.
                                                type: string
                                        type:
                                          description: |
                                            The type of the IP addresses
                                          type: string
                                          enum:
                                            - PV4
                                            - PV6
                                        addresses:
                                          description: >
                                            An IPV4 or IPV6 address. Representation:
                                            In case of an IPV4 address, string that
                                            consists of four decimal integers
                                            separated by dots, each integer ranging
                                            from 0 to 255. In case of an IPV6
                                            address, string that  consists of groups
                                            of zero to four hexadecimal digits,
                                            separated by colons.
                                          type: string
                                          format: IP
                                        isDynamic:
                                          description: >
                                            Indicates whether this set of addresses
                                            was assigned dynamically (true) or based
                                            on address information provided as input
                                            from the API consumer (false). Shall be
                                            present if "addresses" is present and
                                            shall be absent otherwise.
                                          type: boolean
                                        addressRange:
                                          description: >
                                            An IP address range used, e.g. in case
                                            of egress connections. See note.
                                          type: object
                                          required:
                                            - minAddress
                                            - maxAddress
                                          properties:
                                            minAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                            maxAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                        minAddress:
                                          description: >
                                            An IPV4 or IPV6 address. Representation:
                                            In case of an IPV4 address, string that
                                            consists of four decimal integers
                                            separated by dots, each integer ranging
                                            from 0 to 255. In case of an IPV6
                                            address, string that  consists of groups
                                            of zero to four hexadecimal digits,
                                            separated by colons.
                                          type: string
                                          format: IP
                                        maxAddress:
                                          description: >
                                            An IPV4 or IPV6 address. Representation:
                                            In case of an IPV4 address, string that
                                            consists of four decimal integers
                                            separated by dots, each integer ranging
                                            from 0 to 255. In case of an IPV6
                                            address, string that  consists of groups
                                            of zero to four hexadecimal digits,
                                            separated by colons.
                                          type: string
                                          format: IP
                                        subnetId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                              extLinkPortId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                        extVirtualLinkInfo:
                          description: >
                            Information about the external VLs the VNF instance
                            is connected to.
                          type: array
                          items:
                            type: object
                            required:
                              - id
                              - resourceHandle
                            properties:
                              id:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceHandle:
                                required:
                                  - vimConnectionId
                                  - resourceId
                                type: object
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance. Information about
                                  the resource is available from the VIM.
                                properties:
                                  vimConnectionId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceProviderId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                                  vimLevelResourceType:
                                    description: >
                                      Type of the resource in the scope of the
                                      VIM or the resource provider.
                                    type: string
                              extLinkPorts:
                                description: |
                                  Link ports of this VL.
                                type: array
                                items:
                                  description: >
                                    This type represents information about a
                                    link port of an external VL, i.e. a port
                                    providing connectivity for the VNF to an NS
                                    VL. 
                                  type: object
                                  required:
                                    - id
                                    - resourceHandle
                                  properties:
                                    id:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    resourceHandle:
                                      required:
                                        - vimConnectionId
                                        - resourceId
                                      type: object
                                      description: >
                                        This type represents the information
                                        that allows addressing a virtualised
                                        resource that is used by a VNF instance.
                                        Information about the resource is
                                        available from the VIM.
                                      properties:
                                        vimConnectionId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceProviderId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                                        vimLevelResourceType:
                                          description: >
                                            Type of the resource in the scope of the
                                            VIM or the resource provider.
                                          type: string
                                    cpInstanceId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                        extManagedVirtualLinkInfo:
                          description: >
                            External virtual links the VNF instance is connected
                            to.
                          type: array
                          items:
                            type: object
                            required:
                              - id
                              - vnfVirtualLinkDescId
                            properties:
                              id:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              vnfVirtualLinkDescId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              networkResource:
                                required:
                                  - vimConnectionId
                                  - resourceId
                                type: object
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance. Information about
                                  the resource is available from the VIM.
                                properties:
                                  vimConnectionId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceProviderId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                                  vimLevelResourceType:
                                    description: >
                                      Type of the resource in the scope of the
                                      VIM or the resource provider.
                                    type: string
                              vnfLinkPorts:
                                description: |
                                  Link ports of this VL.
                                type: array
                                items:
                                  type: object
                                  required:
                                    - id
                                    - resourceHandle
                                  properties:
                                    id:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                                    resourceHandle:
                                      required:
                                        - vimConnectionId
                                        - resourceId
                                      type: object
                                      description: >
                                        This type represents the information
                                        that allows addressing a virtualised
                                        resource that is used by a VNF instance.
                                        Information about the resource is
                                        available from the VIM.
                                      properties:
                                        vimConnectionId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceProviderId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                                        vimLevelResourceType:
                                          description: >
                                            Type of the resource in the scope of the
                                            VIM or the resource provider.
                                          type: string
                                    cpInstanceId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                        monitoringParameters:
                          description: |
                            Active monitoring parameters.
                          type: array
                          items:
                            type: object
                            required:
                              - id
                              - value
                              - timeStamp
                            properties:
                              id:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              name:
                                description: >
                                  Human readable name of the monitoring
                                  parameter, as defined in the VNFD.
                                type: string
                              value:
                                description: >
                                  Value of the monitoring parameter known to the
                                  VNFM (e.g. obtained for auto-scaling
                                  purposes). The type of the "value" attribute
                                  (i.e. scalar, structure (Object in JSON), or
                                  array (of scalars, arrays or
                                  structures/Objects)) is assumed to be defined
                                  in an external measurement specification.
                                type: object
                              timeStamp:
                                description: >
                                  Represents the point in time when the
                                  measurement has been performed, as known to
                                  the VNFM. Should be formatted according to ETF
                                  RFC 3339.
                                type: string
                        localizationLanguage:
                          description: >
                            Information about localization language of the VNF
                            (includes e.g. strings in the VNFD). The
                            localization languages supported by a VNF can be
                            declared in the VNFD, and localization language
                            selection can take place at instantiation time. The
                            value shall comply with the format defined in IETF
                            RFC 5646.
                          type: string
                        vnfcResourceInfo:
                          description: >
                            Information about the virtualised compute and
                            storage resources used by the VNFCs of the VNF
                            instance.
                          type: array
                          items:
                            description: >
                              This type represents the information on
                              virtualised compute and storage resources used by
                              a VNFC in a VNF instance.
                            type: object
                            required:
                              - id
                              - vduId
                              - computeResource
                            properties:
                              id:
                                description: >
                                  An identifier that is unique for the
                                  respective type within a VNF instance, but may
                                  not be globally unique.
                                type: string
                              vduId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              computeResource:
                                required:
                                  - vimConnectionId
                                  - resourceId
                                type: object
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance. Information about
                                  the resource is available from the VIM.
                                properties:
                                  vimConnectionId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceProviderId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                                  vimLevelResourceType:
                                    description: >
                                      Type of the resource in the scope of the
                                      VIM or the resource provider.
                                    type: string
                              storageResourceIds:
                                description: >
                                  References to the VirtualStorage resources.
                                  The value refers to a
                                  VirtualStorageResourceInfo item in the
                                  VnfInstance.
                                type: array
                                items:
                                  description: >
                                    An identifier with the intention of being
                                    globally unique.
                                  type: string
                              reservationId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              vnfcCpInfo:
                                description: >
                                  CPs of the VNFC instance. Shall be present
                                  when that particular CP of the VNFC instance
                                  is associated to an external CP of the VNF
                                  instance. May be present otherwise.
                                type: array
                                items:
                                  type: object
                                  required:
                                    - id
                                    - cpdId
                                  properties:
                                    id:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                                    cpdId:
                                      description: >
                                        Identifier of the VNF Virtual Link
                                        Descriptor (VLD) in the VNFD.
                                      type: string
                                    vnfExtCpId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                                    cpProtocolInfo:
                                      description: >
                                        Network protocol information for this
                                        CP.
                                      type: array
                                      items:
                                        description: >
                                          This type describes the protocol
                                          layer(s) that a CP or SAP uses together
                                          with protocol-related information, like
                                          addresses. It shall comply with the
                                          provisions defined in Table 6.5.3.58-1.
                                        type: object
                                        required:
                                          - layerProtocol
                                          - ipOverEthernet
                                        properties:
                                          layerProtocol:
                                            description: >
                                              The identifier of layer(s) and
                                              protocol(s) associated to the network
                                              address information. Permitted values:
                                              IP_OVER_ETHERNET See note.
                                            type: string
                                            enum:
                                              - IP_OVER_ETHERNET
                                          ipOverEthernet:
                                            description: >
                                              This type represents information about a
                                              network address that has been assigned. 
                                              It shall comply with the provisions
                                              defined in Table 6.5.3.18-1.
                                            type: object
                                            required:
                                              - macAddress
                                              - ipAddresses
                                              - subnetId
                                              - addresses
                                              - addressRange
                                            properties:
                                              macAddress:
                                                description: >
                                                  A MAC address. Representation: string
                                                  that consists of groups of two
                                                  hexadecimal digits, separated by hyphens
                                                  or colons.
                                                type: string
                                                format: MAC
                                              ipAddresses:
                                                description: >
                                                  Addresses assigned to the CP instance.
                                                  Each entry represents IP addresses
                                                  assigned by fixed or dynamic IP address
                                                  assignment per subnet.
                                                type: array
                                                items:
                                                  type: object
                                                  required:
                                                    - type
                                                  properties:
                                                    type:
                                                      description: >
                                                        The type of the IP addresses. Permitted
                                                        values: IPV4, IPV6.
                                                      type: string
                                                      enum:
                                                        - IPV4
                                                        - IPV6
                                                    addresses:
                                                      description: >
                                                        Fixed addresses assigned (from the
                                                        subnet defined by "subnetId" if
                                                        provided).
                                                      type: array
                                                      items:
                                                        description: >
                                                          An IPV4 or IPV6 address. Representation:
                                                          In case of an IPV4 address, string that
                                                          consists of four decimal integers
                                                          separated by dots, each integer ranging
                                                          from 0 to 255. In case of an IPV6
                                                          address, string that  consists of groups
                                                          of zero to four hexadecimal digits,
                                                          separated by colons.
                                                        type: string
                                                        format: IP
                                                    isDynamic:
                                                      description: >
                                                        Indicates whether this set of addresses
                                                        was assigned dynamically (true) or based
                                                        on address information provided as input
                                                        from the API consumer (false). Shall be
                                                        present if "addresses" is present and
                                                        shall be absent otherwise.
                                                      type: boolean
                                                    addressRange:
                                                      description: >
                                                        An IP address range used, e.g., in case
                                                        of egress connections. Exactly one of
                                                        "addresses" or "addressRange" shall be
                                                        present.
                                                      type: object
                                                      required:
                                                        - minAddress
                                                        - maxAddress
                                                      properties:
                                                        minAddress:
                                                          description: >
                                                            An IPV4 or IPV6 address. Representation:
                                                            In case of an IPV4 address, string that
                                                            consists of four decimal integers
                                                            separated by dots, each integer ranging
                                                            from 0 to 255. In case of an IPV6
                                                            address, string that  consists of groups
                                                            of zero to four hexadecimal digits,
                                                            separated by colons.
                                                          type: string
                                                          format: IP
                                                        maxAddress:
                                                          description: >
                                                            An IPV4 or IPV6 address. Representation:
                                                            In case of an IPV4 address, string that
                                                            consists of four decimal integers
                                                            separated by dots, each integer ranging
                                                            from 0 to 255. In case of an IPV6
                                                            address, string that  consists of groups
                                                            of zero to four hexadecimal digits,
                                                            separated by colons.
                                                          type: string
                                                          format: IP
                                                    subnetId:
                                                      description: >
                                                        An identifier maintained by the VIM or
                                                        other resource provider. It is expected
                                                        to be unique within the VIM instance.
                                                      type: string
                                              type:
                                                description: |
                                                  The type of the IP addresses
                                                type: string
                                                enum:
                                                  - PV4
                                                  - PV6
                                              addresses:
                                                description: >
                                                  An IPV4 or IPV6 address. Representation:
                                                  In case of an IPV4 address, string that
                                                  consists of four decimal integers
                                                  separated by dots, each integer ranging
                                                  from 0 to 255. In case of an IPV6
                                                  address, string that  consists of groups
                                                  of zero to four hexadecimal digits,
                                                  separated by colons.
                                                type: string
                                                format: IP
                                              isDynamic:
                                                description: >
                                                  Indicates whether this set of addresses
                                                  was assigned dynamically (true) or based
                                                  on address information provided as input
                                                  from the API consumer (false). Shall be
                                                  present if "addresses" is present and
                                                  shall be absent otherwise.
                                                type: boolean
                                              addressRange:
                                                description: >
                                                  An IP address range used, e.g. in case
                                                  of egress connections. See note.
                                                type: object
                                                required:
                                                  - minAddress
                                                  - maxAddress
                                                properties:
                                                  minAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                                  maxAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                              minAddress:
                                                description: >
                                                  An IPV4 or IPV6 address. Representation:
                                                  In case of an IPV4 address, string that
                                                  consists of four decimal integers
                                                  separated by dots, each integer ranging
                                                  from 0 to 255. In case of an IPV6
                                                  address, string that  consists of groups
                                                  of zero to four hexadecimal digits,
                                                  separated by colons.
                                                type: string
                                                format: IP
                                              maxAddress:
                                                description: >
                                                  An IPV4 or IPV6 address. Representation:
                                                  In case of an IPV4 address, string that
                                                  consists of four decimal integers
                                                  separated by dots, each integer ranging
                                                  from 0 to 255. In case of an IPV6
                                                  address, string that  consists of groups
                                                  of zero to four hexadecimal digits,
                                                  separated by colons.
                                                type: string
                                                format: IP
                                              subnetId:
                                                description: >
                                                  An identifier maintained by the VIM or
                                                  other resource provider. It is expected
                                                  to be unique within the VIM instance.
                                                type: string
                                    vnfLinkPortId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                              metadata:
                                description: >
                                  This type represents a list of key-value
                                  pairs. The order of the pairs in the list is
                                  not significant. In JSON, a set of key- value
                                  pairs is represented as an object. It shall
                                  comply with the provisions  defined in clause
                                  4 of IETF RFC 7159. 
                                type: object
                        virtualLinkResourceInfo:
                          description: >
                            Information about the virtualised network resources
                            used by the VLs of the VNF instance.
                          type: array
                          items:
                            description: >
                              This type represents the information that allows
                              addressing a virtualised resource that is used by
                              an internal VL instance in a VNF instance.
                            type: object
                            required:
                              - id
                              - vnfVirtualLinkDescId
                              - networkResource
                            properties:
                              id:
                                description: >
                                  An identifier that is unique for the
                                  respective type within a VNF instance, but may
                                  not be globally unique.
                                type: string
                              vnfVirtualLinkDescId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              networkResource:
                                required:
                                  - vimConnectionId
                                  - resourceId
                                type: object
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance. Information about
                                  the resource is available from the VIM.
                                properties:
                                  vimConnectionId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceProviderId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                                  vimLevelResourceType:
                                    description: >
                                      Type of the resource in the scope of the
                                      VIM or the resource provider.
                                    type: string
                              reservationId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              vnfLinkPorts:
                                description: >
                                  Links ports of this VL. Shall be present when
                                  the linkPort is used for external connectivity
                                  by the VNF (refer to VnfLinkPortInfo). May be
                                  present otherwise.
                                type: array
                                items:
                                  type: object
                                  required:
                                    - id
                                    - resourceHandle
                                  properties:
                                    id:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                                    resourceHandle:
                                      required:
                                        - vimConnectionId
                                        - resourceId
                                      type: object
                                      description: >
                                        This type represents the information
                                        that allows addressing a virtualised
                                        resource that is used by a VNF instance.
                                        Information about the resource is
                                        available from the VIM.
                                      properties:
                                        vimConnectionId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceProviderId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                                        vimLevelResourceType:
                                          description: >
                                            Type of the resource in the scope of the
                                            VIM or the resource provider.
                                          type: string
                                    cpInstanceId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                              metadata:
                                description: >
                                  This type represents a list of key-value
                                  pairs. The order of the pairs in the list is
                                  not significant. In JSON, a set of key- value
                                  pairs is represented as an object. It shall
                                  comply with the provisions  defined in clause
                                  4 of IETF RFC 7159. 
                                type: object
                        virtualStorageResourceInfo:
                          description: >
                            Information on the virtualised storage resource(s)
                            used as storage for the VNF instance.
                          type: array
                          items:
                            description: >
                              This type represents the information that allows
                              addressing a virtualised resource that is used by
                              a VNF instance.
                            type: object
                            required:
                              - id
                              - virtualStorageDescId
                              - storageResource
                            properties:
                              id:
                                description: >
                                  An identifier that is unique for the
                                  respective type within a VNF instance, but may
                                  not be globally unique.
                                type: string
                              virtualStorageDescId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              storageResource:
                                required:
                                  - vimConnectionId
                                  - resourceId
                                type: object
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance. Information about
                                  the resource is available from the VIM.
                                properties:
                                  vimConnectionId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceProviderId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                                  vimLevelResourceType:
                                    description: >
                                      Type of the resource in the scope of the
                                      VIM or the resource provider.
                                    type: string
                              reservationId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              metadata:
                                description: >
                                  This type represents a list of key-value
                                  pairs. The order of the pairs in the list is
                                  not significant. In JSON, a set of key- value
                                  pairs is represented as an object. It shall
                                  comply with the provisions  defined in clause
                                  4 of IETF RFC 7159. 
                                type: object
                    metadata:
                      description: >
                        This type represents a list of key-value pairs. The
                        order of the pairs in the list is not significant. In
                        JSON, a set of key- value pairs is represented as an
                        object. It shall comply with the provisions  defined in
                        clause 4 of IETF RFC 7159. 
                      type: object
                    extensions:
                      description: >
                        This type represents a list of key-value pairs. The
                        order of the pairs in the list is not significant. In
                        JSON, a set of key- value pairs is represented as an
                        object. It shall comply with the provisions  defined in
                        clause 4 of IETF RFC 7159. 
                      type: object
              pnfInfo:
                description: |
                  Information on the PNF(s) that are part of the NS instance.
                type: array
                items:
                  description: >
                    This type represents the information about a PNF that is
                    part of an NS instance.  It shall comply with the provisions
                    defined in Table 6.5.3.13-1.
                  type: object
                  required:
                    - pnfId
                    - pnfdId
                    - pnfdInfoId
                    - pnfProfileId
                  properties:
                    pnfId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    pnfName:
                      description: |
                        Name of the PNF.
                      type: string
                    pnfdId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    pnfdInfoId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    pnfProfileId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
                    cpInfo:
                      description: >
                        This type represents the information about the external
                        CP of the PNF.  It shall comply with the provisions
                        defined in Table 6.5.3.17-1.
                      type: object
                      required:
                        - cpInstanceId
                        - cpdId
                      properties:
                        cpInstanceId:
                          description: |
                            Identifier of the CP in the scope of the PNF.
                          type: string
                        cpdId:
                          description: >
                            An identifier that is unique within a NS descriptor.
                            Representation: string of variable length.
                          type: string
                        cpProtocolData:
                          description: >
                            Parameters for configuring the network protocols on
                            the CP.
                          type: array
                          items:
                            description: |
                              This type represents network protocol data. 
                            type: object
                            required:
                              - layerProtocol
                            properties:
                              layerProtocol:
                                description: >
                                  Identifier of layer(s) and protocol(s).
                                  Permitted values: IP_OVER_ETHERNET.
                                type: string
                                enum:
                                  - IP_OVER_ETHERNET
                              ipOverEthernet:
                                description: >
                                  This type represents network address data for
                                  IP over Ethernet.
                                type: object
                                properties:
                                  macAddress:
                                    description: >
                                      A MAC address. Representation: string that
                                      consists of groups of two hexadecimal
                                      digits, separated by hyphens or colons.
                                    type: string
                                    format: MAC
                                  ipAddresses:
                                    description: >
                                      List of IP addresses to assign to the CP
                                      instance. Each entry represents IP address
                                      data for fixed or dynamic IP address
                                      assignment per subnet. If this attribute
                                      is not present, no IP address shall be
                                      assigned.
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - type
                                      properties:
                                        type:
                                          description: >
                                            The type of the IP addresses. Permitted
                                            values: IPV4, IPV6.
                                          type: string
                                          enum:
                                            - IPV4
                                            - IPV6
                                        fixedAddresses:
                                          description: >
                                            Fixed addresses to assign (from the
                                            subnet defined by "subnetId" if
                                            provided). Exactly one of
                                            "fixedAddresses", "numDynamicAddresses"
                                            or "ipAddressRange" shall be present.
                                          type: array
                                          items:
                                            description: >
                                              An IPV4 or IPV6 address. Representation:
                                              In case of an IPV4 address, string that
                                              consists of four decimal integers
                                              separated by dots, each integer ranging
                                              from 0 to 255. In case of an IPV6
                                              address, string that  consists of groups
                                              of zero to four hexadecimal digits,
                                              separated by colons.
                                            type: string
                                            format: IP
                                        numDynamicAddresses:
                                          description: >
                                            Number of dynamic addresses to assign
                                            (from the subnet defined by "subnetId"
                                            if provided). Exactly one of
                                            "fixedAddresses", "numDynamicAddresses"
                                            or "ipAddressRange" shall be present.
                                          type: integer
                                        addressRange:
                                          description: >
                                            An IP address range to be used, e.g. in
                                            case of egress connections. In case this
                                            attribute is present, IP addresses from
                                            the range will be used.
                                          type: object
                                          required:
                                            - minAddress
                                            - maxAddress
                                          properties:
                                            minAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                            maxAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                        subnetId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
              virtualLinkInfo:
                description: >
                  Information on the VL(s) of the NS instance. This attribute
                  shall be present if the nsState attribute value is
                  INSTANTIATED and if the NS instance has specified
                  connectivity.
                type: array
                items:
                  description: >
                    This type specifies the information about an NS VL
                    instance.  It shall comply with the provisions defined in
                    Table 6.5.3.53-1
                  type: object
                  required:
                    - id
                    - nsVirtualLinkDescId
                  properties:
                    id:
                      description: >
                        An identifier that is unique with respect to a NS. 
                        Representation: string of variable length.
                      type: string
                    nsVirtualLinkDescId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
                    resourceHandle:
                      description: >
                        Identifier(s) of the virtualised network resource(s)
                        realizing the VL instance. See note.
                      type: array
                      items:
                        required:
                          - vimConnectionId
                          - resourceId
                        type: object
                        description: >
                          This type represents the information that allows
                          addressing a virtualised resource that is used by a
                          VNF instance. Information about the resource is
                          available from the VIM.
                        properties:
                          vimConnectionId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          resourceProviderId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          resourceId:
                            description: >
                              An identifier maintained by the VIM or other
                              resource provider. It is expected to be unique
                              within the VIM instance.
                            type: string
                          vimLevelResourceType:
                            description: >
                              Type of the resource in the scope of the VIM or
                              the resource provider.
                            type: string
                    linkPort:
                      description: >
                        Link ports of the VL instance. Cardinality of zero
                        indicates that no port has yet been created for the VL
                        instance.
                      type: array
                      items:
                        description: >
                          This type represents information about a link port of
                          a VL instance.  It shall comply with the provisions
                          defined in Table 6.5.3.55-1.
                        type: object
                        required:
                          - id
                          - resourceHandle
                        properties:
                          id:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          resourceHandle:
                            required:
                              - vimConnectionId
                              - resourceId
                            type: object
                            description: >
                              This type represents the information that allows
                              addressing a virtualised resource that is used by
                              a VNF instance. Information about the resource is
                              available from the VIM.
                            properties:
                              vimConnectionId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceProviderId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceId:
                                description: >
                                  An identifier maintained by the VIM or other
                                  resource provider. It is expected to be unique
                                  within the VIM instance.
                                type: string
                              vimLevelResourceType:
                                description: >
                                  Type of the resource in the scope of the VIM
                                  or the resource provider.
                                type: string
                          nsCpHandle:
                            description: >
                              Identifier of the CP/SAP instance to be connected
                              to this link port. The value refers to a
                              vnfExtCpInfo item in the VnfInstance, or a
                              pnfExtCpInfo item in the PnfInfo, or a sapInfo
                              item in the NS instance. There shall be at most
                              one link port associated with any connection point
                              instance.
                            type: array
                            items:
                              description: >
                                This type represents an identifier of the CP or
                                SAP instance.  It shall comply with the
                                provisions defined in Table 6.5.3.56-1.
                              type: object
                              properties:
                                vnfInstanceId:
                                  description: >
                                    An identifier with the intention of being
                                    globally unique.
                                  type: string
                                vnfExtCpInstanceId:
                                  description: >
                                    An identifier that is unique for the
                                    respective type within a VNF instance, but
                                    may not be globally unique.
                                  type: string
                                pnfInfoId:
                                  description: >
                                    An identifier with the intention of being
                                    globally unique.
                                  type: string
                                pnfExtCpInstanceId:
                                  description: >
                                    Identifier of the CP in the scope of the
                                    PNF.
                                  type: string
                                nsInstanceId:
                                  description: >
                                    An identifier with the intention of being
                                    globally unique.
                                  type: string
                                nsSapInstanceId:
                                  description: >
                                    An identifier that is unique with respect to
                                    a NS.  Representation: string of variable
                                    length.
                                  type: string
              vnffgInfo:
                description: |
                  Information on the VNFFG(s) of the NS instance.
                type: array
                items:
                  description: |
                    Information on the VNFFG(s) of the NS instance.
                  type: object
                  required:
                    - id
                    - vnffgdId
                    - vnfInstanceId
                    - pnfInfoId
                  properties:
                    id:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    vnffgdId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
                    vnfInstanceId:
                      description: >
                        Identifier(s) of the constituent VNF instance(s) of this
                        VNFFG instance.
                      type: array
                      items:
                        description: >
                          An identifier with the intention of being globally
                          unique.
                        type: string
                    pnfdInfoId:
                      description: >
                        Identifier(s) of the constituent PNF instance(s) of this
                        VNFFG instance.
                      type: array
                      items:
                        description: >
                          An identifier with the intention of being globally
                          unique.
                        type: string
                    nsVirtualLinkInfoId:
                      description: >
                        Identifier(s) of the constituent VL instance(s) of this
                        VNFFG instance.
                      type: array
                      items:
                        description: >
                          An identifier that is unique with respect to a NS. 
                          Representation: string of variable length.
                        type: string
                    nsCpHandle:
                      description: >
                        Identifiers of the CP instances attached to the
                        constituent VNFs and PNFs or the SAP instances of the
                        VNFFG. See note.
                      type: array
                      items:
                        description: >
                          This type represents an identifier of the CP or SAP
                          instance.  It shall comply with the provisions defined
                          in Table 6.5.3.56-1.
                        type: object
                        properties:
                          vnfInstanceId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          vnfExtCpInstanceId:
                            description: >
                              An identifier that is unique for the respective
                              type within a VNF instance, but may not be
                              globally unique.
                            type: string
                          pnfInfoId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          pnfExtCpInstanceId:
                            description: |
                              Identifier of the CP in the scope of the PNF.
                            type: string
                          nsInstanceId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          nsSapInstanceId:
                            description: >
                              An identifier that is unique with respect to a
                              NS.  Representation: string of variable length.
                            type: string
              sapInfo:
                description: |
                  Information on the SAP(s) of the NS instance.
                type: array
                items:
                  description: >
                    This type represents an SAP instance. It shall comply with
                    the provisions defined in Table 6.5.3.67-1.
                  type: object
                  required:
                    - id
                    - sapdId
                    - sapName
                    - sapProtocolInfo
                  properties:
                    id:
                      description: >
                        An identifier that is unique with respect to a NS. 
                        Representation: string of variable length.
                      type: string
                    sapdId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
                    sapName:
                      description: |
                        Human readable name for the SAP instance.
                      type: string
                    description:
                      description: |
                        Human readable description for the SAP instance.
                      type: string
                    sapProtocolInfo:
                      description: |
                        Network protocol information for this SAP.
                      type: array
                      items:
                        description: >
                          This type describes the protocol layer(s) that a CP or
                          SAP uses together with protocol-related information,
                          like addresses. It shall comply with the provisions
                          defined in Table 6.5.3.58-1.
                        type: object
                        required:
                          - layerProtocol
                          - ipOverEthernet
                        properties:
                          layerProtocol:
                            description: >
                              The identifier of layer(s) and protocol(s)
                              associated to the network address information.
                              Permitted values: IP_OVER_ETHERNET See note.
                            type: string
                            enum:
                              - IP_OVER_ETHERNET
                          ipOverEthernet:
                            description: >
                              This type represents information about a network
                              address that has been assigned.  It shall comply
                              with the provisions defined in Table 6.5.3.18-1.
                            type: object
                            required:
                              - macAddress
                              - ipAddresses
                              - subnetId
                              - addresses
                              - addressRange
                            properties:
                              macAddress:
                                description: >
                                  A MAC address. Representation: string that
                                  consists of groups of two hexadecimal digits,
                                  separated by hyphens or colons.
                                type: string
                                format: MAC
                              ipAddresses:
                                description: >
                                  Addresses assigned to the CP instance. Each
                                  entry represents IP addresses assigned by
                                  fixed or dynamic IP address assignment per
                                  subnet.
                                type: array
                                items:
                                  type: object
                                  required:
                                    - type
                                  properties:
                                    type:
                                      description: >
                                        The type of the IP addresses. Permitted
                                        values: IPV4, IPV6.
                                      type: string
                                      enum:
                                        - IPV4
                                        - IPV6
                                    addresses:
                                      description: >
                                        Fixed addresses assigned (from the
                                        subnet defined by "subnetId" if
                                        provided).
                                      type: array
                                      items:
                                        description: >
                                          An IPV4 or IPV6 address. Representation:
                                          In case of an IPV4 address, string that
                                          consists of four decimal integers
                                          separated by dots, each integer ranging
                                          from 0 to 255. In case of an IPV6
                                          address, string that  consists of groups
                                          of zero to four hexadecimal digits,
                                          separated by colons.
                                        type: string
                                        format: IP
                                    isDynamic:
                                      description: >
                                        Indicates whether this set of addresses
                                        was assigned dynamically (true) or based
                                        on address information provided as input
                                        from the API consumer (false). Shall be
                                        present if "addresses" is present and
                                        shall be absent otherwise.
                                      type: boolean
                                    addressRange:
                                      description: >
                                        An IP address range used, e.g., in case
                                        of egress connections. Exactly one of
                                        "addresses" or "addressRange" shall be
                                        present.
                                      type: object
                                      required:
                                        - minAddress
                                        - maxAddress
                                      properties:
                                        minAddress:
                                          description: >
                                            An IPV4 or IPV6 address. Representation:
                                            In case of an IPV4 address, string that
                                            consists of four decimal integers
                                            separated by dots, each integer ranging
                                            from 0 to 255. In case of an IPV6
                                            address, string that  consists of groups
                                            of zero to four hexadecimal digits,
                                            separated by colons.
                                          type: string
                                          format: IP
                                        maxAddress:
                                          description: >
                                            An IPV4 or IPV6 address. Representation:
                                            In case of an IPV4 address, string that
                                            consists of four decimal integers
                                            separated by dots, each integer ranging
                                            from 0 to 255. In case of an IPV6
                                            address, string that  consists of groups
                                            of zero to four hexadecimal digits,
                                            separated by colons.
                                          type: string
                                          format: IP
                                    subnetId:
                                      description: >
                                        An identifier maintained by the VIM or
                                        other resource provider. It is expected
                                        to be unique within the VIM instance.
                                      type: string
                              type:
                                description: |
                                  The type of the IP addresses
                                type: string
                                enum:
                                  - PV4
                                  - PV6
                              addresses:
                                description: >
                                  An IPV4 or IPV6 address. Representation: In
                                  case of an IPV4 address, string that consists
                                  of four decimal integers separated by dots,
                                  each integer ranging from 0 to 255. In case of
                                  an IPV6 address, string that  consists of
                                  groups of zero to four hexadecimal digits,
                                  separated by colons.
                                type: string
                                format: IP
                              isDynamic:
                                description: >
                                  Indicates whether this set of addresses was
                                  assigned dynamically (true) or based on
                                  address information provided as input from the
                                  API consumer (false). Shall be present if
                                  "addresses" is present and shall be absent
                                  otherwise.
                                type: boolean
                              addressRange:
                                description: >
                                  An IP address range used, e.g. in case of
                                  egress connections. See note.
                                type: object
                                required:
                                  - minAddress
                                  - maxAddress
                                properties:
                                  minAddress:
                                    description: >
                                      An IPV4 or IPV6 address. Representation:
                                      In case of an IPV4 address, string that
                                      consists of four decimal integers
                                      separated by dots, each integer ranging
                                      from 0 to 255. In case of an IPV6 address,
                                      string that  consists of groups of zero to
                                      four hexadecimal digits, separated by
                                      colons.
                                    type: string
                                    format: IP
                                  maxAddress:
                                    description: >
                                      An IPV4 or IPV6 address. Representation:
                                      In case of an IPV4 address, string that
                                      consists of four decimal integers
                                      separated by dots, each integer ranging
                                      from 0 to 255. In case of an IPV6 address,
                                      string that  consists of groups of zero to
                                      four hexadecimal digits, separated by
                                      colons.
                                    type: string
                                    format: IP
                              minAddress:
                                description: >
                                  An IPV4 or IPV6 address. Representation: In
                                  case of an IPV4 address, string that consists
                                  of four decimal integers separated by dots,
                                  each integer ranging from 0 to 255. In case of
                                  an IPV6 address, string that  consists of
                                  groups of zero to four hexadecimal digits,
                                  separated by colons.
                                type: string
                                format: IP
                              maxAddress:
                                description: >
                                  An IPV4 or IPV6 address. Representation: In
                                  case of an IPV4 address, string that consists
                                  of four decimal integers separated by dots,
                                  each integer ranging from 0 to 255. In case of
                                  an IPV6 address, string that  consists of
                                  groups of zero to four hexadecimal digits,
                                  separated by colons.
                                type: string
                                format: IP
                              subnetId:
                                description: >
                                  An identifier maintained by the VIM or other
                                  resource provider. It is expected to be unique
                                  within the VIM instance.
                                type: string
              nestedNsInstanceId:
                description: |
                  Identifier of the nested NS(s) of the NS instance.
                type: array
                items:
                  description: |
                    An identifier with the intention of being globally unique.
                  type: string
              nsState:
                description: >
                  The state of the NS instance. Permitted values:
                  NOT_INSTANTIATED: The NS instance is terminated or not
                  instantiated. INSTANTIATED: The NS instance is instantiated.
                type: string
                enum:
                  - NOT_INSTANTIATED
                  - INSTANTIATED
              nsScaleStatus:
                description: >
                  Status of each NS scaling aspect declared in the applicable
                  DF, how "big" the NS instance has been scaled w.r.t. that
                  aspect. This attribute shall be present if the nsState
                  attribute value is INSTANTIATED.
                type: array
                items:
                  description: >
                    This type represents the target NS Scale level for each NS
                    scaling aspect of the current deployment flavor.
                  type: object
                  required:
                    - nsScalingAspectId
                    - nsScaleLevelId
                  properties:
                    nsScalingAspectId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
                    nsScaleLevelId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
              additionalAffinityOrAntiAffinityRule:
                description: >
                  Information on the additional affinity or anti-affinity rule
                  from NS instantiation operation. Shall not conflict with rules
                  already specified in the NSD.
                type: array
                items:
                  description: >
                    This type describes the additional affinity or anti-affinity
                    rule  applicable between the VNF instances to be
                    instantiated in the NS instantiation operation request or
                    between the VNF instances  to be instantiated in the NS
                    instantiation operation request and the existing VNF
                    instances..
                  type: object
                  required:
                    - affinityOrAntiAffiinty
                    - scope
                  properties:
                    vnfdId:
                      description: >
                        Reference to a VNFD. When the VNFD which is not used to
                        instantiate VNF, it presents all VNF instances of this
                        type as the subjects of the affinity or anti-affinity
                        rule. The VNF instance which the VNFD presents is not
                        necessary as a part of the NS to be instantiated.
                      type: array
                      items:
                        description: >
                          An identifier with the intention of being globally
                          unique.
                        type: string
                    vnfProfileId:
                      description: >
                        Reference to a vnfProfile defined in the NSD. At least
                        one VnfProfile which is used to instantiate VNF for the
                        NS to be instantiated as the subject of the affinity or
                        anti-affinity rule shall be present. When the VnfProfile
                        which is not used to instantiate VNF, it presents all
                        VNF instances of this type as the subjects of the
                        affinity or anti-affinity rule. The VNF instance which
                        the VnfProfile presents is not necessary as a part of
                        the NS to be instantiated.
                      type: array
                      items:
                        description: >
                          An identifier that is unique within a NS descriptor.
                          Representation: string of variable length.
                        type: string
                    vnfInstanceId:
                      description: >
                        Reference to the existing VNF instance as the subject of
                        the affinity or anti-affinity rule. The existing VNF
                        instance is not necessary as a part of the NS to be
                        instantiated.
                      type: array
                      items:
                        description: >
                          An identifier with the intention of being globally
                          unique.
                        type: string
                    affinityOrAntiAffiinty:
                      description: >
                        The type of the constraint. Permitted values: AFFINITY
                        ANTI_AFFINITY.
                      type: string
                      enum:
                        - AFFINITY
                        - ANTI_AFFINITY
                    scope:
                      description: >
                        Specifies the scope of the rule where the placement
                        constraint applies. Permitted values: NFVI_POP ZONE
                        ZONE_GROUP NFVI_NODE.
                      type: string
                      enum:
                        - NFVI_POP
                        - ZONE
                        - ZONE_GROUP
                        - NFVI_NODE
              _links:
                type: object
                description: Links to resources related to this resource.
                required:
                  - self
                properties:
                  self:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
                  nestedNsInstances:
                    description: |
                      Links to resources related to this notification.
                    type: array
                    items:
                      description: |
                        This type represents a link to a resource.
                      type: object
                      required:
                        - href
                      properties:
                        href:
                          description: |
                            URI of the referenced resource.
                          type: string
                          format: url
                  instantiate:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
                  terminate:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
                  update:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
                  scale:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
                  heal:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
        '400':
          description: >
            Bad Request

            Error: Invalid attribute-based filtering parameters. The response
            body shall contain a ProblemDetails structure, in which the "detail"
            attribute should convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '401':
          description: >
            Unauthorized If the request contains no access token even though one
            is required, or if the request contains an authorization token that
            is invalid (e.g. expired or revoked), the API producer should
            respond with this response. The details of the error shall be
            returned in the WWW-Authenticate HTTP header, as defined in IETF RFC
            6750 and IETF RFC 7235. The ProblemDetails structure may be
            provided.
          headers:
            Content-Type:
              type: string
              description: The MIME type of the body of the response.
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '403':
          description: >
            Forbidden If the API consumer is not allowed to perform a particular
            request to a particular resource, the API producer shall respond
            with this response code. The "ProblemDetails" structure shall be
            provided.  It should include in the "detail" attribute information
            about the source of the problem, and may indicate how to solve it.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '404':
          description: >
            Not Found If the API producer did not find a current representation
            for the resource addressed by the URI passed in the request, or is
            not willing to disclose that one exists, it shall respond with this
            response code.  The "ProblemDetails" structure may be provided,
            including in the "detail" attribute information about the source of
            the problem, e.g. a wrong resource URI variable.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '405':
          description: >
            Method Not Allowed If a particular HTTP method is not supported for
            a particular resource, the API producer shall respond with this
            response code. The "ProblemDetails" structure may be omitted in that
            case.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '406':
          description: >
            Not Acceptable If the Accept HTTP header does not contain at least
            one name of a content type that is acceptable to the API producer,
            the API producer shall respond with this response code. The
            ProblemDetails structure may be omitted in that case.        
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '409':
          description: >
            Conflict

            Error: The operation cannot be executed currently, due to a conflict
            with the state of the NS LCM operation occurrence resource.
            Typically, this is due to the fact that the NS LCM operation
            occurrence is not in FAILED_TEMP state, or another error handling
            action is starting, such as retry or fail. The response body shall
            contain a ProblemDetails structure, in which the "detail" attribute
            shall convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '416':
          description: >
            Requested Range Not Satisfiable This code is returned if the
            requested byte range in the Range HTTP header is not present in the
            requested resource.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '500':
          description: >
            Internal Server Error If there is an application error not related
            to the client's input that cannot be easily mapped to any other HTTP
            response code ("catch all error"), the API producer shall respond
            withthis response code. The ProblemDetails structure shall be
            provided, and shall include in the "detail" attribute more
            information about the source of the problem.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '503':
          description: >
            Service Unavailable If the API producer encounters an internal
            overload situation of itself or of a system it relies on, it should
            respond with this response code, following the provisions in IETF
            RFC 7231 [13] for the use of the Retry-After HTTP header and for the
            alternative to refuse the connection. The "ProblemDetails" structure
            may be omitted.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
  '/ns_instances/{nsInstanceId}/scale':
    parameters:
      - name: nsInstanceId
        description: |
          Identifier of the NS instance to be scaled.
        in: path
        type: string
        required: true
    post:
      summary: Scale a NS instance.
      description: |
        The POST method requests to scale a NS instance resource.
      parameters:
        - name: Accept
          description: >
            Content-Types that are acceptable for the response. Reference: IETF
            RFC 7231
          in: header
          required: true
          type: string
        - name: Authorization
          description: |
            The authorization token for the request. Reference: IETF RFC 7235
          in: header
          required: false
          type: string
        - name: Content-Type
          description: |
            The MIME type of the body of the request. Reference: IETF RFC 7231
          in: header
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - ScaleNsRequest
            properties:
              ScaleNsRequest:
                description: >
                  This type represents a request for the scale NS
                  operation.       
                type: object
                required:
                  - scaleType
                properties:
                  scaleType:
                    description: >
                      Indicates the type of scaling to be performed. Possible
                      values: - SCALE_NS - SCALE_VNF
                    type: string
                    enum:
                      - SCALE_NS
                      - SCALE_VNF
                  scaleNsData:
                    description: |
                      This type represents the information to scale a NS.
                    type: object
                    properties:
                      vnfInstanceToBeAdded:
                        description: >
                          An existing VNF instance to be added to the NS
                          instance as part of the scaling operation. If needed,
                          the VNF Profile to be used for this VNF instance may
                          also be provided.
                        type: array
                        items:
                          description: >
                            This type specifies an existing VNF instance to be
                            used in the NS instance and  if needed, the VNF
                            Profile to use for this VNF instance.  It shall
                            comply with the provisions defined in Table
                            6.5.3.19-1.
                          type: object
                          required:
                            - vnfInstanceId
                            - vnfProfileId
                          properties:
                            vnfInstanceId:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                            vnfProfileId:
                              description: >
                                An identifier that is unique within a NS
                                descriptor. Representation: string of variable
                                length.
                              type: string
                      vnfInstanceToBeRemoved:
                        description: >
                          The VNF instance to be removed from the NS instance as
                          part of the scaling operation.
                        type: array
                        items:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                      scaleNsByStepsData:
                        description: >
                          This type represents the information used to scale an
                          NS instance by one or more scaling steps, with respect
                          to a particular NS scaling aspect. Performing a
                          scaling step means increasing/decreasing the capacity
                          of an NS instance in a discrete manner, i.e. moving
                          from one NS scale level to another. The NS scaling
                          aspects and their corresponding NS scale levels
                          applicable to the NS instance are declared in the NSD.
                        type: object
                        required:
                          - scalingDirection
                          - aspectId
                        properties:
                          scalingDirection:
                            description: >
                              The scaling direction. Possible values are: -
                              SCALE_IN - SCALE_OUT.
                            type: string
                            enum:
                              - SCALE_IN
                              - SCALE_OUT
                          aspectId:
                            description: >
                              An identifier that is unique within a NS
                              descriptor. Representation: string of variable
                              length.
                            type: string
                          numberOfSteps:
                            description: >
                              The number of scaling steps to be performed.
                              Defaults to 1.
                            type: integer
                            default: 1
                      scaleNsToLevelData:
                        description: >
                          This type represents the information used to scale an
                          NS instance to a target size. The target size is
                          either expressed as an NS instantiation level or as a
                          list of NS scale levels, one per NS scaling aspect, of
                          the current DF. The NS instantiation levels, the NS
                          scaling aspects and their corresponding NS scale
                          levels applicable to the NS instance are declared in
                          the NSD.
                        type: object
                        properties:
                          nsInstantiationLevel:
                            description: >
                              An identifier that is unique within a NS
                              descriptor. Representation: string of variable
                              length.
                            type: string
                          nsScaleInfo:
                            description: >
                              For each NS scaling aspect of the current DF,
                              defines the target NS scale level to which the NS
                              instance is to be scaled.
                            type: array
                            items:
                              description: >
                                This type represents the target NS Scale level
                                for each NS scaling aspect of the current
                                deployment flavor.
                              type: object
                              required:
                                - nsScalingAspectId
                                - nsScaleLevelId
                              properties:
                                nsScalingAspectId:
                                  description: >
                                    An identifier that is unique within a NS
                                    descriptor. Representation: string of
                                    variable length.
                                  type: string
                                nsScaleLevelId:
                                  description: >
                                    An identifier that is unique within a NS
                                    descriptor. Representation: string of
                                    variable length.
                                  type: string
                      additionalParamsForNs:
                        description: >
                          This type defines the additional parameters for the
                          VNF instance  to be created associated with an NS
                          instance.  It shall comply with the provisions defined
                          in Table 6.5.3.22-1.
                        type: object
                        required:
                          - vnfProfileId
                        properties:
                          vnfProfileId:
                            description: >
                              An identifier that is unique within a NS
                              descriptor. Representation: string of variable
                              length.
                            type: string
                          additionalParams:
                            description: >
                              This type represents a list of key-value pairs.
                              The order of the pairs in the list is not
                              significant. In JSON, a set of key- value pairs is
                              represented as an object. It shall comply with the
                              provisions  defined in clause 4 of IETF RFC 7159. 
                            type: object
                      additionalParamsForVnf:
                        description: >
                          Allows the OSS/BSS to provide additional parameter(s)
                          per VNF instance (as opposed to the NS level, which is
                          covered in additionalParamforNs). This is for VNFs
                          that are to be created by the NFVO as part of the NS
                          scaling and not for existing VNF that are covered by
                          the scaleVnfData.
                        type: array
                        items:
                          description: >
                            This type defines the additional parameters for the
                            VNF instance  to be created associated with an NS
                            instance.  It shall comply with the provisions
                            defined in Table 6.5.3.22-1.
                          type: object
                          required:
                            - vnfProfileId
                          properties:
                            vnfProfileId:
                              description: >
                                An identifier that is unique within a NS
                                descriptor. Representation: string of variable
                                length.
                              type: string
                            additionalParams:
                              description: >
                                This type represents a list of key-value pairs.
                                The order of the pairs in the list is not
                                significant. In JSON, a set of key- value pairs
                                is represented as an object. It shall comply
                                with the provisions  defined in clause 4 of IETF
                                RFC 7159. 
                              type: object
                      locationConstraints:
                        description: >
                          The location constraints for the VNF to be
                          instantiated as part of the NS scaling. An example can
                          be a constraint for the VNF to be in a specific
                          geographic location.
                        type: array
                        items:
                          description: >
                            This type represents the association of location
                            constraints to a VNF instance  to be created
                            according to a specific VNF profile.  It shall
                            comply with the provisions defined in Table
                            6.5.3.20-1.
                          type: object
                          required:
                            - vnfProfileId
                          properties:
                            vnfProfileId:
                              description: >
                                An identifier that is unique within a NS
                                descriptor. Representation: string of variable
                                length.
                              type: string
                            locationConstraints:
                              description: >
                                This type represents location constraints for a
                                VNF to be instantiated.  The location
                                constraints shall be presented as a country
                                code, optionally followed by a civic address
                                based on  the format defined by IETF RFC 4776
                                [13].
                              type: object
                              required:
                                - countryCode
                              properties:
                                countryCode:
                                  description: >
                                    The two-letter ISO 3166 [29] country code in
                                    capital letters.
                                  type: string
                                civicAddressElement:
                                  description: >
                                    Zero or more elements comprising the civic
                                    address.
                                  type: array
                                  items:
                                    type: object
                                    required:
                                      - caType
                                      - caValue
                                    properties:
                                      caType:
                                        description: >
                                          Describe the content type of caValue.
                                          The value of caType shall comply with
                                          Section 3.4 of IETF RFC 4776 [13].
                                        type: integer
                                      caValue:
                                        description: >
                                          Content of civic address element
                                          corresponding to the caType. The format
                                          caValue shall comply with Section 3.4 of
                                          IETF RFC 4776 [13].
                                        type: string
                  scaleVnfData:
                    description: >
                      The necessary information to scale the referenced NS
                      instance. It shall be present when scaleType = SCALE_VNF.
                    type: array
                    items:
                      description: >
                        This type represents defines the information to scale a
                        VNF instance  to a given level, or to scale a VNF
                        instance by steps.
                      type: object
                      required:
                        - vnfInstanceid
                        - scaleVnfType
                      properties:
                        vnfInstanceid:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        scaleVnfType:
                          description: >
                            Type of the scale VNF operation requested. Allowed
                            values are: - SCALE_OUT - SCALE_IN -
                            SCALE_TO_INSTANTIATION_LEVEL -
                            SCALE_TO_SCALE_LEVEL(S) The set of types actually
                            supported depends on the capabilities of the VNF
                            being managed.
                          type: string
                          enum:
                            - SCALE_OUT
                            - SCALE_IN
                            - SCALE_TO_INSTANTIATION_LEVEL
                            - SCALE_TO_SCALE_LEVEL(S)
                        scaleToLevelData:
                          description: >
                            This type describes the information used to scale a
                            VNF instance to a target size. The target size is
                            either expressed as an instantiation level of that
                            DF as defined in the VNFD, or given as a list of
                            scale levels, one per scaling aspect of that DF.
                            Instantiation levels and scaling aspects are
                            declared in the VNFD. The NFVO shall then invoke the
                            ScaleVnfToLevel operation towards the appropriate
                            VNFM..
                          type: object
                          properties:
                            vnfInstantiationLevelId:
                              description: >
                                Identifier of the VNF Virtual Link Descriptor
                                (VLD) in the VNFD.
                              type: string
                            vnfScaleInfo:
                              description: >
                                For each scaling aspect of the current
                                deployment flavor, indicates the target scale
                                level to which the VNF is to be scaled.
                              type: array
                              items:
                                required:
                                  - aspectId
                                  - scaleLevel
                                type: object
                                properties:
                                  aspectId:
                                    description: >
                                      Identifier of the VNF Virtual Link
                                      Descriptor (VLD) in the VNFD.
                                    type: string
                                  scaleLevel:
                                    description: >
                                      Indicates the scale level. The minimum
                                      value shall be 0 and the maximum value
                                      shall be <= maxScaleLevel as described in
                                      the VNFD.
                                    type: integer
                            additionalParams:
                              description: >
                                This type represents a list of key-value pairs.
                                The order of the pairs in the list is not
                                significant. In JSON, a set of key- value pairs
                                is represented as an object. It shall comply
                                with the provisions  defined in clause 4 of IETF
                                RFC 7159. 
                              type: object
                        scaleByStepData:
                          description: >
                            This type describes the information to scale a VNF
                            instance by steps.  The NFVO shall then invoke the
                            Scale VNF operation towards the appropriate VNFM.
                          type: object
                          required:
                            - aspectId
                          properties:
                            aspectId:
                              description: >
                                Identifier of the VNF Virtual Link Descriptor
                                (VLD) in the VNFD.
                              type: string
                            numberOfSteps:
                              description: >
                                Number of scaling steps. It shall be a positive
                                number. Defaults to 1. The VNF provider defines
                                in the VNFD whether or not a particular VNF
                                supports performing more than one step at a
                                time. Such a property in the VNFD applies for
                                all instances of a particular VNF.
                              type: integer
                              default: 1
                            additionalParams:
                              description: >
                                This type represents a list of key-value pairs.
                                The order of the pairs in the list is not
                                significant. In JSON, a set of key- value pairs
                                is represented as an object. It shall comply
                                with the provisions  defined in clause 4 of IETF
                                RFC 7159. 
                              type: object
                  scaleTime:
                    description: >
                      Date-time stamp.  Representation: String formatted
                      according to IETF RFC 3339.
                    type: string
                    format: date-time
            description: >
              Parameters for the scale NS operation, as defined in clause
              6.5.2.13.            
      responses:
        '202':
          description: >
            202 Accepted

            The request was accepted for processing, but the processing has not 
            been completed. 

            The response body shall be empty.

            The HTTP response shall include a "Location" HTTP header that
            contains the URI of the newly-created "NS lifecycle operation
            occurrence" resource corresponding to the operation.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            Location:
              description: The resource URI of the created NS instance
              type: string
              format: url
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              This type represents a response for Query NS operation.  It shall
              comply with the provisions defined in Table 6.5.2.10-1.
            type: object
            required:
              - id
              - nsInstanceName
              - nsInstanceDescription
              - nsdId
              - nsdInfoId
              - nsState
            properties:
              id:
                description: |
                  An identifier with the intention of being globally unique.
                type: string
              nsInstanceName:
                description: |
                  Human readable name of the NS instance.
                type: string
              nsInstanceDescription:
                description: |
                  Human readable description of the NS instance.
                type: string
              nsdId:
                description: |
                  An identifier with the intention of being globally unique.
                type: string
              nsdInfoId:
                description: |
                  An identifier with the intention of being globally unique.
                type: string
              flavourId:
                description: >
                  An identifier that is unique within a NS descriptor.
                  Representation: string of variable length.
                type: string
              vnfInstance:
                description: |
                  Information on constituent VNF(s) of the NS instance.
                type: array
                items:
                  description: |
                    This type represents a VNF instance.
                  type: object
                  required:
                    - id
                    - vnfdId
                    - vnfProvider
                    - vnfProductName
                    - vnfSoftwareVersion
                    - vnfdVersion
                    - vnfPkgId
                    - instantiationState
                  properties:
                    id:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    vnfInstanceName:
                      description: >
                        Name of the VNF instance. This attribute can be modified
                        with the PATCH method.
                      type: string
                    vnfInstanceDescription:
                      description: >
                        Human-readable description of the VNF instance. This
                        attribute can be modified with the PATCH method.
                      type: string
                    vnfdId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    vnfProvider:
                      description: >
                        Provider of the VNF and the VNFD. The value is copied
                        from the VNFD.
                      type: string
                    vnfProductName:
                      description: >
                        Name to identify the VNF Product. The value is copied
                        from the VNFD.
                      type: string
                    vnfSoftwareVersion:
                      description: |
                        A Version.
                      type: string
                    vnfdVersion:
                      description: |
                        A Version.
                      type: string
                    vnfPkgId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    vnfConfigurableProperties:
                      description: >
                        This type represents a list of key-value pairs. The
                        order of the pairs in the list is not significant. In
                        JSON, a set of key- value pairs is represented as an
                        object. It shall comply with the provisions  defined in
                        clause 4 of IETF RFC 7159. 
                      type: object
                    vimId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    instantiationState:
                      description: |
                        The instantiation state of the VNF.
                      type: string
                      enum:
                        - NOT_INSTANTIATED
                        - INSTANTIATED
                    instantiatedVnfInfo:
                      description: >
                        Information specific to an instantiated VNF instance.
                        This attribute shall be present if the instantiateState
                        attribute value is INSTANTIATED.
                      type: object
                      required:
                        - flavourId
                        - vnfState
                      properties:
                        flavourId:
                          description: >
                            Identifier of the VNF Virtual Link Descriptor (VLD)
                            in the VNFD.
                          type: string
                        vnfState:
                          type: string
                          enum:
                            - STARTED
                            - STOPPED
                        scaleStatus:
                          description: >
                            Scale status of the VNF, one entry per aspect.
                            Represents for every scaling aspect how "big" the
                            VNF has been scaled w.r.t. that aspect.
                          type: array
                          items:
                            required:
                              - aspectId
                              - scaleLevel
                            type: object
                            properties:
                              aspectId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              scaleLevel:
                                description: >
                                  Indicates the scale level. The minimum value
                                  shall be 0 and the maximum value shall be <=
                                  maxScaleLevel as described in the VNFD.
                                type: integer
                        extCpInfo:
                          description: >
                            Information about the external CPs exposed by the
                            VNF instance.
                          type: array
                          minItems: 1
                          items:
                            type: object
                            required:
                              - id
                              - cpdId
                            properties:
                              id:
                                description: >
                                  An identifier that is unique for the
                                  respective type within a VNF instance, but may
                                  not be globally unique.
                                type: string
                              cpdId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              cpProtocolInfo:
                                description: |
                                  Network protocol information for this CP.
                                type: array
                                items:
                                  description: >
                                    This type describes the protocol layer(s)
                                    that a CP or SAP uses together with
                                    protocol-related information, like
                                    addresses. It shall comply with the
                                    provisions defined in Table 6.5.3.58-1.
                                  type: object
                                  required:
                                    - layerProtocol
                                    - ipOverEthernet
                                  properties:
                                    layerProtocol:
                                      description: >
                                        The identifier of layer(s) and
                                        protocol(s) associated to the network
                                        address information. Permitted values:
                                        IP_OVER_ETHERNET See note.
                                      type: string
                                      enum:
                                        - IP_OVER_ETHERNET
                                    ipOverEthernet:
                                      description: >
                                        This type represents information about a
                                        network address that has been assigned. 
                                        It shall comply with the provisions
                                        defined in Table 6.5.3.18-1.
                                      type: object
                                      required:
                                        - macAddress
                                        - ipAddresses
                                        - subnetId
                                        - addresses
                                        - addressRange
                                      properties:
                                        macAddress:
                                          description: >
                                            A MAC address. Representation: string
                                            that consists of groups of two
                                            hexadecimal digits, separated by hyphens
                                            or colons.
                                          type: string
                                          format: MAC
                                        ipAddresses:
                                          description: >
                                            Addresses assigned to the CP instance.
                                            Each entry represents IP addresses
                                            assigned by fixed or dynamic IP address
                                            assignment per subnet.
                                          type: array
                                          items:
                                            type: object
                                            required:
                                              - type
                                            properties:
                                              type:
                                                description: >
                                                  The type of the IP addresses. Permitted
                                                  values: IPV4, IPV6.
                                                type: string
                                                enum:
                                                  - IPV4
                                                  - IPV6
                                              addresses:
                                                description: >
                                                  Fixed addresses assigned (from the
                                                  subnet defined by "subnetId" if
                                                  provided).
                                                type: array
                                                items:
                                                  description: >
                                                    An IPV4 or IPV6 address. Representation:
                                                    In case of an IPV4 address, string that
                                                    consists of four decimal integers
                                                    separated by dots, each integer ranging
                                                    from 0 to 255. In case of an IPV6
                                                    address, string that  consists of groups
                                                    of zero to four hexadecimal digits,
                                                    separated by colons.
                                                  type: string
                                                  format: IP
                                              isDynamic:
                                                description: >
                                                  Indicates whether this set of addresses
                                                  was assigned dynamically (true) or based
                                                  on address information provided as input
                                                  from the API consumer (false). Shall be
                                                  present if "addresses" is present and
                                                  shall be absent otherwise.
                                                type: boolean
                                              addressRange:
                                                description: >
                                                  An IP address range used, e.g., in case
                                                  of egress connections. Exactly one of
                                                  "addresses" or "addressRange" shall be
                                                  present.
                                                type: object
                                                required:
                                                  - minAddress
                                                  - maxAddress
                                                properties:
                                                  minAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                                  maxAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                              subnetId:
                                                description: >
                                                  An identifier maintained by the VIM or
                                                  other resource provider. It is expected
                                                  to be unique within the VIM instance.
                                                type: string
                                        type:
                                          description: |
                                            The type of the IP addresses
                                          type: string
                                          enum:
                                            - PV4
                                            - PV6
                                        addresses:
                                          description: >
                                            An IPV4 or IPV6 address. Representation:
                                            In case of an IPV4 address, string that
                                            consists of four decimal integers
                                            separated by dots, each integer ranging
                                            from 0 to 255. In case of an IPV6
                                            address, string that  consists of groups
                                            of zero to four hexadecimal digits,
                                            separated by colons.
                                          type: string
                                          format: IP
                                        isDynamic:
                                          description: >
                                            Indicates whether this set of addresses
                                            was assigned dynamically (true) or based
                                            on address information provided as input
                                            from the API consumer (false). Shall be
                                            present if "addresses" is present and
                                            shall be absent otherwise.
                                          type: boolean
                                        addressRange:
                                          description: >
                                            An IP address range used, e.g. in case
                                            of egress connections. See note.
                                          type: object
                                          required:
                                            - minAddress
                                            - maxAddress
                                          properties:
                                            minAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                            maxAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                        minAddress:
                                          description: >
                                            An IPV4 or IPV6 address. Representation:
                                            In case of an IPV4 address, string that
                                            consists of four decimal integers
                                            separated by dots, each integer ranging
                                            from 0 to 255. In case of an IPV6
                                            address, string that  consists of groups
                                            of zero to four hexadecimal digits,
                                            separated by colons.
                                          type: string
                                          format: IP
                                        maxAddress:
                                          description: >
                                            An IPV4 or IPV6 address. Representation:
                                            In case of an IPV4 address, string that
                                            consists of four decimal integers
                                            separated by dots, each integer ranging
                                            from 0 to 255. In case of an IPV6
                                            address, string that  consists of groups
                                            of zero to four hexadecimal digits,
                                            separated by colons.
                                          type: string
                                          format: IP
                                        subnetId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                              extLinkPortId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                        extVirtualLinkInfo:
                          description: >
                            Information about the external VLs the VNF instance
                            is connected to.
                          type: array
                          items:
                            type: object
                            required:
                              - id
                              - resourceHandle
                            properties:
                              id:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceHandle:
                                required:
                                  - vimConnectionId
                                  - resourceId
                                type: object
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance. Information about
                                  the resource is available from the VIM.
                                properties:
                                  vimConnectionId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceProviderId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                                  vimLevelResourceType:
                                    description: >
                                      Type of the resource in the scope of the
                                      VIM or the resource provider.
                                    type: string
                              extLinkPorts:
                                description: |
                                  Link ports of this VL.
                                type: array
                                items:
                                  description: >
                                    This type represents information about a
                                    link port of an external VL, i.e. a port
                                    providing connectivity for the VNF to an NS
                                    VL. 
                                  type: object
                                  required:
                                    - id
                                    - resourceHandle
                                  properties:
                                    id:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    resourceHandle:
                                      required:
                                        - vimConnectionId
                                        - resourceId
                                      type: object
                                      description: >
                                        This type represents the information
                                        that allows addressing a virtualised
                                        resource that is used by a VNF instance.
                                        Information about the resource is
                                        available from the VIM.
                                      properties:
                                        vimConnectionId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceProviderId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                                        vimLevelResourceType:
                                          description: >
                                            Type of the resource in the scope of the
                                            VIM or the resource provider.
                                          type: string
                                    cpInstanceId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                        extManagedVirtualLinkInfo:
                          description: >
                            External virtual links the VNF instance is connected
                            to.
                          type: array
                          items:
                            type: object
                            required:
                              - id
                              - vnfVirtualLinkDescId
                            properties:
                              id:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              vnfVirtualLinkDescId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              networkResource:
                                required:
                                  - vimConnectionId
                                  - resourceId
                                type: object
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance. Information about
                                  the resource is available from the VIM.
                                properties:
                                  vimConnectionId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceProviderId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                                  vimLevelResourceType:
                                    description: >
                                      Type of the resource in the scope of the
                                      VIM or the resource provider.
                                    type: string
                              vnfLinkPorts:
                                description: |
                                  Link ports of this VL.
                                type: array
                                items:
                                  type: object
                                  required:
                                    - id
                                    - resourceHandle
                                  properties:
                                    id:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                                    resourceHandle:
                                      required:
                                        - vimConnectionId
                                        - resourceId
                                      type: object
                                      description: >
                                        This type represents the information
                                        that allows addressing a virtualised
                                        resource that is used by a VNF instance.
                                        Information about the resource is
                                        available from the VIM.
                                      properties:
                                        vimConnectionId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceProviderId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                                        vimLevelResourceType:
                                          description: >
                                            Type of the resource in the scope of the
                                            VIM or the resource provider.
                                          type: string
                                    cpInstanceId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                        monitoringParameters:
                          description: |
                            Active monitoring parameters.
                          type: array
                          items:
                            type: object
                            required:
                              - id
                              - value
                              - timeStamp
                            properties:
                              id:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              name:
                                description: >
                                  Human readable name of the monitoring
                                  parameter, as defined in the VNFD.
                                type: string
                              value:
                                description: >
                                  Value of the monitoring parameter known to the
                                  VNFM (e.g. obtained for auto-scaling
                                  purposes). The type of the "value" attribute
                                  (i.e. scalar, structure (Object in JSON), or
                                  array (of scalars, arrays or
                                  structures/Objects)) is assumed to be defined
                                  in an external measurement specification.
                                type: object
                              timeStamp:
                                description: >
                                  Represents the point in time when the
                                  measurement has been performed, as known to
                                  the VNFM. Should be formatted according to ETF
                                  RFC 3339.
                                type: string
                        localizationLanguage:
                          description: >
                            Information about localization language of the VNF
                            (includes e.g. strings in the VNFD). The
                            localization languages supported by a VNF can be
                            declared in the VNFD, and localization language
                            selection can take place at instantiation time. The
                            value shall comply with the format defined in IETF
                            RFC 5646.
                          type: string
                        vnfcResourceInfo:
                          description: >
                            Information about the virtualised compute and
                            storage resources used by the VNFCs of the VNF
                            instance.
                          type: array
                          items:
                            description: >
                              This type represents the information on
                              virtualised compute and storage resources used by
                              a VNFC in a VNF instance.
                            type: object
                            required:
                              - id
                              - vduId
                              - computeResource
                            properties:
                              id:
                                description: >
                                  An identifier that is unique for the
                                  respective type within a VNF instance, but may
                                  not be globally unique.
                                type: string
                              vduId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              computeResource:
                                required:
                                  - vimConnectionId
                                  - resourceId
                                type: object
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance. Information about
                                  the resource is available from the VIM.
                                properties:
                                  vimConnectionId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceProviderId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                                  vimLevelResourceType:
                                    description: >
                                      Type of the resource in the scope of the
                                      VIM or the resource provider.
                                    type: string
                              storageResourceIds:
                                description: >
                                  References to the VirtualStorage resources.
                                  The value refers to a
                                  VirtualStorageResourceInfo item in the
                                  VnfInstance.
                                type: array
                                items:
                                  description: >
                                    An identifier with the intention of being
                                    globally unique.
                                  type: string
                              reservationId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              vnfcCpInfo:
                                description: >
                                  CPs of the VNFC instance. Shall be present
                                  when that particular CP of the VNFC instance
                                  is associated to an external CP of the VNF
                                  instance. May be present otherwise.
                                type: array
                                items:
                                  type: object
                                  required:
                                    - id
                                    - cpdId
                                  properties:
                                    id:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                                    cpdId:
                                      description: >
                                        Identifier of the VNF Virtual Link
                                        Descriptor (VLD) in the VNFD.
                                      type: string
                                    vnfExtCpId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                                    cpProtocolInfo:
                                      description: >
                                        Network protocol information for this
                                        CP.
                                      type: array
                                      items:
                                        description: >
                                          This type describes the protocol
                                          layer(s) that a CP or SAP uses together
                                          with protocol-related information, like
                                          addresses. It shall comply with the
                                          provisions defined in Table 6.5.3.58-1.
                                        type: object
                                        required:
                                          - layerProtocol
                                          - ipOverEthernet
                                        properties:
                                          layerProtocol:
                                            description: >
                                              The identifier of layer(s) and
                                              protocol(s) associated to the network
                                              address information. Permitted values:
                                              IP_OVER_ETHERNET See note.
                                            type: string
                                            enum:
                                              - IP_OVER_ETHERNET
                                          ipOverEthernet:
                                            description: >
                                              This type represents information about a
                                              network address that has been assigned. 
                                              It shall comply with the provisions
                                              defined in Table 6.5.3.18-1.
                                            type: object
                                            required:
                                              - macAddress
                                              - ipAddresses
                                              - subnetId
                                              - addresses
                                              - addressRange
                                            properties:
                                              macAddress:
                                                description: >
                                                  A MAC address. Representation: string
                                                  that consists of groups of two
                                                  hexadecimal digits, separated by hyphens
                                                  or colons.
                                                type: string
                                                format: MAC
                                              ipAddresses:
                                                description: >
                                                  Addresses assigned to the CP instance.
                                                  Each entry represents IP addresses
                                                  assigned by fixed or dynamic IP address
                                                  assignment per subnet.
                                                type: array
                                                items:
                                                  type: object
                                                  required:
                                                    - type
                                                  properties:
                                                    type:
                                                      description: >
                                                        The type of the IP addresses. Permitted
                                                        values: IPV4, IPV6.
                                                      type: string
                                                      enum:
                                                        - IPV4
                                                        - IPV6
                                                    addresses:
                                                      description: >
                                                        Fixed addresses assigned (from the
                                                        subnet defined by "subnetId" if
                                                        provided).
                                                      type: array
                                                      items:
                                                        description: >
                                                          An IPV4 or IPV6 address. Representation:
                                                          In case of an IPV4 address, string that
                                                          consists of four decimal integers
                                                          separated by dots, each integer ranging
                                                          from 0 to 255. In case of an IPV6
                                                          address, string that  consists of groups
                                                          of zero to four hexadecimal digits,
                                                          separated by colons.
                                                        type: string
                                                        format: IP
                                                    isDynamic:
                                                      description: >
                                                        Indicates whether this set of addresses
                                                        was assigned dynamically (true) or based
                                                        on address information provided as input
                                                        from the API consumer (false). Shall be
                                                        present if "addresses" is present and
                                                        shall be absent otherwise.
                                                      type: boolean
                                                    addressRange:
                                                      description: >
                                                        An IP address range used, e.g., in case
                                                        of egress connections. Exactly one of
                                                        "addresses" or "addressRange" shall be
                                                        present.
                                                      type: object
                                                      required:
                                                        - minAddress
                                                        - maxAddress
                                                      properties:
                                                        minAddress:
                                                          description: >
                                                            An IPV4 or IPV6 address. Representation:
                                                            In case of an IPV4 address, string that
                                                            consists of four decimal integers
                                                            separated by dots, each integer ranging
                                                            from 0 to 255. In case of an IPV6
                                                            address, string that  consists of groups
                                                            of zero to four hexadecimal digits,
                                                            separated by colons.
                                                          type: string
                                                          format: IP
                                                        maxAddress:
                                                          description: >
                                                            An IPV4 or IPV6 address. Representation:
                                                            In case of an IPV4 address, string that
                                                            consists of four decimal integers
                                                            separated by dots, each integer ranging
                                                            from 0 to 255. In case of an IPV6
                                                            address, string that  consists of groups
                                                            of zero to four hexadecimal digits,
                                                            separated by colons.
                                                          type: string
                                                          format: IP
                                                    subnetId:
                                                      description: >
                                                        An identifier maintained by the VIM or
                                                        other resource provider. It is expected
                                                        to be unique within the VIM instance.
                                                      type: string
                                              type:
                                                description: |
                                                  The type of the IP addresses
                                                type: string
                                                enum:
                                                  - PV4
                                                  - PV6
                                              addresses:
                                                description: >
                                                  An IPV4 or IPV6 address. Representation:
                                                  In case of an IPV4 address, string that
                                                  consists of four decimal integers
                                                  separated by dots, each integer ranging
                                                  from 0 to 255. In case of an IPV6
                                                  address, string that  consists of groups
                                                  of zero to four hexadecimal digits,
                                                  separated by colons.
                                                type: string
                                                format: IP
                                              isDynamic:
                                                description: >
                                                  Indicates whether this set of addresses
                                                  was assigned dynamically (true) or based
                                                  on address information provided as input
                                                  from the API consumer (false). Shall be
                                                  present if "addresses" is present and
                                                  shall be absent otherwise.
                                                type: boolean
                                              addressRange:
                                                description: >
                                                  An IP address range used, e.g. in case
                                                  of egress connections. See note.
                                                type: object
                                                required:
                                                  - minAddress
                                                  - maxAddress
                                                properties:
                                                  minAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                                  maxAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                              minAddress:
                                                description: >
                                                  An IPV4 or IPV6 address. Representation:
                                                  In case of an IPV4 address, string that
                                                  consists of four decimal integers
                                                  separated by dots, each integer ranging
                                                  from 0 to 255. In case of an IPV6
                                                  address, string that  consists of groups
                                                  of zero to four hexadecimal digits,
                                                  separated by colons.
                                                type: string
                                                format: IP
                                              maxAddress:
                                                description: >
                                                  An IPV4 or IPV6 address. Representation:
                                                  In case of an IPV4 address, string that
                                                  consists of four decimal integers
                                                  separated by dots, each integer ranging
                                                  from 0 to 255. In case of an IPV6
                                                  address, string that  consists of groups
                                                  of zero to four hexadecimal digits,
                                                  separated by colons.
                                                type: string
                                                format: IP
                                              subnetId:
                                                description: >
                                                  An identifier maintained by the VIM or
                                                  other resource provider. It is expected
                                                  to be unique within the VIM instance.
                                                type: string
                                    vnfLinkPortId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                              metadata:
                                description: >
                                  This type represents a list of key-value
                                  pairs. The order of the pairs in the list is
                                  not significant. In JSON, a set of key- value
                                  pairs is represented as an object. It shall
                                  comply with the provisions  defined in clause
                                  4 of IETF RFC 7159. 
                                type: object
                        virtualLinkResourceInfo:
                          description: >
                            Information about the virtualised network resources
                            used by the VLs of the VNF instance.
                          type: array
                          items:
                            description: >
                              This type represents the information that allows
                              addressing a virtualised resource that is used by
                              an internal VL instance in a VNF instance.
                            type: object
                            required:
                              - id
                              - vnfVirtualLinkDescId
                              - networkResource
                            properties:
                              id:
                                description: >
                                  An identifier that is unique for the
                                  respective type within a VNF instance, but may
                                  not be globally unique.
                                type: string
                              vnfVirtualLinkDescId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              networkResource:
                                required:
                                  - vimConnectionId
                                  - resourceId
                                type: object
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance. Information about
                                  the resource is available from the VIM.
                                properties:
                                  vimConnectionId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceProviderId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                                  vimLevelResourceType:
                                    description: >
                                      Type of the resource in the scope of the
                                      VIM or the resource provider.
                                    type: string
                              reservationId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              vnfLinkPorts:
                                description: >
                                  Links ports of this VL. Shall be present when
                                  the linkPort is used for external connectivity
                                  by the VNF (refer to VnfLinkPortInfo). May be
                                  present otherwise.
                                type: array
                                items:
                                  type: object
                                  required:
                                    - id
                                    - resourceHandle
                                  properties:
                                    id:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                                    resourceHandle:
                                      required:
                                        - vimConnectionId
                                        - resourceId
                                      type: object
                                      description: >
                                        This type represents the information
                                        that allows addressing a virtualised
                                        resource that is used by a VNF instance.
                                        Information about the resource is
                                        available from the VIM.
                                      properties:
                                        vimConnectionId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceProviderId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                                        vimLevelResourceType:
                                          description: >
                                            Type of the resource in the scope of the
                                            VIM or the resource provider.
                                          type: string
                                    cpInstanceId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                              metadata:
                                description: >
                                  This type represents a list of key-value
                                  pairs. The order of the pairs in the list is
                                  not significant. In JSON, a set of key- value
                                  pairs is represented as an object. It shall
                                  comply with the provisions  defined in clause
                                  4 of IETF RFC 7159. 
                                type: object
                        virtualStorageResourceInfo:
                          description: >
                            Information on the virtualised storage resource(s)
                            used as storage for the VNF instance.
                          type: array
                          items:
                            description: >
                              This type represents the information that allows
                              addressing a virtualised resource that is used by
                              a VNF instance.
                            type: object
                            required:
                              - id
                              - virtualStorageDescId
                              - storageResource
                            properties:
                              id:
                                description: >
                                  An identifier that is unique for the
                                  respective type within a VNF instance, but may
                                  not be globally unique.
                                type: string
                              virtualStorageDescId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              storageResource:
                                required:
                                  - vimConnectionId
                                  - resourceId
                                type: object
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance. Information about
                                  the resource is available from the VIM.
                                properties:
                                  vimConnectionId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceProviderId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                                  vimLevelResourceType:
                                    description: >
                                      Type of the resource in the scope of the
                                      VIM or the resource provider.
                                    type: string
                              reservationId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              metadata:
                                description: >
                                  This type represents a list of key-value
                                  pairs. The order of the pairs in the list is
                                  not significant. In JSON, a set of key- value
                                  pairs is represented as an object. It shall
                                  comply with the provisions  defined in clause
                                  4 of IETF RFC 7159. 
                                type: object
                    metadata:
                      description: >
                        This type represents a list of key-value pairs. The
                        order of the pairs in the list is not significant. In
                        JSON, a set of key- value pairs is represented as an
                        object. It shall comply with the provisions  defined in
                        clause 4 of IETF RFC 7159. 
                      type: object
                    extensions:
                      description: >
                        This type represents a list of key-value pairs. The
                        order of the pairs in the list is not significant. In
                        JSON, a set of key- value pairs is represented as an
                        object. It shall comply with the provisions  defined in
                        clause 4 of IETF RFC 7159. 
                      type: object
              pnfInfo:
                description: |
                  Information on the PNF(s) that are part of the NS instance.
                type: array
                items:
                  description: >
                    This type represents the information about a PNF that is
                    part of an NS instance.  It shall comply with the provisions
                    defined in Table 6.5.3.13-1.
                  type: object
                  required:
                    - pnfId
                    - pnfdId
                    - pnfdInfoId
                    - pnfProfileId
                  properties:
                    pnfId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    pnfName:
                      description: |
                        Name of the PNF.
                      type: string
                    pnfdId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    pnfdInfoId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    pnfProfileId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
                    cpInfo:
                      description: >
                        This type represents the information about the external
                        CP of the PNF.  It shall comply with the provisions
                        defined in Table 6.5.3.17-1.
                      type: object
                      required:
                        - cpInstanceId
                        - cpdId
                      properties:
                        cpInstanceId:
                          description: |
                            Identifier of the CP in the scope of the PNF.
                          type: string
                        cpdId:
                          description: >
                            An identifier that is unique within a NS descriptor.
                            Representation: string of variable length.
                          type: string
                        cpProtocolData:
                          description: >
                            Parameters for configuring the network protocols on
                            the CP.
                          type: array
                          items:
                            description: |
                              This type represents network protocol data. 
                            type: object
                            required:
                              - layerProtocol
                            properties:
                              layerProtocol:
                                description: >
                                  Identifier of layer(s) and protocol(s).
                                  Permitted values: IP_OVER_ETHERNET.
                                type: string
                                enum:
                                  - IP_OVER_ETHERNET
                              ipOverEthernet:
                                description: >
                                  This type represents network address data for
                                  IP over Ethernet.
                                type: object
                                properties:
                                  macAddress:
                                    description: >
                                      A MAC address. Representation: string that
                                      consists of groups of two hexadecimal
                                      digits, separated by hyphens or colons.
                                    type: string
                                    format: MAC
                                  ipAddresses:
                                    description: >
                                      List of IP addresses to assign to the CP
                                      instance. Each entry represents IP address
                                      data for fixed or dynamic IP address
                                      assignment per subnet. If this attribute
                                      is not present, no IP address shall be
                                      assigned.
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - type
                                      properties:
                                        type:
                                          description: >
                                            The type of the IP addresses. Permitted
                                            values: IPV4, IPV6.
                                          type: string
                                          enum:
                                            - IPV4
                                            - IPV6
                                        fixedAddresses:
                                          description: >
                                            Fixed addresses to assign (from the
                                            subnet defined by "subnetId" if
                                            provided). Exactly one of
                                            "fixedAddresses", "numDynamicAddresses"
                                            or "ipAddressRange" shall be present.
                                          type: array
                                          items:
                                            description: >
                                              An IPV4 or IPV6 address. Representation:
                                              In case of an IPV4 address, string that
                                              consists of four decimal integers
                                              separated by dots, each integer ranging
                                              from 0 to 255. In case of an IPV6
                                              address, string that  consists of groups
                                              of zero to four hexadecimal digits,
                                              separated by colons.
                                            type: string
                                            format: IP
                                        numDynamicAddresses:
                                          description: >
                                            Number of dynamic addresses to assign
                                            (from the subnet defined by "subnetId"
                                            if provided). Exactly one of
                                            "fixedAddresses", "numDynamicAddresses"
                                            or "ipAddressRange" shall be present.
                                          type: integer
                                        addressRange:
                                          description: >
                                            An IP address range to be used, e.g. in
                                            case of egress connections. In case this
                                            attribute is present, IP addresses from
                                            the range will be used.
                                          type: object
                                          required:
                                            - minAddress
                                            - maxAddress
                                          properties:
                                            minAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                            maxAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                        subnetId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
              virtualLinkInfo:
                description: >
                  Information on the VL(s) of the NS instance. This attribute
                  shall be present if the nsState attribute value is
                  INSTANTIATED and if the NS instance has specified
                  connectivity.
                type: array
                items:
                  description: >
                    This type specifies the information about an NS VL
                    instance.  It shall comply with the provisions defined in
                    Table 6.5.3.53-1
                  type: object
                  required:
                    - id
                    - nsVirtualLinkDescId
                  properties:
                    id:
                      description: >
                        An identifier that is unique with respect to a NS. 
                        Representation: string of variable length.
                      type: string
                    nsVirtualLinkDescId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
                    resourceHandle:
                      description: >
                        Identifier(s) of the virtualised network resource(s)
                        realizing the VL instance. See note.
                      type: array
                      items:
                        required:
                          - vimConnectionId
                          - resourceId
                        type: object
                        description: >
                          This type represents the information that allows
                          addressing a virtualised resource that is used by a
                          VNF instance. Information about the resource is
                          available from the VIM.
                        properties:
                          vimConnectionId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          resourceProviderId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          resourceId:
                            description: >
                              An identifier maintained by the VIM or other
                              resource provider. It is expected to be unique
                              within the VIM instance.
                            type: string
                          vimLevelResourceType:
                            description: >
                              Type of the resource in the scope of the VIM or
                              the resource provider.
                            type: string
                    linkPort:
                      description: >
                        Link ports of the VL instance. Cardinality of zero
                        indicates that no port has yet been created for the VL
                        instance.
                      type: array
                      items:
                        description: >
                          This type represents information about a link port of
                          a VL instance.  It shall comply with the provisions
                          defined in Table 6.5.3.55-1.
                        type: object
                        required:
                          - id
                          - resourceHandle
                        properties:
                          id:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          resourceHandle:
                            required:
                              - vimConnectionId
                              - resourceId
                            type: object
                            description: >
                              This type represents the information that allows
                              addressing a virtualised resource that is used by
                              a VNF instance. Information about the resource is
                              available from the VIM.
                            properties:
                              vimConnectionId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceProviderId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceId:
                                description: >
                                  An identifier maintained by the VIM or other
                                  resource provider. It is expected to be unique
                                  within the VIM instance.
                                type: string
                              vimLevelResourceType:
                                description: >
                                  Type of the resource in the scope of the VIM
                                  or the resource provider.
                                type: string
                          nsCpHandle:
                            description: >
                              Identifier of the CP/SAP instance to be connected
                              to this link port. The value refers to a
                              vnfExtCpInfo item in the VnfInstance, or a
                              pnfExtCpInfo item in the PnfInfo, or a sapInfo
                              item in the NS instance. There shall be at most
                              one link port associated with any connection point
                              instance.
                            type: array
                            items:
                              description: >
                                This type represents an identifier of the CP or
                                SAP instance.  It shall comply with the
                                provisions defined in Table 6.5.3.56-1.
                              type: object
                              properties:
                                vnfInstanceId:
                                  description: >
                                    An identifier with the intention of being
                                    globally unique.
                                  type: string
                                vnfExtCpInstanceId:
                                  description: >
                                    An identifier that is unique for the
                                    respective type within a VNF instance, but
                                    may not be globally unique.
                                  type: string
                                pnfInfoId:
                                  description: >
                                    An identifier with the intention of being
                                    globally unique.
                                  type: string
                                pnfExtCpInstanceId:
                                  description: >
                                    Identifier of the CP in the scope of the
                                    PNF.
                                  type: string
                                nsInstanceId:
                                  description: >
                                    An identifier with the intention of being
                                    globally unique.
                                  type: string
                                nsSapInstanceId:
                                  description: >
                                    An identifier that is unique with respect to
                                    a NS.  Representation: string of variable
                                    length.
                                  type: string
              vnffgInfo:
                description: |
                  Information on the VNFFG(s) of the NS instance.
                type: array
                items:
                  description: |
                    Information on the VNFFG(s) of the NS instance.
                  type: object
                  required:
                    - id
                    - vnffgdId
                    - vnfInstanceId
                    - pnfInfoId
                  properties:
                    id:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    vnffgdId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
                    vnfInstanceId:
                      description: >
                        Identifier(s) of the constituent VNF instance(s) of this
                        VNFFG instance.
                      type: array
                      items:
                        description: >
                          An identifier with the intention of being globally
                          unique.
                        type: string
                    pnfdInfoId:
                      description: >
                        Identifier(s) of the constituent PNF instance(s) of this
                        VNFFG instance.
                      type: array
                      items:
                        description: >
                          An identifier with the intention of being globally
                          unique.
                        type: string
                    nsVirtualLinkInfoId:
                      description: >
                        Identifier(s) of the constituent VL instance(s) of this
                        VNFFG instance.
                      type: array
                      items:
                        description: >
                          An identifier that is unique with respect to a NS. 
                          Representation: string of variable length.
                        type: string
                    nsCpHandle:
                      description: >
                        Identifiers of the CP instances attached to the
                        constituent VNFs and PNFs or the SAP instances of the
                        VNFFG. See note.
                      type: array
                      items:
                        description: >
                          This type represents an identifier of the CP or SAP
                          instance.  It shall comply with the provisions defined
                          in Table 6.5.3.56-1.
                        type: object
                        properties:
                          vnfInstanceId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          vnfExtCpInstanceId:
                            description: >
                              An identifier that is unique for the respective
                              type within a VNF instance, but may not be
                              globally unique.
                            type: string
                          pnfInfoId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          pnfExtCpInstanceId:
                            description: |
                              Identifier of the CP in the scope of the PNF.
                            type: string
                          nsInstanceId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          nsSapInstanceId:
                            description: >
                              An identifier that is unique with respect to a
                              NS.  Representation: string of variable length.
                            type: string
              sapInfo:
                description: |
                  Information on the SAP(s) of the NS instance.
                type: array
                items:
                  description: >
                    This type represents an SAP instance. It shall comply with
                    the provisions defined in Table 6.5.3.67-1.
                  type: object
                  required:
                    - id
                    - sapdId
                    - sapName
                    - sapProtocolInfo
                  properties:
                    id:
                      description: >
                        An identifier that is unique with respect to a NS. 
                        Representation: string of variable length.
                      type: string
                    sapdId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
                    sapName:
                      description: |
                        Human readable name for the SAP instance.
                      type: string
                    description:
                      description: |
                        Human readable description for the SAP instance.
                      type: string
                    sapProtocolInfo:
                      description: |
                        Network protocol information for this SAP.
                      type: array
                      items:
                        description: >
                          This type describes the protocol layer(s) that a CP or
                          SAP uses together with protocol-related information,
                          like addresses. It shall comply with the provisions
                          defined in Table 6.5.3.58-1.
                        type: object
                        required:
                          - layerProtocol
                          - ipOverEthernet
                        properties:
                          layerProtocol:
                            description: >
                              The identifier of layer(s) and protocol(s)
                              associated to the network address information.
                              Permitted values: IP_OVER_ETHERNET See note.
                            type: string
                            enum:
                              - IP_OVER_ETHERNET
                          ipOverEthernet:
                            description: >
                              This type represents information about a network
                              address that has been assigned.  It shall comply
                              with the provisions defined in Table 6.5.3.18-1.
                            type: object
                            required:
                              - macAddress
                              - ipAddresses
                              - subnetId
                              - addresses
                              - addressRange
                            properties:
                              macAddress:
                                description: >
                                  A MAC address. Representation: string that
                                  consists of groups of two hexadecimal digits,
                                  separated by hyphens or colons.
                                type: string
                                format: MAC
                              ipAddresses:
                                description: >
                                  Addresses assigned to the CP instance. Each
                                  entry represents IP addresses assigned by
                                  fixed or dynamic IP address assignment per
                                  subnet.
                                type: array
                                items:
                                  type: object
                                  required:
                                    - type
                                  properties:
                                    type:
                                      description: >
                                        The type of the IP addresses. Permitted
                                        values: IPV4, IPV6.
                                      type: string
                                      enum:
                                        - IPV4
                                        - IPV6
                                    addresses:
                                      description: >
                                        Fixed addresses assigned (from the
                                        subnet defined by "subnetId" if
                                        provided).
                                      type: array
                                      items:
                                        description: >
                                          An IPV4 or IPV6 address. Representation:
                                          In case of an IPV4 address, string that
                                          consists of four decimal integers
                                          separated by dots, each integer ranging
                                          from 0 to 255. In case of an IPV6
                                          address, string that  consists of groups
                                          of zero to four hexadecimal digits,
                                          separated by colons.
                                        type: string
                                        format: IP
                                    isDynamic:
                                      description: >
                                        Indicates whether this set of addresses
                                        was assigned dynamically (true) or based
                                        on address information provided as input
                                        from the API consumer (false). Shall be
                                        present if "addresses" is present and
                                        shall be absent otherwise.
                                      type: boolean
                                    addressRange:
                                      description: >
                                        An IP address range used, e.g., in case
                                        of egress connections. Exactly one of
                                        "addresses" or "addressRange" shall be
                                        present.
                                      type: object
                                      required:
                                        - minAddress
                                        - maxAddress
                                      properties:
                                        minAddress:
                                          description: >
                                            An IPV4 or IPV6 address. Representation:
                                            In case of an IPV4 address, string that
                                            consists of four decimal integers
                                            separated by dots, each integer ranging
                                            from 0 to 255. In case of an IPV6
                                            address, string that  consists of groups
                                            of zero to four hexadecimal digits,
                                            separated by colons.
                                          type: string
                                          format: IP
                                        maxAddress:
                                          description: >
                                            An IPV4 or IPV6 address. Representation:
                                            In case of an IPV4 address, string that
                                            consists of four decimal integers
                                            separated by dots, each integer ranging
                                            from 0 to 255. In case of an IPV6
                                            address, string that  consists of groups
                                            of zero to four hexadecimal digits,
                                            separated by colons.
                                          type: string
                                          format: IP
                                    subnetId:
                                      description: >
                                        An identifier maintained by the VIM or
                                        other resource provider. It is expected
                                        to be unique within the VIM instance.
                                      type: string
                              type:
                                description: |
                                  The type of the IP addresses
                                type: string
                                enum:
                                  - PV4
                                  - PV6
                              addresses:
                                description: >
                                  An IPV4 or IPV6 address. Representation: In
                                  case of an IPV4 address, string that consists
                                  of four decimal integers separated by dots,
                                  each integer ranging from 0 to 255. In case of
                                  an IPV6 address, string that  consists of
                                  groups of zero to four hexadecimal digits,
                                  separated by colons.
                                type: string
                                format: IP
                              isDynamic:
                                description: >
                                  Indicates whether this set of addresses was
                                  assigned dynamically (true) or based on
                                  address information provided as input from the
                                  API consumer (false). Shall be present if
                                  "addresses" is present and shall be absent
                                  otherwise.
                                type: boolean
                              addressRange:
                                description: >
                                  An IP address range used, e.g. in case of
                                  egress connections. See note.
                                type: object
                                required:
                                  - minAddress
                                  - maxAddress
                                properties:
                                  minAddress:
                                    description: >
                                      An IPV4 or IPV6 address. Representation:
                                      In case of an IPV4 address, string that
                                      consists of four decimal integers
                                      separated by dots, each integer ranging
                                      from 0 to 255. In case of an IPV6 address,
                                      string that  consists of groups of zero to
                                      four hexadecimal digits, separated by
                                      colons.
                                    type: string
                                    format: IP
                                  maxAddress:
                                    description: >
                                      An IPV4 or IPV6 address. Representation:
                                      In case of an IPV4 address, string that
                                      consists of four decimal integers
                                      separated by dots, each integer ranging
                                      from 0 to 255. In case of an IPV6 address,
                                      string that  consists of groups of zero to
                                      four hexadecimal digits, separated by
                                      colons.
                                    type: string
                                    format: IP
                              minAddress:
                                description: >
                                  An IPV4 or IPV6 address. Representation: In
                                  case of an IPV4 address, string that consists
                                  of four decimal integers separated by dots,
                                  each integer ranging from 0 to 255. In case of
                                  an IPV6 address, string that  consists of
                                  groups of zero to four hexadecimal digits,
                                  separated by colons.
                                type: string
                                format: IP
                              maxAddress:
                                description: >
                                  An IPV4 or IPV6 address. Representation: In
                                  case of an IPV4 address, string that consists
                                  of four decimal integers separated by dots,
                                  each integer ranging from 0 to 255. In case of
                                  an IPV6 address, string that  consists of
                                  groups of zero to four hexadecimal digits,
                                  separated by colons.
                                type: string
                                format: IP
                              subnetId:
                                description: >
                                  An identifier maintained by the VIM or other
                                  resource provider. It is expected to be unique
                                  within the VIM instance.
                                type: string
              nestedNsInstanceId:
                description: |
                  Identifier of the nested NS(s) of the NS instance.
                type: array
                items:
                  description: |
                    An identifier with the intention of being globally unique.
                  type: string
              nsState:
                description: >
                  The state of the NS instance. Permitted values:
                  NOT_INSTANTIATED: The NS instance is terminated or not
                  instantiated. INSTANTIATED: The NS instance is instantiated.
                type: string
                enum:
                  - NOT_INSTANTIATED
                  - INSTANTIATED
              nsScaleStatus:
                description: >
                  Status of each NS scaling aspect declared in the applicable
                  DF, how "big" the NS instance has been scaled w.r.t. that
                  aspect. This attribute shall be present if the nsState
                  attribute value is INSTANTIATED.
                type: array
                items:
                  description: >
                    This type represents the target NS Scale level for each NS
                    scaling aspect of the current deployment flavor.
                  type: object
                  required:
                    - nsScalingAspectId
                    - nsScaleLevelId
                  properties:
                    nsScalingAspectId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
                    nsScaleLevelId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
              additionalAffinityOrAntiAffinityRule:
                description: >
                  Information on the additional affinity or anti-affinity rule
                  from NS instantiation operation. Shall not conflict with rules
                  already specified in the NSD.
                type: array
                items:
                  description: >
                    This type describes the additional affinity or anti-affinity
                    rule  applicable between the VNF instances to be
                    instantiated in the NS instantiation operation request or
                    between the VNF instances  to be instantiated in the NS
                    instantiation operation request and the existing VNF
                    instances..
                  type: object
                  required:
                    - affinityOrAntiAffiinty
                    - scope
                  properties:
                    vnfdId:
                      description: >
                        Reference to a VNFD. When the VNFD which is not used to
                        instantiate VNF, it presents all VNF instances of this
                        type as the subjects of the affinity or anti-affinity
                        rule. The VNF instance which the VNFD presents is not
                        necessary as a part of the NS to be instantiated.
                      type: array
                      items:
                        description: >
                          An identifier with the intention of being globally
                          unique.
                        type: string
                    vnfProfileId:
                      description: >
                        Reference to a vnfProfile defined in the NSD. At least
                        one VnfProfile which is used to instantiate VNF for the
                        NS to be instantiated as the subject of the affinity or
                        anti-affinity rule shall be present. When the VnfProfile
                        which is not used to instantiate VNF, it presents all
                        VNF instances of this type as the subjects of the
                        affinity or anti-affinity rule. The VNF instance which
                        the VnfProfile presents is not necessary as a part of
                        the NS to be instantiated.
                      type: array
                      items:
                        description: >
                          An identifier that is unique within a NS descriptor.
                          Representation: string of variable length.
                        type: string
                    vnfInstanceId:
                      description: >
                        Reference to the existing VNF instance as the subject of
                        the affinity or anti-affinity rule. The existing VNF
                        instance is not necessary as a part of the NS to be
                        instantiated.
                      type: array
                      items:
                        description: >
                          An identifier with the intention of being globally
                          unique.
                        type: string
                    affinityOrAntiAffiinty:
                      description: >
                        The type of the constraint. Permitted values: AFFINITY
                        ANTI_AFFINITY.
                      type: string
                      enum:
                        - AFFINITY
                        - ANTI_AFFINITY
                    scope:
                      description: >
                        Specifies the scope of the rule where the placement
                        constraint applies. Permitted values: NFVI_POP ZONE
                        ZONE_GROUP NFVI_NODE.
                      type: string
                      enum:
                        - NFVI_POP
                        - ZONE
                        - ZONE_GROUP
                        - NFVI_NODE
              _links:
                type: object
                description: Links to resources related to this resource.
                required:
                  - self
                properties:
                  self:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
                  nestedNsInstances:
                    description: |
                      Links to resources related to this notification.
                    type: array
                    items:
                      description: |
                        This type represents a link to a resource.
                      type: object
                      required:
                        - href
                      properties:
                        href:
                          description: |
                            URI of the referenced resource.
                          type: string
                          format: url
                  instantiate:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
                  terminate:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
                  update:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
                  scale:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
                  heal:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
        '400':
          description: >
            Bad Request

            Error: Invalid attribute-based filtering parameters. The response
            body shall contain a ProblemDetails structure, in which the "detail"
            attribute should convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '401':
          description: >
            Unauthorized If the request contains no access token even though one
            is required, or if the request contains an authorization token that
            is invalid (e.g. expired or revoked), the API producer should
            respond with this response. The details of the error shall be
            returned in the WWW-Authenticate HTTP header, as defined in IETF RFC
            6750 and IETF RFC 7235. The ProblemDetails structure may be
            provided.
          headers:
            Content-Type:
              type: string
              description: The MIME type of the body of the response.
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '403':
          description: >
            Forbidden If the API consumer is not allowed to perform a particular
            request to a particular resource, the API producer shall respond
            with this response code. The "ProblemDetails" structure shall be
            provided.  It should include in the "detail" attribute information
            about the source of the problem, and may indicate how to solve it.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '404':
          description: >
            Not Found Error: The API producer did not find a current
            representation for the target resource or is not willing to disclose
            that one exists. Specifically in case of this task resource, the 
            response code 404 shall also returned if the task is not supported
            for the NS instance represented by the parent resource, which means
            that the task resource consequently does not exist.  In this case,
            the response body shall be present, and shall contain a
            ProblemDetails structure, in which the "detail" attribute shall
            convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '405':
          description: >
            Method Not Allowed If a particular HTTP method is not supported for
            a particular resource, the API producer shall respond with this
            response code. The "ProblemDetails" structure may be omitted in that
            case.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '406':
          description: >
            Not Acceptable If the Accept HTTP header does not contain at least
            one name of a content type that is acceptable to the API producer,
            the API producer shall respond with this response code. The
            ProblemDetails structure may be omitted in that case.        
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '409':
          description: >
            Conflict

            The operation cannot be executed currently, due to a conflict with
            the state of the NS instance resource. Typically, this is due to the
            fact that the NS instance resource is in NOT-INSTANTIATED state, or
            that another lifecycle management operation is ongoing. The response
            body shall contain a ProblemDetails structure, in which the "detail"
            attribute should convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '500':
          description: >
            Internal Server Error If there is an application error not related
            to the client's input that cannot be easily mapped to any other HTTP
            response code ("catch all error"), the API producer shall respond
            withthis response code. The ProblemDetails structure shall be
            provided, and shall include in the "detail" attribute more
            information about the source of the problem.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '503':
          description: >
            Service Unavailable If the API producer encounters an internal
            overload situation of itself or of a system it relies on, it should
            respond with this response code, following the provisions in IETF
            RFC 7231 [13] for the use of the Retry-After HTTP header and for the
            alternative to refuse the connection. The "ProblemDetails" structure
            may be omitted.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
  '/ns_instances/{nsInstanceId}/update':
    parameters:
      - name: nsInstanceId
        description: |
          Identifier of the NS instance to be updated.
        in: path
        type: string
        required: true
    post:
      summary: Updates a NS instance.
      description: >
        Scale NS instance. The POST method requests to scale a NS instance
        resource.
      parameters:
        - name: Accept
          description: >
            Content-Types that are acceptable for the response. Reference: IETF
            RFC 7231
          in: header
          required: true
          type: string
        - name: Authorization
          description: |
            The authorization token for the request. Reference: IETF RFC 7235
          in: header
          required: false
          type: string
        - name: Content-Type
          description: |
            The MIME type of the body of the request. Reference: IETF RFC 7231
          in: header
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - UpdateNsRequest
            properties:
              UpdateNsRequest:
                description: >
                  This operation supports the update of a NS instance,  It shall
                  comply with the provisions defined in Table 6.5.2.12-1.
                type: object
                required:
                  - updateType
                properties:
                  updateType:
                    description: >
                      The type of update. It determines also which one of the
                      following parameters is present in the operation. Possible
                      values include: * ADD_VNF: Adding existing VNF instance(s)
                      * REMOVE_VNF: Removing VNF instance(s) * INSTANTIATE_VNF:
                      Instantiating new VNF(s) * CHANGE_VNF_DF: Changing VNF DF
                      * OPERATE_VNF: Changing VNF state, *
                      MODIFY_VNF_INFORMATION: Modifying VNF information and/or
                      the configurable properties of VNF instance(s) *
                      CHANGE_EXTERNAL_VNF_CONNECTIVITY: Changing the external
                      connectivity of VNF instance(s)ADD_SAP: Adding SAP(s) *
                      REMOVE_SAP: Removing SAP(s) * ADD_NESTED_NS: Adding
                      existing NS instance(s) as nested NS(s) *
                      REMOVE_NESTED_NS: Removing existing nested NS instance(s)
                      * ASSOC_NEW_NSD_VERSION: Associating a new NSD version to
                      the NS instance * MOVE_VNF: Moving VNF instance(s) from
                      one origin NS instance to another target NS instance *
                      ADD_VNFFG: Adding VNFFG(s) * REMOVE_VNFFG: Removing
                      VNFFG(s) * UPDATE_VNFFG: Updating VNFFG(s) * CHANGE_NS_DF:
                      Changing NS DF * ADD_PNF: Adding PNF * MODIFY_PNF:
                      Modifying PNF * REMOVE_PNF: Removing PNF
                    type: string
                    enum:
                      - ADD_VNF
                      - REMOVE_VNF
                      - INSTANTIATE_VNF
                      - CHANGE_VNF_DF
                      - OPERATE_VNF
                      - MODIFY_VNF_INFORMATION
                      - CHANGE_EXTERNAL_VNF_CONNECTIVITY
                      - REMOVE_SAP
                      - ADD_NESTED_NS
                      - REMOVE_NESTED_NS
                      - ASSOC_NEW_NSD_VERSION
                      - MOVE_VNF
                      - ADD_VNFFG
                      - REMOVE_VNFFG
                      - UPDATE_VNFFG
                      - CHANGE_NS_DF
                      - ADD_PNF
                      - MODIFY_PNF
                      - REMOVE_PNF
                  addVnfIstance:
                    description: >
                      Identifies an existing VNF instance to be added to the NS
                      instance. It shall be present only if updateType =
                      "ADD_VNF".         
                    type: array
                    items:
                      description: >
                        This type specifies an existing VNF instance to be used
                        in the NS instance and  if needed, the VNF Profile to
                        use for this VNF instance.  It shall comply with the
                        provisions defined in Table 6.5.3.19-1.
                      type: object
                      required:
                        - vnfInstanceId
                        - vnfProfileId
                      properties:
                        vnfInstanceId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        vnfProfileId:
                          description: >
                            An identifier that is unique within a NS descriptor.
                            Representation: string of variable length.
                          type: string
                  removeVnfInstanceId:
                    description: >
                      Identifies an existing VNF instance to be removed from the
                      NS instance. It contains the identifier(s) of the VNF
                      instances to be removed. It shall be present only if
                      updateType = "REMOVE_VNF." Note: If a VNF instance is
                      removed from a NS and this NS was the last one for which
                      this VNF instance was a part, the VNF instance is
                      terminated by the NFVO.
                    type: array
                    items:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                  instantiateVnfData:
                    description: >
                      Identifies the new VNF to be instantiated. It can be used
                      e.g. for the bottom-up NS creation. It shall be present
                      only if updateType = "INSTANTIATE_VNF".
                    type: array
                    items:
                      description: >
                        This type represents the information related to a SAP of
                        a NS. The InstantiateVnfData data type specifies the
                        parameters that are needed for VNF instantiation. This
                        information element is used for the bottom-up NS
                        creation when the OSS/BSS explicitly requests VNF
                        instantiation for a given NS. When the NFVO invokes the
                        Instantiate VNF update operation, a set of these
                        parameters are then passed by the NFVO to the VNFM. It
                        shall comply with the provisions defined in Table
                        6.5.3.24-1.
                      type: object
                      required:
                        - vnfdId
                        - vnfFlavourId
                      properties:
                        vnfdId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        vnfFlavourId:
                          description: >
                            Identifier of the VNF Virtual Link Descriptor (VLD)
                            in the VNFD.
                          type: string
                        vnfInstantiationLevelId:
                          description: >
                            Identifier of the VNF Virtual Link Descriptor (VLD)
                            in the VNFD.
                          type: string
                        vnfInstanceName:
                          description: >
                            Human-readable name of the VNF instance to be
                            created.
                          type: string
                        vnfInstanceDescription:
                          description: >
                            Human-readable description of the VNF instance to be
                            created.
                          type: string
                        extVirtualLinks:
                          description: >
                            Information about external VLs to connect the VNF
                            to.
                          type: array
                          items:
                            description: >
                              This type represents an external VL. It shall
                              comply with the provisions defined in Table
                              6.5.3.26-1.
                            type: object
                            required:
                              - resourceId
                              - extCps
                            properties:
                              extVirtualLinkId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              vimId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceProviderId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceId:
                                description: >
                                  An identifier maintained by the VIM or other
                                  resource provider. It is expected to be unique
                                  within the VIM instance.
                                type: string
                              extCps:
                                description: >
                                  External CPs of the VNF to be connected to
                                  this external VL.
                                type: array
                                items:
                                  description: >
                                    This type represents configuration
                                    information for external CPs created from a
                                    CPD.
                                  type: object
                                  required:
                                    - cpdId
                                  properties:
                                    cpdId:
                                      description: >
                                        Identifier of the VNF Virtual Link
                                        Descriptor (VLD) in the VNFD.
                                      type: string
                                    cpConfig:
                                      description: >
                                        List of instance data that need to be
                                        configured on the CP instances created
                                        from the respective CPD.
                                      type: array
                                      items:
                                        description: >
                                          This type represents an externally
                                          provided link port or network address
                                          information per instance of an external
                                          connection point. In case a link port is
                                          provided, the VNFM shall use that link
                                          port when connecting the external CP to
                                          the external VL. In a link port is not
                                          provided, the VNFM shall create a link
                                          port on the external VL, and use that
                                          link port to connect the external CP to
                                          the external VL.
                                        type: object
                                        properties:
                                          cpInstanceId:
                                            description: >
                                              An identifier that is unique for the
                                              respective type within a VNF instance,
                                              but may not be globally unique.
                                            type: string
                                          linkPortId:
                                            description: >
                                              An identifier with the intention of
                                              being globally unique.
                                            type: string
                                          cpProtocolData:
                                            description: >
                                              Parameters for configuring the network
                                              protocols on the link port that connects
                                              the CP to a VL.  The following
                                              conditions apply to the attributes
                                              "linkPortId" and "cpProtocolData":  *
                                              The "linkPortId" and "cpProtocolData"
                                              attributes shall both be
                                                absent for the deletion of an existing external CP instance
                                                addressed by cpInstanceId. 
                                              * At least one of these attributes shall
                                              be present for a
                                                to-be-created external CP instance or an existing external
                                                CP instance.
                                              * If the "linkPortId" attribute is
                                              absent, the VNFM shall create a
                                                link port.
                                              * If the "cpProtocolData" attribute is
                                              absent, the "linkPortId"
                                                attribute shall be provided referencing a pre-created link port,
                                                and the VNFM can use means outside the scope of the present
                                                document to obtain the pre-configured address information for the
                                                connection point from the resource representing the link port.
                                              * If both "cpProtocolData" and
                                              "linkportId" are provided, the API
                                                consumer shall ensure that the cpProtocolData can be used with the
                                                pre-created link port referenced by "linkPortId".
                                            type: array
                                            items:
                                              description: >
                                                This type represents network protocol
                                                data. 
                                              type: object
                                              required:
                                                - layerProtocol
                                              properties:
                                                layerProtocol:
                                                  description: >
                                                    Identifier of layer(s) and protocol(s).
                                                    Permitted values: IP_OVER_ETHERNET.
                                                  type: string
                                                  enum:
                                                    - IP_OVER_ETHERNET
                                                ipOverEthernet:
                                                  description: >
                                                    This type represents network address
                                                    data for IP over Ethernet.
                                                  type: object
                                                  properties:
                                                    macAddress:
                                                      description: >
                                                        A MAC address. Representation: string
                                                        that consists of groups of two
                                                        hexadecimal digits, separated by hyphens
                                                        or colons.
                                                      type: string
                                                      format: MAC
                                                    ipAddresses:
                                                      description: >
                                                        List of IP addresses to assign to the CP
                                                        instance. Each entry represents IP
                                                        address data for fixed or dynamic IP
                                                        address assignment per subnet. If this
                                                        attribute is not present, no IP address
                                                        shall be assigned.
                                                      type: array
                                                      items:
                                                        type: object
                                                        required:
                                                          - type
                                                        properties:
                                                          type:
                                                            description: >
                                                              The type of the IP addresses. Permitted
                                                              values: IPV4, IPV6.
                                                            type: string
                                                            enum:
                                                              - IPV4
                                                              - IPV6
                                                          fixedAddresses:
                                                            description: >
                                                              Fixed addresses to assign (from the
                                                              subnet defined by "subnetId" if
                                                              provided). Exactly one of
                                                              "fixedAddresses", "numDynamicAddresses"
                                                              or "ipAddressRange" shall be present.
                                                            type: array
                                                            items:
                                                              description: >
                                                                An IPV4 or IPV6 address. Representation:
                                                                In case of an IPV4 address, string that
                                                                consists of four decimal integers
                                                                separated by dots, each integer ranging
                                                                from 0 to 255. In case of an IPV6
                                                                address, string that  consists of groups
                                                                of zero to four hexadecimal digits,
                                                                separated by colons.
                                                              type: string
                                                              format: IP
                                                          numDynamicAddresses:
                                                            description: >
                                                              Number of dynamic addresses to assign
                                                              (from the subnet defined by "subnetId"
                                                              if provided). Exactly one of
                                                              "fixedAddresses", "numDynamicAddresses"
                                                              or "ipAddressRange" shall be present.
                                                            type: integer
                                                          addressRange:
                                                            description: >
                                                              An IP address range to be used, e.g. in
                                                              case of egress connections. In case this
                                                              attribute is present, IP addresses from
                                                              the range will be used.
                                                            type: object
                                                            required:
                                                              - minAddress
                                                              - maxAddress
                                                            properties:
                                                              minAddress:
                                                                description: >
                                                                  An IPV4 or IPV6 address. Representation:
                                                                  In case of an IPV4 address, string that
                                                                  consists of four decimal integers
                                                                  separated by dots, each integer ranging
                                                                  from 0 to 255. In case of an IPV6
                                                                  address, string that  consists of groups
                                                                  of zero to four hexadecimal digits,
                                                                  separated by colons.
                                                                type: string
                                                                format: IP
                                                              maxAddress:
                                                                description: >
                                                                  An IPV4 or IPV6 address. Representation:
                                                                  In case of an IPV4 address, string that
                                                                  consists of four decimal integers
                                                                  separated by dots, each integer ranging
                                                                  from 0 to 255. In case of an IPV6
                                                                  address, string that  consists of groups
                                                                  of zero to four hexadecimal digits,
                                                                  separated by colons.
                                                                type: string
                                                                format: IP
                                                          subnetId:
                                                            description: >
                                                              An identifier maintained by the VIM or
                                                              other resource provider. It is expected
                                                              to be unique within the VIM instance.
                                                            type: string
                              extLinkPorts:
                                description: >
                                  Externally provided link ports to be used to
                                  connect external connection points to this
                                  external VL.
                                type: array
                                items:
                                  description: >
                                    This type represents an externally provided
                                    link port to be used to connect an external
                                    connection point to an external VL.
                                  type: object
                                  required:
                                    - id
                                    - resourceHandle
                                  properties:
                                    id:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    resourceHandle:
                                      required:
                                        - vimConnectionId
                                        - resourceId
                                      type: object
                                      description: >
                                        This type represents the information
                                        that allows addressing a virtualised
                                        resource that is used by a VNF instance.
                                        Information about the resource is
                                        available from the VIM.
                                      properties:
                                        vimConnectionId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceProviderId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                                        vimLevelResourceType:
                                          description: >
                                            Type of the resource in the scope of the
                                            VIM or the resource provider.
                                          type: string
                        extManagedVirtualLinks:
                          description: >
                            Information about internal VLs that are managed by
                            other entities than the VNFM.
                          type: array
                          items:
                            description: >
                              This type represents an externally-managed
                              internal VL.  It shall comply with the provisions
                              defined in Table 6.5.3.27-1.     
                            type: object
                            required:
                              - virtualLinkDescId
                              - resourceId
                            properties:
                              extManagedVirtualLinkId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              virtualLinkDescId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              vimId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceProviderId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceId:
                                description: >
                                  An identifier maintained by the VIM or other
                                  resource provider. It is expected to be unique
                                  within the VIM instance.
                                type: string
                        localizationLanguage:
                          description: >
                            Localization language of the VNF to be instantiated.
                            The value shall comply with the format defined in
                            IETF RFC 5646 [16].
                          type: string
                        additionalParams:
                          description: >
                            This type represents a list of key-value pairs. The
                            order of the pairs in the list is not significant.
                            In JSON, a set of key- value pairs is represented as
                            an object. It shall comply with the provisions 
                            defined in clause 4 of IETF RFC 7159. 
                          type: object
                  changeVnfFlavourData:
                    description: >
                      Identifies the new DF of the VNF instance to be changed
                      to. It shall be present only if updateType =
                      "CHANGE_VNF_DF".
                    type: array
                    items:
                      description: >
                        The type represents the information that is requested to
                        be changed  deployment flavor for an existing VNF
                        instance.  It shall comply with the provisions defined
                        in Table 6.5.3.25-1.
                      type: object
                      required:
                        - vnfInstanceId
                        - newFlavourId
                      properties:
                        vnfInstanceId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        newFlavourId:
                          description: >
                            Identifier of the VNF Virtual Link Descriptor (VLD)
                            in the VNFD.
                          type: string
                        instantiationLevelId:
                          description: >
                            Identifier of the VNF Virtual Link Descriptor (VLD)
                            in the VNFD.
                          type: string
                        extVirtualLinks:
                          description: >
                            Information about external VLs to connect the VNF
                            to.
                          type: array
                          items:
                            description: >
                              This type represents an external VL. It shall
                              comply with the provisions defined in Table
                              6.5.3.26-1.
                            type: object
                            required:
                              - resourceId
                              - extCps
                            properties:
                              extVirtualLinkId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              vimId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceProviderId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceId:
                                description: >
                                  An identifier maintained by the VIM or other
                                  resource provider. It is expected to be unique
                                  within the VIM instance.
                                type: string
                              extCps:
                                description: >
                                  External CPs of the VNF to be connected to
                                  this external VL.
                                type: array
                                items:
                                  description: >
                                    This type represents configuration
                                    information for external CPs created from a
                                    CPD.
                                  type: object
                                  required:
                                    - cpdId
                                  properties:
                                    cpdId:
                                      description: >
                                        Identifier of the VNF Virtual Link
                                        Descriptor (VLD) in the VNFD.
                                      type: string
                                    cpConfig:
                                      description: >
                                        List of instance data that need to be
                                        configured on the CP instances created
                                        from the respective CPD.
                                      type: array
                                      items:
                                        description: >
                                          This type represents an externally
                                          provided link port or network address
                                          information per instance of an external
                                          connection point. In case a link port is
                                          provided, the VNFM shall use that link
                                          port when connecting the external CP to
                                          the external VL. In a link port is not
                                          provided, the VNFM shall create a link
                                          port on the external VL, and use that
                                          link port to connect the external CP to
                                          the external VL.
                                        type: object
                                        properties:
                                          cpInstanceId:
                                            description: >
                                              An identifier that is unique for the
                                              respective type within a VNF instance,
                                              but may not be globally unique.
                                            type: string
                                          linkPortId:
                                            description: >
                                              An identifier with the intention of
                                              being globally unique.
                                            type: string
                                          cpProtocolData:
                                            description: >
                                              Parameters for configuring the network
                                              protocols on the link port that connects
                                              the CP to a VL.  The following
                                              conditions apply to the attributes
                                              "linkPortId" and "cpProtocolData":  *
                                              The "linkPortId" and "cpProtocolData"
                                              attributes shall both be
                                                absent for the deletion of an existing external CP instance
                                                addressed by cpInstanceId. 
                                              * At least one of these attributes shall
                                              be present for a
                                                to-be-created external CP instance or an existing external
                                                CP instance.
                                              * If the "linkPortId" attribute is
                                              absent, the VNFM shall create a
                                                link port.
                                              * If the "cpProtocolData" attribute is
                                              absent, the "linkPortId"
                                                attribute shall be provided referencing a pre-created link port,
                                                and the VNFM can use means outside the scope of the present
                                                document to obtain the pre-configured address information for the
                                                connection point from the resource representing the link port.
                                              * If both "cpProtocolData" and
                                              "linkportId" are provided, the API
                                                consumer shall ensure that the cpProtocolData can be used with the
                                                pre-created link port referenced by "linkPortId".
                                            type: array
                                            items:
                                              description: >
                                                This type represents network protocol
                                                data. 
                                              type: object
                                              required:
                                                - layerProtocol
                                              properties:
                                                layerProtocol:
                                                  description: >
                                                    Identifier of layer(s) and protocol(s).
                                                    Permitted values: IP_OVER_ETHERNET.
                                                  type: string
                                                  enum:
                                                    - IP_OVER_ETHERNET
                                                ipOverEthernet:
                                                  description: >
                                                    This type represents network address
                                                    data for IP over Ethernet.
                                                  type: object
                                                  properties:
                                                    macAddress:
                                                      description: >
                                                        A MAC address. Representation: string
                                                        that consists of groups of two
                                                        hexadecimal digits, separated by hyphens
                                                        or colons.
                                                      type: string
                                                      format: MAC
                                                    ipAddresses:
                                                      description: >
                                                        List of IP addresses to assign to the CP
                                                        instance. Each entry represents IP
                                                        address data for fixed or dynamic IP
                                                        address assignment per subnet. If this
                                                        attribute is not present, no IP address
                                                        shall be assigned.
                                                      type: array
                                                      items:
                                                        type: object
                                                        required:
                                                          - type
                                                        properties:
                                                          type:
                                                            description: >
                                                              The type of the IP addresses. Permitted
                                                              values: IPV4, IPV6.
                                                            type: string
                                                            enum:
                                                              - IPV4
                                                              - IPV6
                                                          fixedAddresses:
                                                            description: >
                                                              Fixed addresses to assign (from the
                                                              subnet defined by "subnetId" if
                                                              provided). Exactly one of
                                                              "fixedAddresses", "numDynamicAddresses"
                                                              or "ipAddressRange" shall be present.
                                                            type: array
                                                            items:
                                                              description: >
                                                                An IPV4 or IPV6 address. Representation:
                                                                In case of an IPV4 address, string that
                                                                consists of four decimal integers
                                                                separated by dots, each integer ranging
                                                                from 0 to 255. In case of an IPV6
                                                                address, string that  consists of groups
                                                                of zero to four hexadecimal digits,
                                                                separated by colons.
                                                              type: string
                                                              format: IP
                                                          numDynamicAddresses:
                                                            description: >
                                                              Number of dynamic addresses to assign
                                                              (from the subnet defined by "subnetId"
                                                              if provided). Exactly one of
                                                              "fixedAddresses", "numDynamicAddresses"
                                                              or "ipAddressRange" shall be present.
                                                            type: integer
                                                          addressRange:
                                                            description: >
                                                              An IP address range to be used, e.g. in
                                                              case of egress connections. In case this
                                                              attribute is present, IP addresses from
                                                              the range will be used.
                                                            type: object
                                                            required:
                                                              - minAddress
                                                              - maxAddress
                                                            properties:
                                                              minAddress:
                                                                description: >
                                                                  An IPV4 or IPV6 address. Representation:
                                                                  In case of an IPV4 address, string that
                                                                  consists of four decimal integers
                                                                  separated by dots, each integer ranging
                                                                  from 0 to 255. In case of an IPV6
                                                                  address, string that  consists of groups
                                                                  of zero to four hexadecimal digits,
                                                                  separated by colons.
                                                                type: string
                                                                format: IP
                                                              maxAddress:
                                                                description: >
                                                                  An IPV4 or IPV6 address. Representation:
                                                                  In case of an IPV4 address, string that
                                                                  consists of four decimal integers
                                                                  separated by dots, each integer ranging
                                                                  from 0 to 255. In case of an IPV6
                                                                  address, string that  consists of groups
                                                                  of zero to four hexadecimal digits,
                                                                  separated by colons.
                                                                type: string
                                                                format: IP
                                                          subnetId:
                                                            description: >
                                                              An identifier maintained by the VIM or
                                                              other resource provider. It is expected
                                                              to be unique within the VIM instance.
                                                            type: string
                              extLinkPorts:
                                description: >
                                  Externally provided link ports to be used to
                                  connect external connection points to this
                                  external VL.
                                type: array
                                items:
                                  description: >
                                    This type represents an externally provided
                                    link port to be used to connect an external
                                    connection point to an external VL.
                                  type: object
                                  required:
                                    - id
                                    - resourceHandle
                                  properties:
                                    id:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    resourceHandle:
                                      required:
                                        - vimConnectionId
                                        - resourceId
                                      type: object
                                      description: >
                                        This type represents the information
                                        that allows addressing a virtualised
                                        resource that is used by a VNF instance.
                                        Information about the resource is
                                        available from the VIM.
                                      properties:
                                        vimConnectionId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceProviderId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                                        vimLevelResourceType:
                                          description: >
                                            Type of the resource in the scope of the
                                            VIM or the resource provider.
                                          type: string
                        extManagedVirtualLinks:
                          description: >
                            information about internal VLs that are managed by
                            NFVO.
                          type: array
                          items:
                            description: >
                              This type represents an externally-managed
                              internal VL.  It shall comply with the provisions
                              defined in Table 6.5.3.27-1.     
                            type: object
                            required:
                              - virtualLinkDescId
                              - resourceId
                            properties:
                              extManagedVirtualLinkId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              virtualLinkDescId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              vimId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceProviderId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceId:
                                description: >
                                  An identifier maintained by the VIM or other
                                  resource provider. It is expected to be unique
                                  within the VIM instance.
                                type: string
                        additionalParams:
                          description: >
                            This type represents a list of key-value pairs. The
                            order of the pairs in the list is not significant.
                            In JSON, a set of key- value pairs is represented as
                            an object. It shall comply with the provisions 
                            defined in clause 4 of IETF RFC 7159. 
                          type: object
                  operateVnfData:
                    description: >
                      Identifies the state of the VNF instance to be changed. 
                      It shall be present only if updateType = "OPERATE_VNF".
                    type: array
                    items:
                      description: >
                        This type represents a VNF instance for which the
                        operational state  needs to be changed and the requested
                        new state. It shall comply with the provisions defined
                        in Table 6.5.3.31-1.
                      type: object
                      required:
                        - vnfInstanceId
                        - changeStateTo
                      properties:
                        vnfInstanceId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        changeStateTo:
                          description: >
                            STARTED - The VNF instance is up and running.
                            STOPPED - The VNF instance has been shut down.
                          type: string
                          enum:
                            - STARTED
                            - STOPPED
                        stopType:
                          description: >
                            * FORCEFUL: The VNFM will stop the VNF immediately
                            after accepting the
                              request.
                            * GRACEFUL: The VNFM will first arrange to take the
                            VNF out of service
                              after accepting the request. Once that operation is successful or once
                              the timer value specified in the "gracefulStopTimeout" attribute
                              expires, the VNFM will stop the VNF.
                          type: string
                          enum:
                            - FORCEFUL
                            - GRACEFUL
                        gracefulStopTimeout:
                          description: >
                            The time interval (in seconds) to wait for the VNF
                            to be taken out of service during graceful stop,
                            before stopping the VNF.
                          type: integer
                  modifyVnfInfoData:
                    description: >
                      Identifies the VNF information parameters and/or the
                      configurable properties of VNF instance to be modified. It
                      shall be present only if updateType =
                      "MODIFY_VNF_INFORMATION".
                    type: array
                    items:
                      description: >
                        This type represents the information that is requested
                        to be modified for a VNF instance. The information to be
                        modified shall comply with the associated NSD. EXAMPLE.
                        The vnfPkgId attribute value for a particular VNF
                        instance can only be updated with a value that matches
                        the identifier value of a VNF package whose vnfdId is
                        present in the associated profile of the NSD.
                      type: object
                      required:
                        - vnfInstanceId
                      properties:
                        vnfInstanceId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        vnfInstanceName:
                          description: >
                            New value of the "vnfInstanceName" attribute in
                            "VnfInstance", or "null" to remove the attribute.
                          type: string
                        vnfInstanceDescription:
                          description: >
                            New value of the "vnfInstanceDescription" attribute
                            in "VnfInstance", or "null" to remove the attribute.
                          type: string
                        vnfPkgId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        vnfConfigurableProperties:
                          description: >
                            This type represents a list of key-value pairs. The
                            order of the pairs in the list is not significant.
                            In JSON, a set of key- value pairs is represented as
                            an object. It shall comply with the provisions 
                            defined in clause 4 of IETF RFC 7159. 
                          type: object
                        Metadata:
                          description: >
                            This type represents a list of key-value pairs. The
                            order of the pairs in the list is not significant.
                            In JSON, a set of key- value pairs is represented as
                            an object. It shall comply with the provisions 
                            defined in clause 4 of IETF RFC 7159. 
                          type: object
                        Extensions:
                          description: >
                            This type represents a list of key-value pairs. The
                            order of the pairs in the list is not significant.
                            In JSON, a set of key- value pairs is represented as
                            an object. It shall comply with the provisions 
                            defined in clause 4 of IETF RFC 7159. 
                          type: object
                  changeExtVnfConnectivityData:
                    description: >
                      Specifies the new external connectivity data of the VNF
                      instance to be changed. It shall be present only if
                      updateType = "CHANGE_EXTERNAL_VNF_CONNECTIVITY".
                    type: array
                    items:
                      description: >
                        This type describes the information invoked by the NFVO
                        to change the external VNF connectivity information
                        maintained by the VNFM. The types of changes that this
                        operation supports are: 1) Disconnect the external CPs
                        that are connected to a particular external VL, and
                        connect them to a different external VL. 2) Change the
                        connectivity parameters of the existing external CPs,
                        including changing addresses. NOTE: Depending on the
                        capabilities of the underlying VIM resources, certain
                        changes (e.g. modifying the IP address assignment) might
                        not be supported without deleting the resource and
                        creating another one with the modified configuration.
                        This type shall comply with the provisions defined in
                        Table 6.5.3.33-1.
                      type: object
                      required:
                        - vnfInstanceId
                        - extVirtualLink
                      properties:
                        vnfInstanceId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        extVirtualLink:
                          description: >
                            Information about external VLs to change (e.g.
                            connect the VNF to).
                          type: array
                          items:
                            description: >
                              This type represents an external VL. It shall
                              comply with the provisions defined in Table
                              6.5.3.26-1.
                            type: object
                            required:
                              - resourceId
                              - extCps
                            properties:
                              extVirtualLinkId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              vimId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceProviderId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceId:
                                description: >
                                  An identifier maintained by the VIM or other
                                  resource provider. It is expected to be unique
                                  within the VIM instance.
                                type: string
                              extCps:
                                description: >
                                  External CPs of the VNF to be connected to
                                  this external VL.
                                type: array
                                items:
                                  description: >
                                    This type represents configuration
                                    information for external CPs created from a
                                    CPD.
                                  type: object
                                  required:
                                    - cpdId
                                  properties:
                                    cpdId:
                                      description: >
                                        Identifier of the VNF Virtual Link
                                        Descriptor (VLD) in the VNFD.
                                      type: string
                                    cpConfig:
                                      description: >
                                        List of instance data that need to be
                                        configured on the CP instances created
                                        from the respective CPD.
                                      type: array
                                      items:
                                        description: >
                                          This type represents an externally
                                          provided link port or network address
                                          information per instance of an external
                                          connection point. In case a link port is
                                          provided, the VNFM shall use that link
                                          port when connecting the external CP to
                                          the external VL. In a link port is not
                                          provided, the VNFM shall create a link
                                          port on the external VL, and use that
                                          link port to connect the external CP to
                                          the external VL.
                                        type: object
                                        properties:
                                          cpInstanceId:
                                            description: >
                                              An identifier that is unique for the
                                              respective type within a VNF instance,
                                              but may not be globally unique.
                                            type: string
                                          linkPortId:
                                            description: >
                                              An identifier with the intention of
                                              being globally unique.
                                            type: string
                                          cpProtocolData:
                                            description: >
                                              Parameters for configuring the network
                                              protocols on the link port that connects
                                              the CP to a VL.  The following
                                              conditions apply to the attributes
                                              "linkPortId" and "cpProtocolData":  *
                                              The "linkPortId" and "cpProtocolData"
                                              attributes shall both be
                                                absent for the deletion of an existing external CP instance
                                                addressed by cpInstanceId. 
                                              * At least one of these attributes shall
                                              be present for a
                                                to-be-created external CP instance or an existing external
                                                CP instance.
                                              * If the "linkPortId" attribute is
                                              absent, the VNFM shall create a
                                                link port.
                                              * If the "cpProtocolData" attribute is
                                              absent, the "linkPortId"
                                                attribute shall be provided referencing a pre-created link port,
                                                and the VNFM can use means outside the scope of the present
                                                document to obtain the pre-configured address information for the
                                                connection point from the resource representing the link port.
                                              * If both "cpProtocolData" and
                                              "linkportId" are provided, the API
                                                consumer shall ensure that the cpProtocolData can be used with the
                                                pre-created link port referenced by "linkPortId".
                                            type: array
                                            items:
                                              description: >
                                                This type represents network protocol
                                                data. 
                                              type: object
                                              required:
                                                - layerProtocol
                                              properties:
                                                layerProtocol:
                                                  description: >
                                                    Identifier of layer(s) and protocol(s).
                                                    Permitted values: IP_OVER_ETHERNET.
                                                  type: string
                                                  enum:
                                                    - IP_OVER_ETHERNET
                                                ipOverEthernet:
                                                  description: >
                                                    This type represents network address
                                                    data for IP over Ethernet.
                                                  type: object
                                                  properties:
                                                    macAddress:
                                                      description: >
                                                        A MAC address. Representation: string
                                                        that consists of groups of two
                                                        hexadecimal digits, separated by hyphens
                                                        or colons.
                                                      type: string
                                                      format: MAC
                                                    ipAddresses:
                                                      description: >
                                                        List of IP addresses to assign to the CP
                                                        instance. Each entry represents IP
                                                        address data for fixed or dynamic IP
                                                        address assignment per subnet. If this
                                                        attribute is not present, no IP address
                                                        shall be assigned.
                                                      type: array
                                                      items:
                                                        type: object
                                                        required:
                                                          - type
                                                        properties:
                                                          type:
                                                            description: >
                                                              The type of the IP addresses. Permitted
                                                              values: IPV4, IPV6.
                                                            type: string
                                                            enum:
                                                              - IPV4
                                                              - IPV6
                                                          fixedAddresses:
                                                            description: >
                                                              Fixed addresses to assign (from the
                                                              subnet defined by "subnetId" if
                                                              provided). Exactly one of
                                                              "fixedAddresses", "numDynamicAddresses"
                                                              or "ipAddressRange" shall be present.
                                                            type: array
                                                            items:
                                                              description: >
                                                                An IPV4 or IPV6 address. Representation:
                                                                In case of an IPV4 address, string that
                                                                consists of four decimal integers
                                                                separated by dots, each integer ranging
                                                                from 0 to 255. In case of an IPV6
                                                                address, string that  consists of groups
                                                                of zero to four hexadecimal digits,
                                                                separated by colons.
                                                              type: string
                                                              format: IP
                                                          numDynamicAddresses:
                                                            description: >
                                                              Number of dynamic addresses to assign
                                                              (from the subnet defined by "subnetId"
                                                              if provided). Exactly one of
                                                              "fixedAddresses", "numDynamicAddresses"
                                                              or "ipAddressRange" shall be present.
                                                            type: integer
                                                          addressRange:
                                                            description: >
                                                              An IP address range to be used, e.g. in
                                                              case of egress connections. In case this
                                                              attribute is present, IP addresses from
                                                              the range will be used.
                                                            type: object
                                                            required:
                                                              - minAddress
                                                              - maxAddress
                                                            properties:
                                                              minAddress:
                                                                description: >
                                                                  An IPV4 or IPV6 address. Representation:
                                                                  In case of an IPV4 address, string that
                                                                  consists of four decimal integers
                                                                  separated by dots, each integer ranging
                                                                  from 0 to 255. In case of an IPV6
                                                                  address, string that  consists of groups
                                                                  of zero to four hexadecimal digits,
                                                                  separated by colons.
                                                                type: string
                                                                format: IP
                                                              maxAddress:
                                                                description: >
                                                                  An IPV4 or IPV6 address. Representation:
                                                                  In case of an IPV4 address, string that
                                                                  consists of four decimal integers
                                                                  separated by dots, each integer ranging
                                                                  from 0 to 255. In case of an IPV6
                                                                  address, string that  consists of groups
                                                                  of zero to four hexadecimal digits,
                                                                  separated by colons.
                                                                type: string
                                                                format: IP
                                                          subnetId:
                                                            description: >
                                                              An identifier maintained by the VIM or
                                                              other resource provider. It is expected
                                                              to be unique within the VIM instance.
                                                            type: string
                              extLinkPorts:
                                description: >
                                  Externally provided link ports to be used to
                                  connect external connection points to this
                                  external VL.
                                type: array
                                items:
                                  description: >
                                    This type represents an externally provided
                                    link port to be used to connect an external
                                    connection point to an external VL.
                                  type: object
                                  required:
                                    - id
                                    - resourceHandle
                                  properties:
                                    id:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    resourceHandle:
                                      required:
                                        - vimConnectionId
                                        - resourceId
                                      type: object
                                      description: >
                                        This type represents the information
                                        that allows addressing a virtualised
                                        resource that is used by a VNF instance.
                                        Information about the resource is
                                        available from the VIM.
                                      properties:
                                        vimConnectionId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceProviderId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                                        vimLevelResourceType:
                                          description: >
                                            Type of the resource in the scope of the
                                            VIM or the resource provider.
                                          type: string
                        additionalParams:
                          description: >
                            This type represents a list of key-value pairs. The
                            order of the pairs in the list is not significant.
                            In JSON, a set of key- value pairs is represented as
                            an object. It shall comply with the provisions 
                            defined in clause 4 of IETF RFC 7159. 
                          type: object
                  addSap:
                    description: >
                      Identifies a new SAP to be added to the NS instance. It
                      shall be present only if updateType = "ADD_SAP."
                    type: array
                    items:
                      description: >
                        This type represents the information related to a SAP of
                        a NS.  It shall comply with the provisions defined in
                        Table 6.5.3.10-1.
                      type: object
                      required:
                        - sapdId
                        - sapName
                        - description
                      properties:
                        sapdId:
                          description: >
                            An identifier that is unique within a NS descriptor.
                            Representation: string of variable length.
                          type: string
                        sapName:
                          description: |
                            Human readable name for the SAP.
                          type: string
                        description:
                          description: |
                            Human readable description for the SAP.
                          type: string
                        sapProtocolData:
                          description: >
                            Parameters for configuring the network protocols on
                            the SAP.
                          type: array
                          items:
                            description: |
                              This type represents network protocol data. 
                            type: object
                            required:
                              - layerProtocol
                            properties:
                              layerProtocol:
                                description: >
                                  Identifier of layer(s) and protocol(s).
                                  Permitted values: IP_OVER_ETHERNET.
                                type: string
                                enum:
                                  - IP_OVER_ETHERNET
                              ipOverEthernet:
                                description: >
                                  This type represents network address data for
                                  IP over Ethernet.
                                type: object
                                properties:
                                  macAddress:
                                    description: >
                                      A MAC address. Representation: string that
                                      consists of groups of two hexadecimal
                                      digits, separated by hyphens or colons.
                                    type: string
                                    format: MAC
                                  ipAddresses:
                                    description: >
                                      List of IP addresses to assign to the CP
                                      instance. Each entry represents IP address
                                      data for fixed or dynamic IP address
                                      assignment per subnet. If this attribute
                                      is not present, no IP address shall be
                                      assigned.
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - type
                                      properties:
                                        type:
                                          description: >
                                            The type of the IP addresses. Permitted
                                            values: IPV4, IPV6.
                                          type: string
                                          enum:
                                            - IPV4
                                            - IPV6
                                        fixedAddresses:
                                          description: >
                                            Fixed addresses to assign (from the
                                            subnet defined by "subnetId" if
                                            provided). Exactly one of
                                            "fixedAddresses", "numDynamicAddresses"
                                            or "ipAddressRange" shall be present.
                                          type: array
                                          items:
                                            description: >
                                              An IPV4 or IPV6 address. Representation:
                                              In case of an IPV4 address, string that
                                              consists of four decimal integers
                                              separated by dots, each integer ranging
                                              from 0 to 255. In case of an IPV6
                                              address, string that  consists of groups
                                              of zero to four hexadecimal digits,
                                              separated by colons.
                                            type: string
                                            format: IP
                                        numDynamicAddresses:
                                          description: >
                                            Number of dynamic addresses to assign
                                            (from the subnet defined by "subnetId"
                                            if provided). Exactly one of
                                            "fixedAddresses", "numDynamicAddresses"
                                            or "ipAddressRange" shall be present.
                                          type: integer
                                        addressRange:
                                          description: >
                                            An IP address range to be used, e.g. in
                                            case of egress connections. In case this
                                            attribute is present, IP addresses from
                                            the range will be used.
                                          type: object
                                          required:
                                            - minAddress
                                            - maxAddress
                                          properties:
                                            minAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                            maxAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                        subnetId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                  removeSapId:
                    description: >
                      The identifier an existing SAP to be removed from the NS
                      instance. It shall be present only if updateType =
                      "REMOVE_SAP."
                    type: array
                    items:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                  addNestedNsId:
                    description: >
                      The identifier of an existing nested NS instance to be
                      added to (nested within) the NS instance. It shall be
                      present only if updateType = "ADD_NESTED_NS".
                    type: array
                    items:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                  removeNestedNsId:
                    description: >
                      The identifier of an existing nested NS instance to be
                      removed from the NS instance. It shall be present only if
                      updateType = "REMOVE_NESTED_NS".
                    type: array
                    items:
                      description: >
                        An identifier that is unique with respect to a NS. 
                        Representation: string of variable length.
                      type: string
                  assocNewNsdVersionData:
                    description: >
                      This type specifies a new NSD version that is associated
                      to the NS instance. After issuing the Update NS operation
                      with updateType = "AssocNewNsdVersion", the NFVO shall use
                      the referred NSD as a basis for the given NS instance.
                      Different versions of the same NSD have same
                      nsdInvariantId, but different nsdId attributes, therefore
                      if the nsdInvariantId of the NSD version that is to be
                      associated to this NS instance is different from the one
                      used before, the NFVO shall reject the request. Only new
                      versions of the same NSD can be associated to an existing
                      NS instance. This data type shall comply with the
                      provisions defined in Table 6.5.3.34-1.
                    type: object
                    required:
                      - newNsdId
                    properties:
                      newNsdId:
                        description: >
                          An identifier with the intention of being globally
                          unique.
                        type: string
                      sync:
                        description: >
                          Specify whether the NS instance shall be automatically
                          synchronized to the new NSD by the NFVO (in case of
                          true value) or the NFVO shall not do any action (in
                          case of a false value) and wait for further guidance
                          from OSS/BSS (i.e. waiting for OSS/BSS to issue NS
                          lifecycle management operation to explicitly
                          add/remove VNFs and modify information of VNF
                          instances according to the new NSD). The
                          synchronization to the new NSD means e.g.
                          instantiating/adding those VNFs whose VNFD is
                          referenced by the new NSD version but not referenced
                          by the old one, terminating/removing those VNFs whose
                          VNFD is referenced by the old NSD version but not
                          referenced by the new NSD version, modifying
                          information of VNF instances to the new applicable
                          VNFD provided in the new NSD version. A cardinality of
                          0 indicates that synchronization shall not be done.
                        type: boolean
                  moveVnfInstanceData:
                    description: >
                      Specify existing VNF instance to be moved from one NS
                      instance to another NS instance. It shall be present only
                      if updateType = MOVE_VNF".
                    type: array
                    items:
                      description: >
                        This type specifies existing VNF instances to be moved
                        from one NS instance (source) to another NS instance
                        (destination). The NS instance defined in the Update NS
                        operation indicates the source NS instance and the
                        destination NS instance is specified in this data type
                        (referred to targetNsInstanceId).  It shall comply with
                        the provisions defined in Table 6.5.3.35-1.
                      type: object
                      required:
                        - targetNsInstanceId
                      properties:
                        targetNsInstanceId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        vnfInstanceId:
                          description: |
                            Specify the VNF instance that is moved.
                          type: array
                          items:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                  addVnffg:
                    description: >
                      Specify the new VNFFG to be created to the NS Instance. It
                      shall be present only if updateType = "ADD_VNFFG".
                    type: array
                    items:
                      description: >
                        This type specifies the parameters used for the creation
                        of a new VNFFG instance.  It shall comply with the
                        provisions defined in Table 6.5.3.36-1.
                      type: object
                      required:
                        - vnffgdId
                        - vnffgName
                        - description
                      properties:
                        targetNsInstanceId:
                          description: >
                            An identifier that is unique within a NS descriptor.
                            Representation: string of variable length.
                          type: string
                        vnffgName:
                          description: |
                            Human readable name for the VNFFG.
                          type: string
                        description:
                          description: |
                            Human readable description for the VNFFG.
                          type: string
                  removeVnffgId:
                    description: >
                      Identifier of an existing VNFFG to be removed from the NS
                      Instance. It shall be present only if updateType =
                      "REMOVE_VNFFG".
                    type: array
                    items:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                  updateVnffg:
                    description: >
                      Specify the new VNFFG Information data to be updated for a
                      VNFFG of the NS Instance. It shall be present only if
                      updateType = "UPDATE_VNFFG".
                    type: array
                    items:
                      description: >
                        This type specifies the parameters used for the update
                        of an existing VNFFG instance.  It shall comply with the
                        provisions defined in Table 6.5.3.37-1.
                      type: object
                      required:
                        - vnffgInfoId
                      properties:
                        vnffgInfoId:
                          description: >
                            An identifier that is unique with respect to a NS. 
                            Representation: string of variable length.
                          type: string
                        nfp:
                          description: >
                            Indicate the desired new NFP(s) for a given VNFFG
                            after the operations of addition/removal of NS
                            components (e.g. VNFs, VLs, etc.) have been
                            completed, or indicate the updated or newly created
                            NFP classification and selection rule which applied
                            to an existing NFP.
                          type: array
                          items:
                            description: >
                              This type contains information used to create or
                              modify NFP instance parameters  for the update of
                              an existing VNFFG instance.  It shall comply with
                              the provisions defined in Table 6.5.3.38-1.
                            type: object
                            properties:
                              nfpInfoId:
                                description: >
                                  An identifier that is unique with respect to a
                                  NS.  Representation: string of variable
                                  length.
                                type: string
                              nfpName:
                                description: >
                                  Human readable name for the NFP. It shall be
                                  present for the new NFP, and it may be present
                                  otherwise.
                                type: string
                              description:
                                description: >
                                  Human readable description for the NFP. It
                                  shall be present for the new NFP, and it may
                                  be present otherwise.
                                type: string
                              nsCpHandle:
                                description: >
                                  Identifier(s) of the CPs and SAPs which the
                                  NFP passes by.  Cardinality can be 0 if only
                                  updated or newly created NFP classification
                                  and selection rule which applied to an
                                  existing NFP is provided.
                                type: array
                                items:
                                  description: >
                                    This type represents an identifier of the CP
                                    or SAP instance.  It shall comply with the
                                    provisions defined in Table 6.5.3.56-1.
                                  type: object
                                  properties:
                                    vnfInstanceId:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    vnfExtCpInstanceId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                                    pnfInfoId:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    pnfExtCpInstanceId:
                                      description: >
                                        Identifier of the CP in the scope of the
                                        PNF.
                                      type: string
                                    nsInstanceId:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    nsSapInstanceId:
                                      description: >
                                        An identifier that is unique with
                                        respect to a NS.  Representation: string
                                        of variable length.
                                      type: string
                              nfpRule:
                                description: >
                                  The NfpRule data type is an expression of the
                                  conditions that shall be met  in order for the
                                  NFP to be applicable to the packet. The
                                  condition acts as a flow classifier and  it is
                                  met only if all the values expressed in the
                                  condition are matched by those in the packet.
                                  It shall comply with the provisions defined in
                                  Table 6.5.3.40-1.
                                type: object
                                properties:
                                  etherDestinationAddress:
                                    description: >
                                      A MAC address. Representation: string that
                                      consists of groups of two hexadecimal
                                      digits, separated by hyphens or colons.
                                    type: string
                                    format: MAC
                                  etherSourceAddress:
                                    description: >
                                      A MAC address. Representation: string that
                                      consists of groups of two hexadecimal
                                      digits, separated by hyphens or colons.
                                    type: string
                                    format: MAC
                                  etherType:
                                    description: |
                                      Human readable description for the VNFFG.
                                    type: string
                                    enum:
                                      - IPV4
                                      - IPV6
                                  vlanTag:
                                    description: >
                                      Indicates a VLAN identifier in an IEEE
                                      802.1Q-2014  tag [6] Multiple tags can be
                                      included for QinQ stacking. See note.
                                    type: array
                                    items:
                                      description: >
                                        This type represents stack of string
                                        values
                                      type: string
                                  protocol:
                                    description: >
                                      Indicates the L4 protocol, For IPv4 [7]
                                      this corresponds to the field called
                                      "Protocol" to identify the next level
                                      protocol. For IPv6 [28] this corresponds
                                      to the field is called the "Next Header"
                                      field. Permitted values: Any keyword
                                      defined in the IANA protocol registry [1],
                                      e.g.: TCP UDP ICMP
                                    type: string
                                    enum:
                                      - TCP
                                      - UDP
                                      - ICMP
                                  dscp:
                                    description: >
                                      For IPv4 [7] a string of "0" and "1"
                                      digits that corresponds to the 6-bit
                                      Differentiated Services Code Point (DSCP)
                                      field of the IP header. For IPv6 [28] a
                                      string of "0" and "1" digits that
                                      corresponds to the 6 differentiated
                                      services bits of the traffic class header
                                      field
                                    type: string
                                  sourcePortRange:
                                    description: >
                                      The PortRange data type provides the lower
                                      and upper bounds of a range of Internet
                                      ports.  It shall comply with the
                                      provisions defined in Table 6.5.3.42-1.
                                    type: object
                                    required:
                                      - lowerPort
                                      - upperPort
                                    properties:
                                      lowerPort:
                                        description: >
                                          Identifies the lower bound of the port
                                          range. upperPort Integer
                                        type: integer
                                        minimum: 0
                                      upperPort:
                                        description: >
                                          Identifies the upper bound of the port
                                          range.
                                        type: integer
                                        minimum: 0
                                  destinationPortRange:
                                    description: >
                                      The PortRange data type provides the lower
                                      and upper bounds of a range of Internet
                                      ports.  It shall comply with the
                                      provisions defined in Table 6.5.3.42-1.
                                    type: object
                                    required:
                                      - lowerPort
                                      - upperPort
                                    properties:
                                      lowerPort:
                                        description: >
                                          Identifies the lower bound of the port
                                          range. upperPort Integer
                                        type: integer
                                        minimum: 0
                                      upperPort:
                                        description: >
                                          Identifies the upper bound of the port
                                          range.
                                        type: integer
                                        minimum: 0
                                  sourceIpAddressPrefix:
                                    description: >
                                      An IPV4 or IPV6 address range in CIDR
                                      format. For IPV4 address range, refer to
                                      IETF RFC 4632 [12]. For IPV6 address
                                      range, refer to IETF RFC 4291 [11].
                                    type: string
                                    format: CIDR
                                  destinationIpAddressPrefix:
                                    description: >
                                      An IPV4 or IPV6 address range in CIDR
                                      format. For IPV4 address range, refer to
                                      IETF RFC 4632 [12]. For IPV6 address
                                      range, refer to IETF RFC 4291 [11].
                                    type: string
                                    format: CIDR
                                  extendedCriteria:
                                    description: >
                                      Indicates values of specific bits in a
                                      frame.
                                    type: array
                                    items:
                                      description: >
                                        The Mask data type identifies the value
                                        to be matched for a sequence of  bits at
                                        a particular location in a frame. It
                                        shall comply with the provisions defined
                                        in Table 6.5.3.41-1.
                                      type: object
                                      required:
                                        - startingPoint
                                        - length
                                        - value
                                      properties:
                                        startingPoint:
                                          description: >
                                            Indicates the offset between the last
                                            bit of the source mac address and the
                                            first bit of the sequence of bits to be
                                            matched.
                                          type: integer
                                        length:
                                          description: >
                                            Indicates the number of bits to be
                                            matched.
                                          type: integer
                                        value:
                                          description: >
                                            Provide the sequence of bit values to be
                                            matched. 
                                          type: string
                        nfpInfoId:
                          description: >
                            Identifier(s) of the NFP to be deleted from a given
                            VNFFG.
                          type: array
                          items:
                            description: >
                              An identifier that is unique with respect to a
                              NS.  Representation: string of variable length.
                            type: string
                  changeNsFlavourData:
                    description: >
                      This type specifies an existing NS instance for which the
                      DF needs to be changed.  This specifies the new DF, the
                      instantiationLevel of the new DF that may be used and  the
                      additional parameters as input for the flavour change.  It
                      shall comply with the provisions defined in Table
                      6.5.3.39-1.
                    type: object
                    required:
                      - newNsFlavourId
                    properties:
                      newNsFlavourId:
                        description: >
                          An identifier that is unique within a NS descriptor.
                          Representation: string of variable length.
                        type: string
                      instantiationLevelId:
                        description: >
                          An identifier that is unique within a NS descriptor.
                          Representation: string of variable length.
                        type: string
                  addPnfData:
                    description: >
                      specifies the PNF to be added into the NS instance.  It
                      shall be present only if updateType = "ADD_PNF".
                    type: array
                    items:
                      description: >
                        This type specifies an PNF to be added to the NS
                        instance and the PNF Profile  to use for this PNF. It
                        shall comply with the provisions defined in Table
                        6.5.3.14-1.
                      type: object
                      required:
                        - pnfId
                        - pnfName
                        - pnfdId
                        - pnfProfileId
                      properties:
                        pnfId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        pnfName:
                          description: |
                            Name of the PNF
                          type: string
                        pnfdId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        pnfProfileId:
                          description: >
                            An identifier that is unique within a NS descriptor.
                            Representation: string of variable length.
                          type: string
                        cpData:
                          description: |
                            Address assigned for the PNF external CP(s).
                          type: array
                          items:
                            description: >
                              This type represents the configuration data on the
                              external CP of the PNF.  It shall comply with the
                              provisions defined in Table 6.5.3.16-1.
                            type: object
                            required:
                              - cpProtocolData
                            properties:
                              cpInstanceI16:
                                description: |
                                  Identifier of the CP in the scope of the PNF.
                                type: string
                              cpdId:
                                description: >
                                  An identifier that is unique within a NS
                                  descriptor. Representation: string of variable
                                  length.
                                type: string
                              cpProtocolData:
                                description: |
                                  Address assigned for this CP.
                                type: array
                                items:
                                  description: |
                                    This type represents network protocol data. 
                                  type: object
                                  required:
                                    - layerProtocol
                                  properties:
                                    layerProtocol:
                                      description: >
                                        Identifier of layer(s) and protocol(s).
                                        Permitted values: IP_OVER_ETHERNET.
                                      type: string
                                      enum:
                                        - IP_OVER_ETHERNET
                                    ipOverEthernet:
                                      description: >
                                        This type represents network address
                                        data for IP over Ethernet.
                                      type: object
                                      properties:
                                        macAddress:
                                          description: >
                                            A MAC address. Representation: string
                                            that consists of groups of two
                                            hexadecimal digits, separated by hyphens
                                            or colons.
                                          type: string
                                          format: MAC
                                        ipAddresses:
                                          description: >
                                            List of IP addresses to assign to the CP
                                            instance. Each entry represents IP
                                            address data for fixed or dynamic IP
                                            address assignment per subnet. If this
                                            attribute is not present, no IP address
                                            shall be assigned.
                                          type: array
                                          items:
                                            type: object
                                            required:
                                              - type
                                            properties:
                                              type:
                                                description: >
                                                  The type of the IP addresses. Permitted
                                                  values: IPV4, IPV6.
                                                type: string
                                                enum:
                                                  - IPV4
                                                  - IPV6
                                              fixedAddresses:
                                                description: >
                                                  Fixed addresses to assign (from the
                                                  subnet defined by "subnetId" if
                                                  provided). Exactly one of
                                                  "fixedAddresses", "numDynamicAddresses"
                                                  or "ipAddressRange" shall be present.
                                                type: array
                                                items:
                                                  description: >
                                                    An IPV4 or IPV6 address. Representation:
                                                    In case of an IPV4 address, string that
                                                    consists of four decimal integers
                                                    separated by dots, each integer ranging
                                                    from 0 to 255. In case of an IPV6
                                                    address, string that  consists of groups
                                                    of zero to four hexadecimal digits,
                                                    separated by colons.
                                                  type: string
                                                  format: IP
                                              numDynamicAddresses:
                                                description: >
                                                  Number of dynamic addresses to assign
                                                  (from the subnet defined by "subnetId"
                                                  if provided). Exactly one of
                                                  "fixedAddresses", "numDynamicAddresses"
                                                  or "ipAddressRange" shall be present.
                                                type: integer
                                              addressRange:
                                                description: >
                                                  An IP address range to be used, e.g. in
                                                  case of egress connections. In case this
                                                  attribute is present, IP addresses from
                                                  the range will be used.
                                                type: object
                                                required:
                                                  - minAddress
                                                  - maxAddress
                                                properties:
                                                  minAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                                  maxAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                              subnetId:
                                                description: >
                                                  An identifier maintained by the VIM or
                                                  other resource provider. It is expected
                                                  to be unique within the VIM instance.
                                                type: string
                  modifyPnfData:
                    description: >
                      Specifies the PNF to be modified in the NS instance.  It
                      shall be present only if updateType = "MODIFY_PNF".
                    type: array
                    items:
                      description: >
                        This type specifies an PNF to be modified in the NS
                        instance.  It shall comply with the provisions defined
                        in Table 6.5.3.15-1.
                      type: object
                      required:
                        - pnfId
                      properties:
                        pnfId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        pnfName:
                          description: |
                            Name of the PNF.
                          type: string
                        cpData:
                          description: |
                            Address assigned for the PNF external CP(s).
                          type: array
                          items:
                            description: >
                              This type represents the configuration data on the
                              external CP of the PNF.  It shall comply with the
                              provisions defined in Table 6.5.3.16-1.
                            type: object
                            required:
                              - cpProtocolData
                            properties:
                              cpInstanceI16:
                                description: |
                                  Identifier of the CP in the scope of the PNF.
                                type: string
                              cpdId:
                                description: >
                                  An identifier that is unique within a NS
                                  descriptor. Representation: string of variable
                                  length.
                                type: string
                              cpProtocolData:
                                description: |
                                  Address assigned for this CP.
                                type: array
                                items:
                                  description: |
                                    This type represents network protocol data. 
                                  type: object
                                  required:
                                    - layerProtocol
                                  properties:
                                    layerProtocol:
                                      description: >
                                        Identifier of layer(s) and protocol(s).
                                        Permitted values: IP_OVER_ETHERNET.
                                      type: string
                                      enum:
                                        - IP_OVER_ETHERNET
                                    ipOverEthernet:
                                      description: >
                                        This type represents network address
                                        data for IP over Ethernet.
                                      type: object
                                      properties:
                                        macAddress:
                                          description: >
                                            A MAC address. Representation: string
                                            that consists of groups of two
                                            hexadecimal digits, separated by hyphens
                                            or colons.
                                          type: string
                                          format: MAC
                                        ipAddresses:
                                          description: >
                                            List of IP addresses to assign to the CP
                                            instance. Each entry represents IP
                                            address data for fixed or dynamic IP
                                            address assignment per subnet. If this
                                            attribute is not present, no IP address
                                            shall be assigned.
                                          type: array
                                          items:
                                            type: object
                                            required:
                                              - type
                                            properties:
                                              type:
                                                description: >
                                                  The type of the IP addresses. Permitted
                                                  values: IPV4, IPV6.
                                                type: string
                                                enum:
                                                  - IPV4
                                                  - IPV6
                                              fixedAddresses:
                                                description: >
                                                  Fixed addresses to assign (from the
                                                  subnet defined by "subnetId" if
                                                  provided). Exactly one of
                                                  "fixedAddresses", "numDynamicAddresses"
                                                  or "ipAddressRange" shall be present.
                                                type: array
                                                items:
                                                  description: >
                                                    An IPV4 or IPV6 address. Representation:
                                                    In case of an IPV4 address, string that
                                                    consists of four decimal integers
                                                    separated by dots, each integer ranging
                                                    from 0 to 255. In case of an IPV6
                                                    address, string that  consists of groups
                                                    of zero to four hexadecimal digits,
                                                    separated by colons.
                                                  type: string
                                                  format: IP
                                              numDynamicAddresses:
                                                description: >
                                                  Number of dynamic addresses to assign
                                                  (from the subnet defined by "subnetId"
                                                  if provided). Exactly one of
                                                  "fixedAddresses", "numDynamicAddresses"
                                                  or "ipAddressRange" shall be present.
                                                type: integer
                                              addressRange:
                                                description: >
                                                  An IP address range to be used, e.g. in
                                                  case of egress connections. In case this
                                                  attribute is present, IP addresses from
                                                  the range will be used.
                                                type: object
                                                required:
                                                  - minAddress
                                                  - maxAddress
                                                properties:
                                                  minAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                                  maxAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                              subnetId:
                                                description: >
                                                  An identifier maintained by the VIM or
                                                  other resource provider. It is expected
                                                  to be unique within the VIM instance.
                                                type: string
                  removePnfId:
                    description: >
                      Identifier of the PNF to be deleted from the NS instance.
                      It shall be present only if updateType = "REMOVE_PNF".
                    type: array
                    items:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                  updateTime:
                    description: >
                      Date-time stamp.  Representation: String formatted
                      according to IETF RFC 3339.
                    type: string
                    format: date-time
            description: >
              Parameters for the update NS operation, as defined in clause
              6.5.2.11.
      responses:
        '202':
          description: >
            202 Accepted

            The request was accepted for processing, but the processing has not 
            been completed. 

            The response body shall be empty.

            The HTTP response shall include a "Location" HTTP header that
            contains the URI of the newly-created "NS lifecycle operation
            occurrence" resource corresponding to the operation.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            Location:
              description: The resource URI of the created NS instance
              type: string
              format: url
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              This type represents a response for Query NS operation.  It shall
              comply with the provisions defined in Table 6.5.2.10-1.
            type: object
            required:
              - id
              - nsInstanceName
              - nsInstanceDescription
              - nsdId
              - nsdInfoId
              - nsState
            properties:
              id:
                description: |
                  An identifier with the intention of being globally unique.
                type: string
              nsInstanceName:
                description: |
                  Human readable name of the NS instance.
                type: string
              nsInstanceDescription:
                description: |
                  Human readable description of the NS instance.
                type: string
              nsdId:
                description: |
                  An identifier with the intention of being globally unique.
                type: string
              nsdInfoId:
                description: |
                  An identifier with the intention of being globally unique.
                type: string
              flavourId:
                description: >
                  An identifier that is unique within a NS descriptor.
                  Representation: string of variable length.
                type: string
              vnfInstance:
                description: |
                  Information on constituent VNF(s) of the NS instance.
                type: array
                items:
                  description: |
                    This type represents a VNF instance.
                  type: object
                  required:
                    - id
                    - vnfdId
                    - vnfProvider
                    - vnfProductName
                    - vnfSoftwareVersion
                    - vnfdVersion
                    - vnfPkgId
                    - instantiationState
                  properties:
                    id:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    vnfInstanceName:
                      description: >
                        Name of the VNF instance. This attribute can be modified
                        with the PATCH method.
                      type: string
                    vnfInstanceDescription:
                      description: >
                        Human-readable description of the VNF instance. This
                        attribute can be modified with the PATCH method.
                      type: string
                    vnfdId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    vnfProvider:
                      description: >
                        Provider of the VNF and the VNFD. The value is copied
                        from the VNFD.
                      type: string
                    vnfProductName:
                      description: >
                        Name to identify the VNF Product. The value is copied
                        from the VNFD.
                      type: string
                    vnfSoftwareVersion:
                      description: |
                        A Version.
                      type: string
                    vnfdVersion:
                      description: |
                        A Version.
                      type: string
                    vnfPkgId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    vnfConfigurableProperties:
                      description: >
                        This type represents a list of key-value pairs. The
                        order of the pairs in the list is not significant. In
                        JSON, a set of key- value pairs is represented as an
                        object. It shall comply with the provisions  defined in
                        clause 4 of IETF RFC 7159. 
                      type: object
                    vimId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    instantiationState:
                      description: |
                        The instantiation state of the VNF.
                      type: string
                      enum:
                        - NOT_INSTANTIATED
                        - INSTANTIATED
                    instantiatedVnfInfo:
                      description: >
                        Information specific to an instantiated VNF instance.
                        This attribute shall be present if the instantiateState
                        attribute value is INSTANTIATED.
                      type: object
                      required:
                        - flavourId
                        - vnfState
                      properties:
                        flavourId:
                          description: >
                            Identifier of the VNF Virtual Link Descriptor (VLD)
                            in the VNFD.
                          type: string
                        vnfState:
                          type: string
                          enum:
                            - STARTED
                            - STOPPED
                        scaleStatus:
                          description: >
                            Scale status of the VNF, one entry per aspect.
                            Represents for every scaling aspect how "big" the
                            VNF has been scaled w.r.t. that aspect.
                          type: array
                          items:
                            required:
                              - aspectId
                              - scaleLevel
                            type: object
                            properties:
                              aspectId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              scaleLevel:
                                description: >
                                  Indicates the scale level. The minimum value
                                  shall be 0 and the maximum value shall be <=
                                  maxScaleLevel as described in the VNFD.
                                type: integer
                        extCpInfo:
                          description: >
                            Information about the external CPs exposed by the
                            VNF instance.
                          type: array
                          minItems: 1
                          items:
                            type: object
                            required:
                              - id
                              - cpdId
                            properties:
                              id:
                                description: >
                                  An identifier that is unique for the
                                  respective type within a VNF instance, but may
                                  not be globally unique.
                                type: string
                              cpdId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              cpProtocolInfo:
                                description: |
                                  Network protocol information for this CP.
                                type: array
                                items:
                                  description: >
                                    This type describes the protocol layer(s)
                                    that a CP or SAP uses together with
                                    protocol-related information, like
                                    addresses. It shall comply with the
                                    provisions defined in Table 6.5.3.58-1.
                                  type: object
                                  required:
                                    - layerProtocol
                                    - ipOverEthernet
                                  properties:
                                    layerProtocol:
                                      description: >
                                        The identifier of layer(s) and
                                        protocol(s) associated to the network
                                        address information. Permitted values:
                                        IP_OVER_ETHERNET See note.
                                      type: string
                                      enum:
                                        - IP_OVER_ETHERNET
                                    ipOverEthernet:
                                      description: >
                                        This type represents information about a
                                        network address that has been assigned. 
                                        It shall comply with the provisions
                                        defined in Table 6.5.3.18-1.
                                      type: object
                                      required:
                                        - macAddress
                                        - ipAddresses
                                        - subnetId
                                        - addresses
                                        - addressRange
                                      properties:
                                        macAddress:
                                          description: >
                                            A MAC address. Representation: string
                                            that consists of groups of two
                                            hexadecimal digits, separated by hyphens
                                            or colons.
                                          type: string
                                          format: MAC
                                        ipAddresses:
                                          description: >
                                            Addresses assigned to the CP instance.
                                            Each entry represents IP addresses
                                            assigned by fixed or dynamic IP address
                                            assignment per subnet.
                                          type: array
                                          items:
                                            type: object
                                            required:
                                              - type
                                            properties:
                                              type:
                                                description: >
                                                  The type of the IP addresses. Permitted
                                                  values: IPV4, IPV6.
                                                type: string
                                                enum:
                                                  - IPV4
                                                  - IPV6
                                              addresses:
                                                description: >
                                                  Fixed addresses assigned (from the
                                                  subnet defined by "subnetId" if
                                                  provided).
                                                type: array
                                                items:
                                                  description: >
                                                    An IPV4 or IPV6 address. Representation:
                                                    In case of an IPV4 address, string that
                                                    consists of four decimal integers
                                                    separated by dots, each integer ranging
                                                    from 0 to 255. In case of an IPV6
                                                    address, string that  consists of groups
                                                    of zero to four hexadecimal digits,
                                                    separated by colons.
                                                  type: string
                                                  format: IP
                                              isDynamic:
                                                description: >
                                                  Indicates whether this set of addresses
                                                  was assigned dynamically (true) or based
                                                  on address information provided as input
                                                  from the API consumer (false). Shall be
                                                  present if "addresses" is present and
                                                  shall be absent otherwise.
                                                type: boolean
                                              addressRange:
                                                description: >
                                                  An IP address range used, e.g., in case
                                                  of egress connections. Exactly one of
                                                  "addresses" or "addressRange" shall be
                                                  present.
                                                type: object
                                                required:
                                                  - minAddress
                                                  - maxAddress
                                                properties:
                                                  minAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                                  maxAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                              subnetId:
                                                description: >
                                                  An identifier maintained by the VIM or
                                                  other resource provider. It is expected
                                                  to be unique within the VIM instance.
                                                type: string
                                        type:
                                          description: |
                                            The type of the IP addresses
                                          type: string
                                          enum:
                                            - PV4
                                            - PV6
                                        addresses:
                                          description: >
                                            An IPV4 or IPV6 address. Representation:
                                            In case of an IPV4 address, string that
                                            consists of four decimal integers
                                            separated by dots, each integer ranging
                                            from 0 to 255. In case of an IPV6
                                            address, string that  consists of groups
                                            of zero to four hexadecimal digits,
                                            separated by colons.
                                          type: string
                                          format: IP
                                        isDynamic:
                                          description: >
                                            Indicates whether this set of addresses
                                            was assigned dynamically (true) or based
                                            on address information provided as input
                                            from the API consumer (false). Shall be
                                            present if "addresses" is present and
                                            shall be absent otherwise.
                                          type: boolean
                                        addressRange:
                                          description: >
                                            An IP address range used, e.g. in case
                                            of egress connections. See note.
                                          type: object
                                          required:
                                            - minAddress
                                            - maxAddress
                                          properties:
                                            minAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                            maxAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                        minAddress:
                                          description: >
                                            An IPV4 or IPV6 address. Representation:
                                            In case of an IPV4 address, string that
                                            consists of four decimal integers
                                            separated by dots, each integer ranging
                                            from 0 to 255. In case of an IPV6
                                            address, string that  consists of groups
                                            of zero to four hexadecimal digits,
                                            separated by colons.
                                          type: string
                                          format: IP
                                        maxAddress:
                                          description: >
                                            An IPV4 or IPV6 address. Representation:
                                            In case of an IPV4 address, string that
                                            consists of four decimal integers
                                            separated by dots, each integer ranging
                                            from 0 to 255. In case of an IPV6
                                            address, string that  consists of groups
                                            of zero to four hexadecimal digits,
                                            separated by colons.
                                          type: string
                                          format: IP
                                        subnetId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                              extLinkPortId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                        extVirtualLinkInfo:
                          description: >
                            Information about the external VLs the VNF instance
                            is connected to.
                          type: array
                          items:
                            type: object
                            required:
                              - id
                              - resourceHandle
                            properties:
                              id:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceHandle:
                                required:
                                  - vimConnectionId
                                  - resourceId
                                type: object
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance. Information about
                                  the resource is available from the VIM.
                                properties:
                                  vimConnectionId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceProviderId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                                  vimLevelResourceType:
                                    description: >
                                      Type of the resource in the scope of the
                                      VIM or the resource provider.
                                    type: string
                              extLinkPorts:
                                description: |
                                  Link ports of this VL.
                                type: array
                                items:
                                  description: >
                                    This type represents information about a
                                    link port of an external VL, i.e. a port
                                    providing connectivity for the VNF to an NS
                                    VL. 
                                  type: object
                                  required:
                                    - id
                                    - resourceHandle
                                  properties:
                                    id:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    resourceHandle:
                                      required:
                                        - vimConnectionId
                                        - resourceId
                                      type: object
                                      description: >
                                        This type represents the information
                                        that allows addressing a virtualised
                                        resource that is used by a VNF instance.
                                        Information about the resource is
                                        available from the VIM.
                                      properties:
                                        vimConnectionId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceProviderId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                                        vimLevelResourceType:
                                          description: >
                                            Type of the resource in the scope of the
                                            VIM or the resource provider.
                                          type: string
                                    cpInstanceId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                        extManagedVirtualLinkInfo:
                          description: >
                            External virtual links the VNF instance is connected
                            to.
                          type: array
                          items:
                            type: object
                            required:
                              - id
                              - vnfVirtualLinkDescId
                            properties:
                              id:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              vnfVirtualLinkDescId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              networkResource:
                                required:
                                  - vimConnectionId
                                  - resourceId
                                type: object
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance. Information about
                                  the resource is available from the VIM.
                                properties:
                                  vimConnectionId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceProviderId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                                  vimLevelResourceType:
                                    description: >
                                      Type of the resource in the scope of the
                                      VIM or the resource provider.
                                    type: string
                              vnfLinkPorts:
                                description: |
                                  Link ports of this VL.
                                type: array
                                items:
                                  type: object
                                  required:
                                    - id
                                    - resourceHandle
                                  properties:
                                    id:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                                    resourceHandle:
                                      required:
                                        - vimConnectionId
                                        - resourceId
                                      type: object
                                      description: >
                                        This type represents the information
                                        that allows addressing a virtualised
                                        resource that is used by a VNF instance.
                                        Information about the resource is
                                        available from the VIM.
                                      properties:
                                        vimConnectionId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceProviderId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                                        vimLevelResourceType:
                                          description: >
                                            Type of the resource in the scope of the
                                            VIM or the resource provider.
                                          type: string
                                    cpInstanceId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                        monitoringParameters:
                          description: |
                            Active monitoring parameters.
                          type: array
                          items:
                            type: object
                            required:
                              - id
                              - value
                              - timeStamp
                            properties:
                              id:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              name:
                                description: >
                                  Human readable name of the monitoring
                                  parameter, as defined in the VNFD.
                                type: string
                              value:
                                description: >
                                  Value of the monitoring parameter known to the
                                  VNFM (e.g. obtained for auto-scaling
                                  purposes). The type of the "value" attribute
                                  (i.e. scalar, structure (Object in JSON), or
                                  array (of scalars, arrays or
                                  structures/Objects)) is assumed to be defined
                                  in an external measurement specification.
                                type: object
                              timeStamp:
                                description: >
                                  Represents the point in time when the
                                  measurement has been performed, as known to
                                  the VNFM. Should be formatted according to ETF
                                  RFC 3339.
                                type: string
                        localizationLanguage:
                          description: >
                            Information about localization language of the VNF
                            (includes e.g. strings in the VNFD). The
                            localization languages supported by a VNF can be
                            declared in the VNFD, and localization language
                            selection can take place at instantiation time. The
                            value shall comply with the format defined in IETF
                            RFC 5646.
                          type: string
                        vnfcResourceInfo:
                          description: >
                            Information about the virtualised compute and
                            storage resources used by the VNFCs of the VNF
                            instance.
                          type: array
                          items:
                            description: >
                              This type represents the information on
                              virtualised compute and storage resources used by
                              a VNFC in a VNF instance.
                            type: object
                            required:
                              - id
                              - vduId
                              - computeResource
                            properties:
                              id:
                                description: >
                                  An identifier that is unique for the
                                  respective type within a VNF instance, but may
                                  not be globally unique.
                                type: string
                              vduId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              computeResource:
                                required:
                                  - vimConnectionId
                                  - resourceId
                                type: object
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance. Information about
                                  the resource is available from the VIM.
                                properties:
                                  vimConnectionId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceProviderId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                                  vimLevelResourceType:
                                    description: >
                                      Type of the resource in the scope of the
                                      VIM or the resource provider.
                                    type: string
                              storageResourceIds:
                                description: >
                                  References to the VirtualStorage resources.
                                  The value refers to a
                                  VirtualStorageResourceInfo item in the
                                  VnfInstance.
                                type: array
                                items:
                                  description: >
                                    An identifier with the intention of being
                                    globally unique.
                                  type: string
                              reservationId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              vnfcCpInfo:
                                description: >
                                  CPs of the VNFC instance. Shall be present
                                  when that particular CP of the VNFC instance
                                  is associated to an external CP of the VNF
                                  instance. May be present otherwise.
                                type: array
                                items:
                                  type: object
                                  required:
                                    - id
                                    - cpdId
                                  properties:
                                    id:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                                    cpdId:
                                      description: >
                                        Identifier of the VNF Virtual Link
                                        Descriptor (VLD) in the VNFD.
                                      type: string
                                    vnfExtCpId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                                    cpProtocolInfo:
                                      description: >
                                        Network protocol information for this
                                        CP.
                                      type: array
                                      items:
                                        description: >
                                          This type describes the protocol
                                          layer(s) that a CP or SAP uses together
                                          with protocol-related information, like
                                          addresses. It shall comply with the
                                          provisions defined in Table 6.5.3.58-1.
                                        type: object
                                        required:
                                          - layerProtocol
                                          - ipOverEthernet
                                        properties:
                                          layerProtocol:
                                            description: >
                                              The identifier of layer(s) and
                                              protocol(s) associated to the network
                                              address information. Permitted values:
                                              IP_OVER_ETHERNET See note.
                                            type: string
                                            enum:
                                              - IP_OVER_ETHERNET
                                          ipOverEthernet:
                                            description: >
                                              This type represents information about a
                                              network address that has been assigned. 
                                              It shall comply with the provisions
                                              defined in Table 6.5.3.18-1.
                                            type: object
                                            required:
                                              - macAddress
                                              - ipAddresses
                                              - subnetId
                                              - addresses
                                              - addressRange
                                            properties:
                                              macAddress:
                                                description: >
                                                  A MAC address. Representation: string
                                                  that consists of groups of two
                                                  hexadecimal digits, separated by hyphens
                                                  or colons.
                                                type: string
                                                format: MAC
                                              ipAddresses:
                                                description: >
                                                  Addresses assigned to the CP instance.
                                                  Each entry represents IP addresses
                                                  assigned by fixed or dynamic IP address
                                                  assignment per subnet.
                                                type: array
                                                items:
                                                  type: object
                                                  required:
                                                    - type
                                                  properties:
                                                    type:
                                                      description: >
                                                        The type of the IP addresses. Permitted
                                                        values: IPV4, IPV6.
                                                      type: string
                                                      enum:
                                                        - IPV4
                                                        - IPV6
                                                    addresses:
                                                      description: >
                                                        Fixed addresses assigned (from the
                                                        subnet defined by "subnetId" if
                                                        provided).
                                                      type: array
                                                      items:
                                                        description: >
                                                          An IPV4 or IPV6 address. Representation:
                                                          In case of an IPV4 address, string that
                                                          consists of four decimal integers
                                                          separated by dots, each integer ranging
                                                          from 0 to 255. In case of an IPV6
                                                          address, string that  consists of groups
                                                          of zero to four hexadecimal digits,
                                                          separated by colons.
                                                        type: string
                                                        format: IP
                                                    isDynamic:
                                                      description: >
                                                        Indicates whether this set of addresses
                                                        was assigned dynamically (true) or based
                                                        on address information provided as input
                                                        from the API consumer (false). Shall be
                                                        present if "addresses" is present and
                                                        shall be absent otherwise.
                                                      type: boolean
                                                    addressRange:
                                                      description: >
                                                        An IP address range used, e.g., in case
                                                        of egress connections. Exactly one of
                                                        "addresses" or "addressRange" shall be
                                                        present.
                                                      type: object
                                                      required:
                                                        - minAddress
                                                        - maxAddress
                                                      properties:
                                                        minAddress:
                                                          description: >
                                                            An IPV4 or IPV6 address. Representation:
                                                            In case of an IPV4 address, string that
                                                            consists of four decimal integers
                                                            separated by dots, each integer ranging
                                                            from 0 to 255. In case of an IPV6
                                                            address, string that  consists of groups
                                                            of zero to four hexadecimal digits,
                                                            separated by colons.
                                                          type: string
                                                          format: IP
                                                        maxAddress:
                                                          description: >
                                                            An IPV4 or IPV6 address. Representation:
                                                            In case of an IPV4 address, string that
                                                            consists of four decimal integers
                                                            separated by dots, each integer ranging
                                                            from 0 to 255. In case of an IPV6
                                                            address, string that  consists of groups
                                                            of zero to four hexadecimal digits,
                                                            separated by colons.
                                                          type: string
                                                          format: IP
                                                    subnetId:
                                                      description: >
                                                        An identifier maintained by the VIM or
                                                        other resource provider. It is expected
                                                        to be unique within the VIM instance.
                                                      type: string
                                              type:
                                                description: |
                                                  The type of the IP addresses
                                                type: string
                                                enum:
                                                  - PV4
                                                  - PV6
                                              addresses:
                                                description: >
                                                  An IPV4 or IPV6 address. Representation:
                                                  In case of an IPV4 address, string that
                                                  consists of four decimal integers
                                                  separated by dots, each integer ranging
                                                  from 0 to 255. In case of an IPV6
                                                  address, string that  consists of groups
                                                  of zero to four hexadecimal digits,
                                                  separated by colons.
                                                type: string
                                                format: IP
                                              isDynamic:
                                                description: >
                                                  Indicates whether this set of addresses
                                                  was assigned dynamically (true) or based
                                                  on address information provided as input
                                                  from the API consumer (false). Shall be
                                                  present if "addresses" is present and
                                                  shall be absent otherwise.
                                                type: boolean
                                              addressRange:
                                                description: >
                                                  An IP address range used, e.g. in case
                                                  of egress connections. See note.
                                                type: object
                                                required:
                                                  - minAddress
                                                  - maxAddress
                                                properties:
                                                  minAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                                  maxAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                              minAddress:
                                                description: >
                                                  An IPV4 or IPV6 address. Representation:
                                                  In case of an IPV4 address, string that
                                                  consists of four decimal integers
                                                  separated by dots, each integer ranging
                                                  from 0 to 255. In case of an IPV6
                                                  address, string that  consists of groups
                                                  of zero to four hexadecimal digits,
                                                  separated by colons.
                                                type: string
                                                format: IP
                                              maxAddress:
                                                description: >
                                                  An IPV4 or IPV6 address. Representation:
                                                  In case of an IPV4 address, string that
                                                  consists of four decimal integers
                                                  separated by dots, each integer ranging
                                                  from 0 to 255. In case of an IPV6
                                                  address, string that  consists of groups
                                                  of zero to four hexadecimal digits,
                                                  separated by colons.
                                                type: string
                                                format: IP
                                              subnetId:
                                                description: >
                                                  An identifier maintained by the VIM or
                                                  other resource provider. It is expected
                                                  to be unique within the VIM instance.
                                                type: string
                                    vnfLinkPortId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                              metadata:
                                description: >
                                  This type represents a list of key-value
                                  pairs. The order of the pairs in the list is
                                  not significant. In JSON, a set of key- value
                                  pairs is represented as an object. It shall
                                  comply with the provisions  defined in clause
                                  4 of IETF RFC 7159. 
                                type: object
                        virtualLinkResourceInfo:
                          description: >
                            Information about the virtualised network resources
                            used by the VLs of the VNF instance.
                          type: array
                          items:
                            description: >
                              This type represents the information that allows
                              addressing a virtualised resource that is used by
                              an internal VL instance in a VNF instance.
                            type: object
                            required:
                              - id
                              - vnfVirtualLinkDescId
                              - networkResource
                            properties:
                              id:
                                description: >
                                  An identifier that is unique for the
                                  respective type within a VNF instance, but may
                                  not be globally unique.
                                type: string
                              vnfVirtualLinkDescId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              networkResource:
                                required:
                                  - vimConnectionId
                                  - resourceId
                                type: object
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance. Information about
                                  the resource is available from the VIM.
                                properties:
                                  vimConnectionId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceProviderId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                                  vimLevelResourceType:
                                    description: >
                                      Type of the resource in the scope of the
                                      VIM or the resource provider.
                                    type: string
                              reservationId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              vnfLinkPorts:
                                description: >
                                  Links ports of this VL. Shall be present when
                                  the linkPort is used for external connectivity
                                  by the VNF (refer to VnfLinkPortInfo). May be
                                  present otherwise.
                                type: array
                                items:
                                  type: object
                                  required:
                                    - id
                                    - resourceHandle
                                  properties:
                                    id:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                                    resourceHandle:
                                      required:
                                        - vimConnectionId
                                        - resourceId
                                      type: object
                                      description: >
                                        This type represents the information
                                        that allows addressing a virtualised
                                        resource that is used by a VNF instance.
                                        Information about the resource is
                                        available from the VIM.
                                      properties:
                                        vimConnectionId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceProviderId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                                        vimLevelResourceType:
                                          description: >
                                            Type of the resource in the scope of the
                                            VIM or the resource provider.
                                          type: string
                                    cpInstanceId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                              metadata:
                                description: >
                                  This type represents a list of key-value
                                  pairs. The order of the pairs in the list is
                                  not significant. In JSON, a set of key- value
                                  pairs is represented as an object. It shall
                                  comply with the provisions  defined in clause
                                  4 of IETF RFC 7159. 
                                type: object
                        virtualStorageResourceInfo:
                          description: >
                            Information on the virtualised storage resource(s)
                            used as storage for the VNF instance.
                          type: array
                          items:
                            description: >
                              This type represents the information that allows
                              addressing a virtualised resource that is used by
                              a VNF instance.
                            type: object
                            required:
                              - id
                              - virtualStorageDescId
                              - storageResource
                            properties:
                              id:
                                description: >
                                  An identifier that is unique for the
                                  respective type within a VNF instance, but may
                                  not be globally unique.
                                type: string
                              virtualStorageDescId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              storageResource:
                                required:
                                  - vimConnectionId
                                  - resourceId
                                type: object
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance. Information about
                                  the resource is available from the VIM.
                                properties:
                                  vimConnectionId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceProviderId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                                  vimLevelResourceType:
                                    description: >
                                      Type of the resource in the scope of the
                                      VIM or the resource provider.
                                    type: string
                              reservationId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              metadata:
                                description: >
                                  This type represents a list of key-value
                                  pairs. The order of the pairs in the list is
                                  not significant. In JSON, a set of key- value
                                  pairs is represented as an object. It shall
                                  comply with the provisions  defined in clause
                                  4 of IETF RFC 7159. 
                                type: object
                    metadata:
                      description: >
                        This type represents a list of key-value pairs. The
                        order of the pairs in the list is not significant. In
                        JSON, a set of key- value pairs is represented as an
                        object. It shall comply with the provisions  defined in
                        clause 4 of IETF RFC 7159. 
                      type: object
                    extensions:
                      description: >
                        This type represents a list of key-value pairs. The
                        order of the pairs in the list is not significant. In
                        JSON, a set of key- value pairs is represented as an
                        object. It shall comply with the provisions  defined in
                        clause 4 of IETF RFC 7159. 
                      type: object
              pnfInfo:
                description: |
                  Information on the PNF(s) that are part of the NS instance.
                type: array
                items:
                  description: >
                    This type represents the information about a PNF that is
                    part of an NS instance.  It shall comply with the provisions
                    defined in Table 6.5.3.13-1.
                  type: object
                  required:
                    - pnfId
                    - pnfdId
                    - pnfdInfoId
                    - pnfProfileId
                  properties:
                    pnfId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    pnfName:
                      description: |
                        Name of the PNF.
                      type: string
                    pnfdId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    pnfdInfoId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    pnfProfileId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
                    cpInfo:
                      description: >
                        This type represents the information about the external
                        CP of the PNF.  It shall comply with the provisions
                        defined in Table 6.5.3.17-1.
                      type: object
                      required:
                        - cpInstanceId
                        - cpdId
                      properties:
                        cpInstanceId:
                          description: |
                            Identifier of the CP in the scope of the PNF.
                          type: string
                        cpdId:
                          description: >
                            An identifier that is unique within a NS descriptor.
                            Representation: string of variable length.
                          type: string
                        cpProtocolData:
                          description: >
                            Parameters for configuring the network protocols on
                            the CP.
                          type: array
                          items:
                            description: |
                              This type represents network protocol data. 
                            type: object
                            required:
                              - layerProtocol
                            properties:
                              layerProtocol:
                                description: >
                                  Identifier of layer(s) and protocol(s).
                                  Permitted values: IP_OVER_ETHERNET.
                                type: string
                                enum:
                                  - IP_OVER_ETHERNET
                              ipOverEthernet:
                                description: >
                                  This type represents network address data for
                                  IP over Ethernet.
                                type: object
                                properties:
                                  macAddress:
                                    description: >
                                      A MAC address. Representation: string that
                                      consists of groups of two hexadecimal
                                      digits, separated by hyphens or colons.
                                    type: string
                                    format: MAC
                                  ipAddresses:
                                    description: >
                                      List of IP addresses to assign to the CP
                                      instance. Each entry represents IP address
                                      data for fixed or dynamic IP address
                                      assignment per subnet. If this attribute
                                      is not present, no IP address shall be
                                      assigned.
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - type
                                      properties:
                                        type:
                                          description: >
                                            The type of the IP addresses. Permitted
                                            values: IPV4, IPV6.
                                          type: string
                                          enum:
                                            - IPV4
                                            - IPV6
                                        fixedAddresses:
                                          description: >
                                            Fixed addresses to assign (from the
                                            subnet defined by "subnetId" if
                                            provided). Exactly one of
                                            "fixedAddresses", "numDynamicAddresses"
                                            or "ipAddressRange" shall be present.
                                          type: array
                                          items:
                                            description: >
                                              An IPV4 or IPV6 address. Representation:
                                              In case of an IPV4 address, string that
                                              consists of four decimal integers
                                              separated by dots, each integer ranging
                                              from 0 to 255. In case of an IPV6
                                              address, string that  consists of groups
                                              of zero to four hexadecimal digits,
                                              separated by colons.
                                            type: string
                                            format: IP
                                        numDynamicAddresses:
                                          description: >
                                            Number of dynamic addresses to assign
                                            (from the subnet defined by "subnetId"
                                            if provided). Exactly one of
                                            "fixedAddresses", "numDynamicAddresses"
                                            or "ipAddressRange" shall be present.
                                          type: integer
                                        addressRange:
                                          description: >
                                            An IP address range to be used, e.g. in
                                            case of egress connections. In case this
                                            attribute is present, IP addresses from
                                            the range will be used.
                                          type: object
                                          required:
                                            - minAddress
                                            - maxAddress
                                          properties:
                                            minAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                            maxAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                        subnetId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
              virtualLinkInfo:
                description: >
                  Information on the VL(s) of the NS instance. This attribute
                  shall be present if the nsState attribute value is
                  INSTANTIATED and if the NS instance has specified
                  connectivity.
                type: array
                items:
                  description: >
                    This type specifies the information about an NS VL
                    instance.  It shall comply with the provisions defined in
                    Table 6.5.3.53-1
                  type: object
                  required:
                    - id
                    - nsVirtualLinkDescId
                  properties:
                    id:
                      description: >
                        An identifier that is unique with respect to a NS. 
                        Representation: string of variable length.
                      type: string
                    nsVirtualLinkDescId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
                    resourceHandle:
                      description: >
                        Identifier(s) of the virtualised network resource(s)
                        realizing the VL instance. See note.
                      type: array
                      items:
                        required:
                          - vimConnectionId
                          - resourceId
                        type: object
                        description: >
                          This type represents the information that allows
                          addressing a virtualised resource that is used by a
                          VNF instance. Information about the resource is
                          available from the VIM.
                        properties:
                          vimConnectionId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          resourceProviderId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          resourceId:
                            description: >
                              An identifier maintained by the VIM or other
                              resource provider. It is expected to be unique
                              within the VIM instance.
                            type: string
                          vimLevelResourceType:
                            description: >
                              Type of the resource in the scope of the VIM or
                              the resource provider.
                            type: string
                    linkPort:
                      description: >
                        Link ports of the VL instance. Cardinality of zero
                        indicates that no port has yet been created for the VL
                        instance.
                      type: array
                      items:
                        description: >
                          This type represents information about a link port of
                          a VL instance.  It shall comply with the provisions
                          defined in Table 6.5.3.55-1.
                        type: object
                        required:
                          - id
                          - resourceHandle
                        properties:
                          id:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          resourceHandle:
                            required:
                              - vimConnectionId
                              - resourceId
                            type: object
                            description: >
                              This type represents the information that allows
                              addressing a virtualised resource that is used by
                              a VNF instance. Information about the resource is
                              available from the VIM.
                            properties:
                              vimConnectionId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceProviderId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceId:
                                description: >
                                  An identifier maintained by the VIM or other
                                  resource provider. It is expected to be unique
                                  within the VIM instance.
                                type: string
                              vimLevelResourceType:
                                description: >
                                  Type of the resource in the scope of the VIM
                                  or the resource provider.
                                type: string
                          nsCpHandle:
                            description: >
                              Identifier of the CP/SAP instance to be connected
                              to this link port. The value refers to a
                              vnfExtCpInfo item in the VnfInstance, or a
                              pnfExtCpInfo item in the PnfInfo, or a sapInfo
                              item in the NS instance. There shall be at most
                              one link port associated with any connection point
                              instance.
                            type: array
                            items:
                              description: >
                                This type represents an identifier of the CP or
                                SAP instance.  It shall comply with the
                                provisions defined in Table 6.5.3.56-1.
                              type: object
                              properties:
                                vnfInstanceId:
                                  description: >
                                    An identifier with the intention of being
                                    globally unique.
                                  type: string
                                vnfExtCpInstanceId:
                                  description: >
                                    An identifier that is unique for the
                                    respective type within a VNF instance, but
                                    may not be globally unique.
                                  type: string
                                pnfInfoId:
                                  description: >
                                    An identifier with the intention of being
                                    globally unique.
                                  type: string
                                pnfExtCpInstanceId:
                                  description: >
                                    Identifier of the CP in the scope of the
                                    PNF.
                                  type: string
                                nsInstanceId:
                                  description: >
                                    An identifier with the intention of being
                                    globally unique.
                                  type: string
                                nsSapInstanceId:
                                  description: >
                                    An identifier that is unique with respect to
                                    a NS.  Representation: string of variable
                                    length.
                                  type: string
              vnffgInfo:
                description: |
                  Information on the VNFFG(s) of the NS instance.
                type: array
                items:
                  description: |
                    Information on the VNFFG(s) of the NS instance.
                  type: object
                  required:
                    - id
                    - vnffgdId
                    - vnfInstanceId
                    - pnfInfoId
                  properties:
                    id:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    vnffgdId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
                    vnfInstanceId:
                      description: >
                        Identifier(s) of the constituent VNF instance(s) of this
                        VNFFG instance.
                      type: array
                      items:
                        description: >
                          An identifier with the intention of being globally
                          unique.
                        type: string
                    pnfdInfoId:
                      description: >
                        Identifier(s) of the constituent PNF instance(s) of this
                        VNFFG instance.
                      type: array
                      items:
                        description: >
                          An identifier with the intention of being globally
                          unique.
                        type: string
                    nsVirtualLinkInfoId:
                      description: >
                        Identifier(s) of the constituent VL instance(s) of this
                        VNFFG instance.
                      type: array
                      items:
                        description: >
                          An identifier that is unique with respect to a NS. 
                          Representation: string of variable length.
                        type: string
                    nsCpHandle:
                      description: >
                        Identifiers of the CP instances attached to the
                        constituent VNFs and PNFs or the SAP instances of the
                        VNFFG. See note.
                      type: array
                      items:
                        description: >
                          This type represents an identifier of the CP or SAP
                          instance.  It shall comply with the provisions defined
                          in Table 6.5.3.56-1.
                        type: object
                        properties:
                          vnfInstanceId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          vnfExtCpInstanceId:
                            description: >
                              An identifier that is unique for the respective
                              type within a VNF instance, but may not be
                              globally unique.
                            type: string
                          pnfInfoId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          pnfExtCpInstanceId:
                            description: |
                              Identifier of the CP in the scope of the PNF.
                            type: string
                          nsInstanceId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          nsSapInstanceId:
                            description: >
                              An identifier that is unique with respect to a
                              NS.  Representation: string of variable length.
                            type: string
              sapInfo:
                description: |
                  Information on the SAP(s) of the NS instance.
                type: array
                items:
                  description: >
                    This type represents an SAP instance. It shall comply with
                    the provisions defined in Table 6.5.3.67-1.
                  type: object
                  required:
                    - id
                    - sapdId
                    - sapName
                    - sapProtocolInfo
                  properties:
                    id:
                      description: >
                        An identifier that is unique with respect to a NS. 
                        Representation: string of variable length.
                      type: string
                    sapdId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
                    sapName:
                      description: |
                        Human readable name for the SAP instance.
                      type: string
                    description:
                      description: |
                        Human readable description for the SAP instance.
                      type: string
                    sapProtocolInfo:
                      description: |
                        Network protocol information for this SAP.
                      type: array
                      items:
                        description: >
                          This type describes the protocol layer(s) that a CP or
                          SAP uses together with protocol-related information,
                          like addresses. It shall comply with the provisions
                          defined in Table 6.5.3.58-1.
                        type: object
                        required:
                          - layerProtocol
                          - ipOverEthernet
                        properties:
                          layerProtocol:
                            description: >
                              The identifier of layer(s) and protocol(s)
                              associated to the network address information.
                              Permitted values: IP_OVER_ETHERNET See note.
                            type: string
                            enum:
                              - IP_OVER_ETHERNET
                          ipOverEthernet:
                            description: >
                              This type represents information about a network
                              address that has been assigned.  It shall comply
                              with the provisions defined in Table 6.5.3.18-1.
                            type: object
                            required:
                              - macAddress
                              - ipAddresses
                              - subnetId
                              - addresses
                              - addressRange
                            properties:
                              macAddress:
                                description: >
                                  A MAC address. Representation: string that
                                  consists of groups of two hexadecimal digits,
                                  separated by hyphens or colons.
                                type: string
                                format: MAC
                              ipAddresses:
                                description: >
                                  Addresses assigned to the CP instance. Each
                                  entry represents IP addresses assigned by
                                  fixed or dynamic IP address assignment per
                                  subnet.
                                type: array
                                items:
                                  type: object
                                  required:
                                    - type
                                  properties:
                                    type:
                                      description: >
                                        The type of the IP addresses. Permitted
                                        values: IPV4, IPV6.
                                      type: string
                                      enum:
                                        - IPV4
                                        - IPV6
                                    addresses:
                                      description: >
                                        Fixed addresses assigned (from the
                                        subnet defined by "subnetId" if
                                        provided).
                                      type: array
                                      items:
                                        description: >
                                          An IPV4 or IPV6 address. Representation:
                                          In case of an IPV4 address, string that
                                          consists of four decimal integers
                                          separated by dots, each integer ranging
                                          from 0 to 255. In case of an IPV6
                                          address, string that  consists of groups
                                          of zero to four hexadecimal digits,
                                          separated by colons.
                                        type: string
                                        format: IP
                                    isDynamic:
                                      description: >
                                        Indicates whether this set of addresses
                                        was assigned dynamically (true) or based
                                        on address information provided as input
                                        from the API consumer (false). Shall be
                                        present if "addresses" is present and
                                        shall be absent otherwise.
                                      type: boolean
                                    addressRange:
                                      description: >
                                        An IP address range used, e.g., in case
                                        of egress connections. Exactly one of
                                        "addresses" or "addressRange" shall be
                                        present.
                                      type: object
                                      required:
                                        - minAddress
                                        - maxAddress
                                      properties:
                                        minAddress:
                                          description: >
                                            An IPV4 or IPV6 address. Representation:
                                            In case of an IPV4 address, string that
                                            consists of four decimal integers
                                            separated by dots, each integer ranging
                                            from 0 to 255. In case of an IPV6
                                            address, string that  consists of groups
                                            of zero to four hexadecimal digits,
                                            separated by colons.
                                          type: string
                                          format: IP
                                        maxAddress:
                                          description: >
                                            An IPV4 or IPV6 address. Representation:
                                            In case of an IPV4 address, string that
                                            consists of four decimal integers
                                            separated by dots, each integer ranging
                                            from 0 to 255. In case of an IPV6
                                            address, string that  consists of groups
                                            of zero to four hexadecimal digits,
                                            separated by colons.
                                          type: string
                                          format: IP
                                    subnetId:
                                      description: >
                                        An identifier maintained by the VIM or
                                        other resource provider. It is expected
                                        to be unique within the VIM instance.
                                      type: string
                              type:
                                description: |
                                  The type of the IP addresses
                                type: string
                                enum:
                                  - PV4
                                  - PV6
                              addresses:
                                description: >
                                  An IPV4 or IPV6 address. Representation: In
                                  case of an IPV4 address, string that consists
                                  of four decimal integers separated by dots,
                                  each integer ranging from 0 to 255. In case of
                                  an IPV6 address, string that  consists of
                                  groups of zero to four hexadecimal digits,
                                  separated by colons.
                                type: string
                                format: IP
                              isDynamic:
                                description: >
                                  Indicates whether this set of addresses was
                                  assigned dynamically (true) or based on
                                  address information provided as input from the
                                  API consumer (false). Shall be present if
                                  "addresses" is present and shall be absent
                                  otherwise.
                                type: boolean
                              addressRange:
                                description: >
                                  An IP address range used, e.g. in case of
                                  egress connections. See note.
                                type: object
                                required:
                                  - minAddress
                                  - maxAddress
                                properties:
                                  minAddress:
                                    description: >
                                      An IPV4 or IPV6 address. Representation:
                                      In case of an IPV4 address, string that
                                      consists of four decimal integers
                                      separated by dots, each integer ranging
                                      from 0 to 255. In case of an IPV6 address,
                                      string that  consists of groups of zero to
                                      four hexadecimal digits, separated by
                                      colons.
                                    type: string
                                    format: IP
                                  maxAddress:
                                    description: >
                                      An IPV4 or IPV6 address. Representation:
                                      In case of an IPV4 address, string that
                                      consists of four decimal integers
                                      separated by dots, each integer ranging
                                      from 0 to 255. In case of an IPV6 address,
                                      string that  consists of groups of zero to
                                      four hexadecimal digits, separated by
                                      colons.
                                    type: string
                                    format: IP
                              minAddress:
                                description: >
                                  An IPV4 or IPV6 address. Representation: In
                                  case of an IPV4 address, string that consists
                                  of four decimal integers separated by dots,
                                  each integer ranging from 0 to 255. In case of
                                  an IPV6 address, string that  consists of
                                  groups of zero to four hexadecimal digits,
                                  separated by colons.
                                type: string
                                format: IP
                              maxAddress:
                                description: >
                                  An IPV4 or IPV6 address. Representation: In
                                  case of an IPV4 address, string that consists
                                  of four decimal integers separated by dots,
                                  each integer ranging from 0 to 255. In case of
                                  an IPV6 address, string that  consists of
                                  groups of zero to four hexadecimal digits,
                                  separated by colons.
                                type: string
                                format: IP
                              subnetId:
                                description: >
                                  An identifier maintained by the VIM or other
                                  resource provider. It is expected to be unique
                                  within the VIM instance.
                                type: string
              nestedNsInstanceId:
                description: |
                  Identifier of the nested NS(s) of the NS instance.
                type: array
                items:
                  description: |
                    An identifier with the intention of being globally unique.
                  type: string
              nsState:
                description: >
                  The state of the NS instance. Permitted values:
                  NOT_INSTANTIATED: The NS instance is terminated or not
                  instantiated. INSTANTIATED: The NS instance is instantiated.
                type: string
                enum:
                  - NOT_INSTANTIATED
                  - INSTANTIATED
              nsScaleStatus:
                description: >
                  Status of each NS scaling aspect declared in the applicable
                  DF, how "big" the NS instance has been scaled w.r.t. that
                  aspect. This attribute shall be present if the nsState
                  attribute value is INSTANTIATED.
                type: array
                items:
                  description: >
                    This type represents the target NS Scale level for each NS
                    scaling aspect of the current deployment flavor.
                  type: object
                  required:
                    - nsScalingAspectId
                    - nsScaleLevelId
                  properties:
                    nsScalingAspectId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
                    nsScaleLevelId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
              additionalAffinityOrAntiAffinityRule:
                description: >
                  Information on the additional affinity or anti-affinity rule
                  from NS instantiation operation. Shall not conflict with rules
                  already specified in the NSD.
                type: array
                items:
                  description: >
                    This type describes the additional affinity or anti-affinity
                    rule  applicable between the VNF instances to be
                    instantiated in the NS instantiation operation request or
                    between the VNF instances  to be instantiated in the NS
                    instantiation operation request and the existing VNF
                    instances..
                  type: object
                  required:
                    - affinityOrAntiAffiinty
                    - scope
                  properties:
                    vnfdId:
                      description: >
                        Reference to a VNFD. When the VNFD which is not used to
                        instantiate VNF, it presents all VNF instances of this
                        type as the subjects of the affinity or anti-affinity
                        rule. The VNF instance which the VNFD presents is not
                        necessary as a part of the NS to be instantiated.
                      type: array
                      items:
                        description: >
                          An identifier with the intention of being globally
                          unique.
                        type: string
                    vnfProfileId:
                      description: >
                        Reference to a vnfProfile defined in the NSD. At least
                        one VnfProfile which is used to instantiate VNF for the
                        NS to be instantiated as the subject of the affinity or
                        anti-affinity rule shall be present. When the VnfProfile
                        which is not used to instantiate VNF, it presents all
                        VNF instances of this type as the subjects of the
                        affinity or anti-affinity rule. The VNF instance which
                        the VnfProfile presents is not necessary as a part of
                        the NS to be instantiated.
                      type: array
                      items:
                        description: >
                          An identifier that is unique within a NS descriptor.
                          Representation: string of variable length.
                        type: string
                    vnfInstanceId:
                      description: >
                        Reference to the existing VNF instance as the subject of
                        the affinity or anti-affinity rule. The existing VNF
                        instance is not necessary as a part of the NS to be
                        instantiated.
                      type: array
                      items:
                        description: >
                          An identifier with the intention of being globally
                          unique.
                        type: string
                    affinityOrAntiAffiinty:
                      description: >
                        The type of the constraint. Permitted values: AFFINITY
                        ANTI_AFFINITY.
                      type: string
                      enum:
                        - AFFINITY
                        - ANTI_AFFINITY
                    scope:
                      description: >
                        Specifies the scope of the rule where the placement
                        constraint applies. Permitted values: NFVI_POP ZONE
                        ZONE_GROUP NFVI_NODE.
                      type: string
                      enum:
                        - NFVI_POP
                        - ZONE
                        - ZONE_GROUP
                        - NFVI_NODE
              _links:
                type: object
                description: Links to resources related to this resource.
                required:
                  - self
                properties:
                  self:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
                  nestedNsInstances:
                    description: |
                      Links to resources related to this notification.
                    type: array
                    items:
                      description: |
                        This type represents a link to a resource.
                      type: object
                      required:
                        - href
                      properties:
                        href:
                          description: |
                            URI of the referenced resource.
                          type: string
                          format: url
                  instantiate:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
                  terminate:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
                  update:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
                  scale:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
                  heal:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
        '400':
          description: >
            Bad Request

            Error: Invalid attribute-based filtering parameters. The response
            body shall contain a ProblemDetails structure, in which the "detail"
            attribute should convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '401':
          description: >
            Unauthorized If the request contains no access token even though one
            is required, or if the request contains an authorization token that
            is invalid (e.g. expired or revoked), the API producer should
            respond with this response. The details of the error shall be
            returned in the WWW-Authenticate HTTP header, as defined in IETF RFC
            6750 and IETF RFC 7235. The ProblemDetails structure may be
            provided.
          headers:
            Content-Type:
              type: string
              description: The MIME type of the body of the response.
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '403':
          description: >
            Forbidden If the API consumer is not allowed to perform a particular
            request to a particular resource, the API producer shall respond
            with this response code. The "ProblemDetails" structure shall be
            provided.  It should include in the "detail" attribute information
            about the source of the problem, and may indicate how to solve it.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '404':
          description: >
            Not Found Error: The API producer did not find a current
            representation for the target resource or is not willing to disclose
            that one exists. Specifically in case of this task resource, the 
            response code 404 shall also returned if the task is not supported
            for the NS instance represented by the parent resource, which means
            that the task resource consequently does not exist.  In this case,
            the response body shall be present, and shall contain a
            ProblemDetails structure, in which the "detail" attribute shall
            convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '405':
          description: >
            Method Not Allowed If a particular HTTP method is not supported for
            a particular resource, the API producer shall respond with this
            response code. The "ProblemDetails" structure may be omitted in that
            case.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '406':
          description: >
            Not Acceptable If the Accept HTTP header does not contain at least
            one name of a content type that is acceptable to the API producer,
            the API producer shall respond with this response code. The
            ProblemDetails structure may be omitted in that case.        
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '409':
          description: >
            Conflict

            The operation cannot be executed currently, due to a conflict with
            the state of the NS instance resource. Typically, this is due to the
            fact that the NS instance resource is in NOT-INSTANTIATED state, or
            that another lifecycle management operation is ongoing. The response
            body shall contain a ProblemDetails structure, in which the "detail"
            attribute should convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '500':
          description: >
            Internal Server Error If there is an application error not related
            to the client's input that cannot be easily mapped to any other HTTP
            response code ("catch all error"), the API producer shall respond
            withthis response code. The ProblemDetails structure shall be
            provided, and shall include in the "detail" attribute more
            information about the source of the problem.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '503':
          description: >
            Service Unavailable If the API producer encounters an internal
            overload situation of itself or of a system it relies on, it should
            respond with this response code, following the provisions in IETF
            RFC 7231 [13] for the use of the Retry-After HTTP header and for the
            alternative to refuse the connection. The "ProblemDetails" structure
            may be omitted.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
  '/ns_instances/{nsInstanceId}/heal':
    parameters:
      - name: nsInstanceId
        description: |
          Identifier of the NS instance to be healed.
        in: path
        type: string
        required: true
    post:
      summary: Heal a NS instance.
      description: >
        The POST method requests to heal a NS instance resource. This method
        shall follow the provisions specified in the Tables 6.4.7.3.1-1 and 
        6.4.7.3.1-2 for URI query parameters, request and response data
        structures, and response codes.
      parameters:
        - name: Accept
          description: >
            Content-Types that are acceptable for the response. Reference: IETF
            RFC 7231
          in: header
          required: true
          type: string
        - name: Authorization
          description: |
            The authorization token for the request. Reference: IETF RFC 7235
          in: header
          required: false
          type: string
        - name: Content-Type
          description: |
            The MIME type of the body of the request. Reference: IETF RFC 7231
          in: header
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - HealNsRequest
            properties:
              HealNsRequest:
                description: >
                  This operation supports the healing of an NS instance,  either
                  by healing the complete NS instance or by healing one of more
                  of the VNF instances that are part of this NS.  It shall
                  comply with the provisions defined in Table 6.5.2.13-1.
                type: object
                properties:
                  healNsData:
                    description: >
                      This type represents the information used to heal a NS. 
                      It shall comply with the provisions defined in Table
                      6.5.3.43-1.
                    type: object
                    required:
                      - degreeHealing
                    properties:
                      degreeHealing:
                        description: >
                          Indicates the degree of healing. Possible values
                          include: - HEAL_RESTORE: Complete the healing of the
                          NS restoring the state of the NS before the failure
                          occurred - HEAL_QOS: Complete the healing of the NS
                          based on the newest QoS values - HEAL_RESET: Complete
                          the healing of the NS resetting to the original
                          instantiation state of the NS - PARTIAL_HEALING
                        type: string
                        enum:
                          - HEAL_RESTORE
                          - HEAL_QOS
                          - HEAL_RESET
                          - PARTIAL_HEALING
                      actionsHealing:
                        description: >
                          Used to specify dedicated healing actions in a
                          particular order (e.g. as a script). The
                          actionsHealing attribute can be used to provide a
                          specific script whose content and actions might only
                          be possible to be derived during runtime.
                        type: array
                        items:
                          description: |
                            This type represents stack of string values
                          type: string
                      healScript:
                        description: >
                          An identifier that is unique within a NS descriptor.
                          Representation: string of variable length.
                        type: string
                      additionalParamsforNs:
                        description: >
                          This type represents a list of key-value pairs. The
                          order of the pairs in the list is not significant. In
                          JSON, a set of key- value pairs is represented as an
                          object. It shall comply with the provisions  defined
                          in clause 4 of IETF RFC 7159. 
                        type: object
                  healVnfData:
                    description: >
                      Additional parameters passed by the NFVO as input to the
                      healing process, specific to the VNF being healed, as
                      declared in the VNFD as part of "HealVnfOpConfig".        
                    type: array
                    items:
                      description: >
                        This type represents the information to heal a VNF that
                        is part of an NS.  The NFVO shall then invoke the
                        HealVNF operation towards the appropriate VNFM.  It
                        shall comply with the provisions defined in Table
                        6.5.3.44-1.
                      type: object
                      required:
                        - vnfInstanceId
                      properties:
                        vnfInstanceId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        cause:
                          description: >
                            Indicates the reason why a healing procedure is
                            required.
                          type: string
                        additionalParams:
                          description: >
                            This type represents a list of key-value pairs. The
                            order of the pairs in the list is not significant.
                            In JSON, a set of key- value pairs is represented as
                            an object. It shall comply with the provisions 
                            defined in clause 4 of IETF RFC 7159. 
                          type: object
            description: >
              Parameters for the heal NS operation, as defined in clause
              6.5.2.12.
      responses:
        '202':
          description: >
            202 Accepted

            The request was accepted for processing, but the processing has not 
            been completed. 

            The response body shall be empty.

            The HTTP response shall include a "Location" HTTP header that
            contains the URI of the newly-created "NS lifecycle operation
            occurrence" resource corresponding to the operation.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            Location:
              description: The resource URI of the created NS instance
              type: string
              format: url
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              This type represents a response for Query NS operation.  It shall
              comply with the provisions defined in Table 6.5.2.10-1.
            type: object
            required:
              - id
              - nsInstanceName
              - nsInstanceDescription
              - nsdId
              - nsdInfoId
              - nsState
            properties:
              id:
                description: |
                  An identifier with the intention of being globally unique.
                type: string
              nsInstanceName:
                description: |
                  Human readable name of the NS instance.
                type: string
              nsInstanceDescription:
                description: |
                  Human readable description of the NS instance.
                type: string
              nsdId:
                description: |
                  An identifier with the intention of being globally unique.
                type: string
              nsdInfoId:
                description: |
                  An identifier with the intention of being globally unique.
                type: string
              flavourId:
                description: >
                  An identifier that is unique within a NS descriptor.
                  Representation: string of variable length.
                type: string
              vnfInstance:
                description: |
                  Information on constituent VNF(s) of the NS instance.
                type: array
                items:
                  description: |
                    This type represents a VNF instance.
                  type: object
                  required:
                    - id
                    - vnfdId
                    - vnfProvider
                    - vnfProductName
                    - vnfSoftwareVersion
                    - vnfdVersion
                    - vnfPkgId
                    - instantiationState
                  properties:
                    id:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    vnfInstanceName:
                      description: >
                        Name of the VNF instance. This attribute can be modified
                        with the PATCH method.
                      type: string
                    vnfInstanceDescription:
                      description: >
                        Human-readable description of the VNF instance. This
                        attribute can be modified with the PATCH method.
                      type: string
                    vnfdId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    vnfProvider:
                      description: >
                        Provider of the VNF and the VNFD. The value is copied
                        from the VNFD.
                      type: string
                    vnfProductName:
                      description: >
                        Name to identify the VNF Product. The value is copied
                        from the VNFD.
                      type: string
                    vnfSoftwareVersion:
                      description: |
                        A Version.
                      type: string
                    vnfdVersion:
                      description: |
                        A Version.
                      type: string
                    vnfPkgId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    vnfConfigurableProperties:
                      description: >
                        This type represents a list of key-value pairs. The
                        order of the pairs in the list is not significant. In
                        JSON, a set of key- value pairs is represented as an
                        object. It shall comply with the provisions  defined in
                        clause 4 of IETF RFC 7159. 
                      type: object
                    vimId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    instantiationState:
                      description: |
                        The instantiation state of the VNF.
                      type: string
                      enum:
                        - NOT_INSTANTIATED
                        - INSTANTIATED
                    instantiatedVnfInfo:
                      description: >
                        Information specific to an instantiated VNF instance.
                        This attribute shall be present if the instantiateState
                        attribute value is INSTANTIATED.
                      type: object
                      required:
                        - flavourId
                        - vnfState
                      properties:
                        flavourId:
                          description: >
                            Identifier of the VNF Virtual Link Descriptor (VLD)
                            in the VNFD.
                          type: string
                        vnfState:
                          type: string
                          enum:
                            - STARTED
                            - STOPPED
                        scaleStatus:
                          description: >
                            Scale status of the VNF, one entry per aspect.
                            Represents for every scaling aspect how "big" the
                            VNF has been scaled w.r.t. that aspect.
                          type: array
                          items:
                            required:
                              - aspectId
                              - scaleLevel
                            type: object
                            properties:
                              aspectId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              scaleLevel:
                                description: >
                                  Indicates the scale level. The minimum value
                                  shall be 0 and the maximum value shall be <=
                                  maxScaleLevel as described in the VNFD.
                                type: integer
                        extCpInfo:
                          description: >
                            Information about the external CPs exposed by the
                            VNF instance.
                          type: array
                          minItems: 1
                          items:
                            type: object
                            required:
                              - id
                              - cpdId
                            properties:
                              id:
                                description: >
                                  An identifier that is unique for the
                                  respective type within a VNF instance, but may
                                  not be globally unique.
                                type: string
                              cpdId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              cpProtocolInfo:
                                description: |
                                  Network protocol information for this CP.
                                type: array
                                items:
                                  description: >
                                    This type describes the protocol layer(s)
                                    that a CP or SAP uses together with
                                    protocol-related information, like
                                    addresses. It shall comply with the
                                    provisions defined in Table 6.5.3.58-1.
                                  type: object
                                  required:
                                    - layerProtocol
                                    - ipOverEthernet
                                  properties:
                                    layerProtocol:
                                      description: >
                                        The identifier of layer(s) and
                                        protocol(s) associated to the network
                                        address information. Permitted values:
                                        IP_OVER_ETHERNET See note.
                                      type: string
                                      enum:
                                        - IP_OVER_ETHERNET
                                    ipOverEthernet:
                                      description: >
                                        This type represents information about a
                                        network address that has been assigned. 
                                        It shall comply with the provisions
                                        defined in Table 6.5.3.18-1.
                                      type: object
                                      required:
                                        - macAddress
                                        - ipAddresses
                                        - subnetId
                                        - addresses
                                        - addressRange
                                      properties:
                                        macAddress:
                                          description: >
                                            A MAC address. Representation: string
                                            that consists of groups of two
                                            hexadecimal digits, separated by hyphens
                                            or colons.
                                          type: string
                                          format: MAC
                                        ipAddresses:
                                          description: >
                                            Addresses assigned to the CP instance.
                                            Each entry represents IP addresses
                                            assigned by fixed or dynamic IP address
                                            assignment per subnet.
                                          type: array
                                          items:
                                            type: object
                                            required:
                                              - type
                                            properties:
                                              type:
                                                description: >
                                                  The type of the IP addresses. Permitted
                                                  values: IPV4, IPV6.
                                                type: string
                                                enum:
                                                  - IPV4
                                                  - IPV6
                                              addresses:
                                                description: >
                                                  Fixed addresses assigned (from the
                                                  subnet defined by "subnetId" if
                                                  provided).
                                                type: array
                                                items:
                                                  description: >
                                                    An IPV4 or IPV6 address. Representation:
                                                    In case of an IPV4 address, string that
                                                    consists of four decimal integers
                                                    separated by dots, each integer ranging
                                                    from 0 to 255. In case of an IPV6
                                                    address, string that  consists of groups
                                                    of zero to four hexadecimal digits,
                                                    separated by colons.
                                                  type: string
                                                  format: IP
                                              isDynamic:
                                                description: >
                                                  Indicates whether this set of addresses
                                                  was assigned dynamically (true) or based
                                                  on address information provided as input
                                                  from the API consumer (false). Shall be
                                                  present if "addresses" is present and
                                                  shall be absent otherwise.
                                                type: boolean
                                              addressRange:
                                                description: >
                                                  An IP address range used, e.g., in case
                                                  of egress connections. Exactly one of
                                                  "addresses" or "addressRange" shall be
                                                  present.
                                                type: object
                                                required:
                                                  - minAddress
                                                  - maxAddress
                                                properties:
                                                  minAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                                  maxAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                              subnetId:
                                                description: >
                                                  An identifier maintained by the VIM or
                                                  other resource provider. It is expected
                                                  to be unique within the VIM instance.
                                                type: string
                                        type:
                                          description: |
                                            The type of the IP addresses
                                          type: string
                                          enum:
                                            - PV4
                                            - PV6
                                        addresses:
                                          description: >
                                            An IPV4 or IPV6 address. Representation:
                                            In case of an IPV4 address, string that
                                            consists of four decimal integers
                                            separated by dots, each integer ranging
                                            from 0 to 255. In case of an IPV6
                                            address, string that  consists of groups
                                            of zero to four hexadecimal digits,
                                            separated by colons.
                                          type: string
                                          format: IP
                                        isDynamic:
                                          description: >
                                            Indicates whether this set of addresses
                                            was assigned dynamically (true) or based
                                            on address information provided as input
                                            from the API consumer (false). Shall be
                                            present if "addresses" is present and
                                            shall be absent otherwise.
                                          type: boolean
                                        addressRange:
                                          description: >
                                            An IP address range used, e.g. in case
                                            of egress connections. See note.
                                          type: object
                                          required:
                                            - minAddress
                                            - maxAddress
                                          properties:
                                            minAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                            maxAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                        minAddress:
                                          description: >
                                            An IPV4 or IPV6 address. Representation:
                                            In case of an IPV4 address, string that
                                            consists of four decimal integers
                                            separated by dots, each integer ranging
                                            from 0 to 255. In case of an IPV6
                                            address, string that  consists of groups
                                            of zero to four hexadecimal digits,
                                            separated by colons.
                                          type: string
                                          format: IP
                                        maxAddress:
                                          description: >
                                            An IPV4 or IPV6 address. Representation:
                                            In case of an IPV4 address, string that
                                            consists of four decimal integers
                                            separated by dots, each integer ranging
                                            from 0 to 255. In case of an IPV6
                                            address, string that  consists of groups
                                            of zero to four hexadecimal digits,
                                            separated by colons.
                                          type: string
                                          format: IP
                                        subnetId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                              extLinkPortId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                        extVirtualLinkInfo:
                          description: >
                            Information about the external VLs the VNF instance
                            is connected to.
                          type: array
                          items:
                            type: object
                            required:
                              - id
                              - resourceHandle
                            properties:
                              id:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceHandle:
                                required:
                                  - vimConnectionId
                                  - resourceId
                                type: object
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance. Information about
                                  the resource is available from the VIM.
                                properties:
                                  vimConnectionId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceProviderId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                                  vimLevelResourceType:
                                    description: >
                                      Type of the resource in the scope of the
                                      VIM or the resource provider.
                                    type: string
                              extLinkPorts:
                                description: |
                                  Link ports of this VL.
                                type: array
                                items:
                                  description: >
                                    This type represents information about a
                                    link port of an external VL, i.e. a port
                                    providing connectivity for the VNF to an NS
                                    VL. 
                                  type: object
                                  required:
                                    - id
                                    - resourceHandle
                                  properties:
                                    id:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    resourceHandle:
                                      required:
                                        - vimConnectionId
                                        - resourceId
                                      type: object
                                      description: >
                                        This type represents the information
                                        that allows addressing a virtualised
                                        resource that is used by a VNF instance.
                                        Information about the resource is
                                        available from the VIM.
                                      properties:
                                        vimConnectionId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceProviderId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                                        vimLevelResourceType:
                                          description: >
                                            Type of the resource in the scope of the
                                            VIM or the resource provider.
                                          type: string
                                    cpInstanceId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                        extManagedVirtualLinkInfo:
                          description: >
                            External virtual links the VNF instance is connected
                            to.
                          type: array
                          items:
                            type: object
                            required:
                              - id
                              - vnfVirtualLinkDescId
                            properties:
                              id:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              vnfVirtualLinkDescId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              networkResource:
                                required:
                                  - vimConnectionId
                                  - resourceId
                                type: object
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance. Information about
                                  the resource is available from the VIM.
                                properties:
                                  vimConnectionId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceProviderId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                                  vimLevelResourceType:
                                    description: >
                                      Type of the resource in the scope of the
                                      VIM or the resource provider.
                                    type: string
                              vnfLinkPorts:
                                description: |
                                  Link ports of this VL.
                                type: array
                                items:
                                  type: object
                                  required:
                                    - id
                                    - resourceHandle
                                  properties:
                                    id:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                                    resourceHandle:
                                      required:
                                        - vimConnectionId
                                        - resourceId
                                      type: object
                                      description: >
                                        This type represents the information
                                        that allows addressing a virtualised
                                        resource that is used by a VNF instance.
                                        Information about the resource is
                                        available from the VIM.
                                      properties:
                                        vimConnectionId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceProviderId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                                        vimLevelResourceType:
                                          description: >
                                            Type of the resource in the scope of the
                                            VIM or the resource provider.
                                          type: string
                                    cpInstanceId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                        monitoringParameters:
                          description: |
                            Active monitoring parameters.
                          type: array
                          items:
                            type: object
                            required:
                              - id
                              - value
                              - timeStamp
                            properties:
                              id:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              name:
                                description: >
                                  Human readable name of the monitoring
                                  parameter, as defined in the VNFD.
                                type: string
                              value:
                                description: >
                                  Value of the monitoring parameter known to the
                                  VNFM (e.g. obtained for auto-scaling
                                  purposes). The type of the "value" attribute
                                  (i.e. scalar, structure (Object in JSON), or
                                  array (of scalars, arrays or
                                  structures/Objects)) is assumed to be defined
                                  in an external measurement specification.
                                type: object
                              timeStamp:
                                description: >
                                  Represents the point in time when the
                                  measurement has been performed, as known to
                                  the VNFM. Should be formatted according to ETF
                                  RFC 3339.
                                type: string
                        localizationLanguage:
                          description: >
                            Information about localization language of the VNF
                            (includes e.g. strings in the VNFD). The
                            localization languages supported by a VNF can be
                            declared in the VNFD, and localization language
                            selection can take place at instantiation time. The
                            value shall comply with the format defined in IETF
                            RFC 5646.
                          type: string
                        vnfcResourceInfo:
                          description: >
                            Information about the virtualised compute and
                            storage resources used by the VNFCs of the VNF
                            instance.
                          type: array
                          items:
                            description: >
                              This type represents the information on
                              virtualised compute and storage resources used by
                              a VNFC in a VNF instance.
                            type: object
                            required:
                              - id
                              - vduId
                              - computeResource
                            properties:
                              id:
                                description: >
                                  An identifier that is unique for the
                                  respective type within a VNF instance, but may
                                  not be globally unique.
                                type: string
                              vduId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              computeResource:
                                required:
                                  - vimConnectionId
                                  - resourceId
                                type: object
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance. Information about
                                  the resource is available from the VIM.
                                properties:
                                  vimConnectionId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceProviderId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                                  vimLevelResourceType:
                                    description: >
                                      Type of the resource in the scope of the
                                      VIM or the resource provider.
                                    type: string
                              storageResourceIds:
                                description: >
                                  References to the VirtualStorage resources.
                                  The value refers to a
                                  VirtualStorageResourceInfo item in the
                                  VnfInstance.
                                type: array
                                items:
                                  description: >
                                    An identifier with the intention of being
                                    globally unique.
                                  type: string
                              reservationId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              vnfcCpInfo:
                                description: >
                                  CPs of the VNFC instance. Shall be present
                                  when that particular CP of the VNFC instance
                                  is associated to an external CP of the VNF
                                  instance. May be present otherwise.
                                type: array
                                items:
                                  type: object
                                  required:
                                    - id
                                    - cpdId
                                  properties:
                                    id:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                                    cpdId:
                                      description: >
                                        Identifier of the VNF Virtual Link
                                        Descriptor (VLD) in the VNFD.
                                      type: string
                                    vnfExtCpId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                                    cpProtocolInfo:
                                      description: >
                                        Network protocol information for this
                                        CP.
                                      type: array
                                      items:
                                        description: >
                                          This type describes the protocol
                                          layer(s) that a CP or SAP uses together
                                          with protocol-related information, like
                                          addresses. It shall comply with the
                                          provisions defined in Table 6.5.3.58-1.
                                        type: object
                                        required:
                                          - layerProtocol
                                          - ipOverEthernet
                                        properties:
                                          layerProtocol:
                                            description: >
                                              The identifier of layer(s) and
                                              protocol(s) associated to the network
                                              address information. Permitted values:
                                              IP_OVER_ETHERNET See note.
                                            type: string
                                            enum:
                                              - IP_OVER_ETHERNET
                                          ipOverEthernet:
                                            description: >
                                              This type represents information about a
                                              network address that has been assigned. 
                                              It shall comply with the provisions
                                              defined in Table 6.5.3.18-1.
                                            type: object
                                            required:
                                              - macAddress
                                              - ipAddresses
                                              - subnetId
                                              - addresses
                                              - addressRange
                                            properties:
                                              macAddress:
                                                description: >
                                                  A MAC address. Representation: string
                                                  that consists of groups of two
                                                  hexadecimal digits, separated by hyphens
                                                  or colons.
                                                type: string
                                                format: MAC
                                              ipAddresses:
                                                description: >
                                                  Addresses assigned to the CP instance.
                                                  Each entry represents IP addresses
                                                  assigned by fixed or dynamic IP address
                                                  assignment per subnet.
                                                type: array
                                                items:
                                                  type: object
                                                  required:
                                                    - type
                                                  properties:
                                                    type:
                                                      description: >
                                                        The type of the IP addresses. Permitted
                                                        values: IPV4, IPV6.
                                                      type: string
                                                      enum:
                                                        - IPV4
                                                        - IPV6
                                                    addresses:
                                                      description: >
                                                        Fixed addresses assigned (from the
                                                        subnet defined by "subnetId" if
                                                        provided).
                                                      type: array
                                                      items:
                                                        description: >
                                                          An IPV4 or IPV6 address. Representation:
                                                          In case of an IPV4 address, string that
                                                          consists of four decimal integers
                                                          separated by dots, each integer ranging
                                                          from 0 to 255. In case of an IPV6
                                                          address, string that  consists of groups
                                                          of zero to four hexadecimal digits,
                                                          separated by colons.
                                                        type: string
                                                        format: IP
                                                    isDynamic:
                                                      description: >
                                                        Indicates whether this set of addresses
                                                        was assigned dynamically (true) or based
                                                        on address information provided as input
                                                        from the API consumer (false). Shall be
                                                        present if "addresses" is present and
                                                        shall be absent otherwise.
                                                      type: boolean
                                                    addressRange:
                                                      description: >
                                                        An IP address range used, e.g., in case
                                                        of egress connections. Exactly one of
                                                        "addresses" or "addressRange" shall be
                                                        present.
                                                      type: object
                                                      required:
                                                        - minAddress
                                                        - maxAddress
                                                      properties:
                                                        minAddress:
                                                          description: >
                                                            An IPV4 or IPV6 address. Representation:
                                                            In case of an IPV4 address, string that
                                                            consists of four decimal integers
                                                            separated by dots, each integer ranging
                                                            from 0 to 255. In case of an IPV6
                                                            address, string that  consists of groups
                                                            of zero to four hexadecimal digits,
                                                            separated by colons.
                                                          type: string
                                                          format: IP
                                                        maxAddress:
                                                          description: >
                                                            An IPV4 or IPV6 address. Representation:
                                                            In case of an IPV4 address, string that
                                                            consists of four decimal integers
                                                            separated by dots, each integer ranging
                                                            from 0 to 255. In case of an IPV6
                                                            address, string that  consists of groups
                                                            of zero to four hexadecimal digits,
                                                            separated by colons.
                                                          type: string
                                                          format: IP
                                                    subnetId:
                                                      description: >
                                                        An identifier maintained by the VIM or
                                                        other resource provider. It is expected
                                                        to be unique within the VIM instance.
                                                      type: string
                                              type:
                                                description: |
                                                  The type of the IP addresses
                                                type: string
                                                enum:
                                                  - PV4
                                                  - PV6
                                              addresses:
                                                description: >
                                                  An IPV4 or IPV6 address. Representation:
                                                  In case of an IPV4 address, string that
                                                  consists of four decimal integers
                                                  separated by dots, each integer ranging
                                                  from 0 to 255. In case of an IPV6
                                                  address, string that  consists of groups
                                                  of zero to four hexadecimal digits,
                                                  separated by colons.
                                                type: string
                                                format: IP
                                              isDynamic:
                                                description: >
                                                  Indicates whether this set of addresses
                                                  was assigned dynamically (true) or based
                                                  on address information provided as input
                                                  from the API consumer (false). Shall be
                                                  present if "addresses" is present and
                                                  shall be absent otherwise.
                                                type: boolean
                                              addressRange:
                                                description: >
                                                  An IP address range used, e.g. in case
                                                  of egress connections. See note.
                                                type: object
                                                required:
                                                  - minAddress
                                                  - maxAddress
                                                properties:
                                                  minAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                                  maxAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                              minAddress:
                                                description: >
                                                  An IPV4 or IPV6 address. Representation:
                                                  In case of an IPV4 address, string that
                                                  consists of four decimal integers
                                                  separated by dots, each integer ranging
                                                  from 0 to 255. In case of an IPV6
                                                  address, string that  consists of groups
                                                  of zero to four hexadecimal digits,
                                                  separated by colons.
                                                type: string
                                                format: IP
                                              maxAddress:
                                                description: >
                                                  An IPV4 or IPV6 address. Representation:
                                                  In case of an IPV4 address, string that
                                                  consists of four decimal integers
                                                  separated by dots, each integer ranging
                                                  from 0 to 255. In case of an IPV6
                                                  address, string that  consists of groups
                                                  of zero to four hexadecimal digits,
                                                  separated by colons.
                                                type: string
                                                format: IP
                                              subnetId:
                                                description: >
                                                  An identifier maintained by the VIM or
                                                  other resource provider. It is expected
                                                  to be unique within the VIM instance.
                                                type: string
                                    vnfLinkPortId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                              metadata:
                                description: >
                                  This type represents a list of key-value
                                  pairs. The order of the pairs in the list is
                                  not significant. In JSON, a set of key- value
                                  pairs is represented as an object. It shall
                                  comply with the provisions  defined in clause
                                  4 of IETF RFC 7159. 
                                type: object
                        virtualLinkResourceInfo:
                          description: >
                            Information about the virtualised network resources
                            used by the VLs of the VNF instance.
                          type: array
                          items:
                            description: >
                              This type represents the information that allows
                              addressing a virtualised resource that is used by
                              an internal VL instance in a VNF instance.
                            type: object
                            required:
                              - id
                              - vnfVirtualLinkDescId
                              - networkResource
                            properties:
                              id:
                                description: >
                                  An identifier that is unique for the
                                  respective type within a VNF instance, but may
                                  not be globally unique.
                                type: string
                              vnfVirtualLinkDescId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              networkResource:
                                required:
                                  - vimConnectionId
                                  - resourceId
                                type: object
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance. Information about
                                  the resource is available from the VIM.
                                properties:
                                  vimConnectionId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceProviderId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                                  vimLevelResourceType:
                                    description: >
                                      Type of the resource in the scope of the
                                      VIM or the resource provider.
                                    type: string
                              reservationId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              vnfLinkPorts:
                                description: >
                                  Links ports of this VL. Shall be present when
                                  the linkPort is used for external connectivity
                                  by the VNF (refer to VnfLinkPortInfo). May be
                                  present otherwise.
                                type: array
                                items:
                                  type: object
                                  required:
                                    - id
                                    - resourceHandle
                                  properties:
                                    id:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                                    resourceHandle:
                                      required:
                                        - vimConnectionId
                                        - resourceId
                                      type: object
                                      description: >
                                        This type represents the information
                                        that allows addressing a virtualised
                                        resource that is used by a VNF instance.
                                        Information about the resource is
                                        available from the VIM.
                                      properties:
                                        vimConnectionId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceProviderId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                                        vimLevelResourceType:
                                          description: >
                                            Type of the resource in the scope of the
                                            VIM or the resource provider.
                                          type: string
                                    cpInstanceId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                              metadata:
                                description: >
                                  This type represents a list of key-value
                                  pairs. The order of the pairs in the list is
                                  not significant. In JSON, a set of key- value
                                  pairs is represented as an object. It shall
                                  comply with the provisions  defined in clause
                                  4 of IETF RFC 7159. 
                                type: object
                        virtualStorageResourceInfo:
                          description: >
                            Information on the virtualised storage resource(s)
                            used as storage for the VNF instance.
                          type: array
                          items:
                            description: >
                              This type represents the information that allows
                              addressing a virtualised resource that is used by
                              a VNF instance.
                            type: object
                            required:
                              - id
                              - virtualStorageDescId
                              - storageResource
                            properties:
                              id:
                                description: >
                                  An identifier that is unique for the
                                  respective type within a VNF instance, but may
                                  not be globally unique.
                                type: string
                              virtualStorageDescId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              storageResource:
                                required:
                                  - vimConnectionId
                                  - resourceId
                                type: object
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance. Information about
                                  the resource is available from the VIM.
                                properties:
                                  vimConnectionId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceProviderId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                                  vimLevelResourceType:
                                    description: >
                                      Type of the resource in the scope of the
                                      VIM or the resource provider.
                                    type: string
                              reservationId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              metadata:
                                description: >
                                  This type represents a list of key-value
                                  pairs. The order of the pairs in the list is
                                  not significant. In JSON, a set of key- value
                                  pairs is represented as an object. It shall
                                  comply with the provisions  defined in clause
                                  4 of IETF RFC 7159. 
                                type: object
                    metadata:
                      description: >
                        This type represents a list of key-value pairs. The
                        order of the pairs in the list is not significant. In
                        JSON, a set of key- value pairs is represented as an
                        object. It shall comply with the provisions  defined in
                        clause 4 of IETF RFC 7159. 
                      type: object
                    extensions:
                      description: >
                        This type represents a list of key-value pairs. The
                        order of the pairs in the list is not significant. In
                        JSON, a set of key- value pairs is represented as an
                        object. It shall comply with the provisions  defined in
                        clause 4 of IETF RFC 7159. 
                      type: object
              pnfInfo:
                description: |
                  Information on the PNF(s) that are part of the NS instance.
                type: array
                items:
                  description: >
                    This type represents the information about a PNF that is
                    part of an NS instance.  It shall comply with the provisions
                    defined in Table 6.5.3.13-1.
                  type: object
                  required:
                    - pnfId
                    - pnfdId
                    - pnfdInfoId
                    - pnfProfileId
                  properties:
                    pnfId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    pnfName:
                      description: |
                        Name of the PNF.
                      type: string
                    pnfdId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    pnfdInfoId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    pnfProfileId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
                    cpInfo:
                      description: >
                        This type represents the information about the external
                        CP of the PNF.  It shall comply with the provisions
                        defined in Table 6.5.3.17-1.
                      type: object
                      required:
                        - cpInstanceId
                        - cpdId
                      properties:
                        cpInstanceId:
                          description: |
                            Identifier of the CP in the scope of the PNF.
                          type: string
                        cpdId:
                          description: >
                            An identifier that is unique within a NS descriptor.
                            Representation: string of variable length.
                          type: string
                        cpProtocolData:
                          description: >
                            Parameters for configuring the network protocols on
                            the CP.
                          type: array
                          items:
                            description: |
                              This type represents network protocol data. 
                            type: object
                            required:
                              - layerProtocol
                            properties:
                              layerProtocol:
                                description: >
                                  Identifier of layer(s) and protocol(s).
                                  Permitted values: IP_OVER_ETHERNET.
                                type: string
                                enum:
                                  - IP_OVER_ETHERNET
                              ipOverEthernet:
                                description: >
                                  This type represents network address data for
                                  IP over Ethernet.
                                type: object
                                properties:
                                  macAddress:
                                    description: >
                                      A MAC address. Representation: string that
                                      consists of groups of two hexadecimal
                                      digits, separated by hyphens or colons.
                                    type: string
                                    format: MAC
                                  ipAddresses:
                                    description: >
                                      List of IP addresses to assign to the CP
                                      instance. Each entry represents IP address
                                      data for fixed or dynamic IP address
                                      assignment per subnet. If this attribute
                                      is not present, no IP address shall be
                                      assigned.
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - type
                                      properties:
                                        type:
                                          description: >
                                            The type of the IP addresses. Permitted
                                            values: IPV4, IPV6.
                                          type: string
                                          enum:
                                            - IPV4
                                            - IPV6
                                        fixedAddresses:
                                          description: >
                                            Fixed addresses to assign (from the
                                            subnet defined by "subnetId" if
                                            provided). Exactly one of
                                            "fixedAddresses", "numDynamicAddresses"
                                            or "ipAddressRange" shall be present.
                                          type: array
                                          items:
                                            description: >
                                              An IPV4 or IPV6 address. Representation:
                                              In case of an IPV4 address, string that
                                              consists of four decimal integers
                                              separated by dots, each integer ranging
                                              from 0 to 255. In case of an IPV6
                                              address, string that  consists of groups
                                              of zero to four hexadecimal digits,
                                              separated by colons.
                                            type: string
                                            format: IP
                                        numDynamicAddresses:
                                          description: >
                                            Number of dynamic addresses to assign
                                            (from the subnet defined by "subnetId"
                                            if provided). Exactly one of
                                            "fixedAddresses", "numDynamicAddresses"
                                            or "ipAddressRange" shall be present.
                                          type: integer
                                        addressRange:
                                          description: >
                                            An IP address range to be used, e.g. in
                                            case of egress connections. In case this
                                            attribute is present, IP addresses from
                                            the range will be used.
                                          type: object
                                          required:
                                            - minAddress
                                            - maxAddress
                                          properties:
                                            minAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                            maxAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                        subnetId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
              virtualLinkInfo:
                description: >
                  Information on the VL(s) of the NS instance. This attribute
                  shall be present if the nsState attribute value is
                  INSTANTIATED and if the NS instance has specified
                  connectivity.
                type: array
                items:
                  description: >
                    This type specifies the information about an NS VL
                    instance.  It shall comply with the provisions defined in
                    Table 6.5.3.53-1
                  type: object
                  required:
                    - id
                    - nsVirtualLinkDescId
                  properties:
                    id:
                      description: >
                        An identifier that is unique with respect to a NS. 
                        Representation: string of variable length.
                      type: string
                    nsVirtualLinkDescId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
                    resourceHandle:
                      description: >
                        Identifier(s) of the virtualised network resource(s)
                        realizing the VL instance. See note.
                      type: array
                      items:
                        required:
                          - vimConnectionId
                          - resourceId
                        type: object
                        description: >
                          This type represents the information that allows
                          addressing a virtualised resource that is used by a
                          VNF instance. Information about the resource is
                          available from the VIM.
                        properties:
                          vimConnectionId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          resourceProviderId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          resourceId:
                            description: >
                              An identifier maintained by the VIM or other
                              resource provider. It is expected to be unique
                              within the VIM instance.
                            type: string
                          vimLevelResourceType:
                            description: >
                              Type of the resource in the scope of the VIM or
                              the resource provider.
                            type: string
                    linkPort:
                      description: >
                        Link ports of the VL instance. Cardinality of zero
                        indicates that no port has yet been created for the VL
                        instance.
                      type: array
                      items:
                        description: >
                          This type represents information about a link port of
                          a VL instance.  It shall comply with the provisions
                          defined in Table 6.5.3.55-1.
                        type: object
                        required:
                          - id
                          - resourceHandle
                        properties:
                          id:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          resourceHandle:
                            required:
                              - vimConnectionId
                              - resourceId
                            type: object
                            description: >
                              This type represents the information that allows
                              addressing a virtualised resource that is used by
                              a VNF instance. Information about the resource is
                              available from the VIM.
                            properties:
                              vimConnectionId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceProviderId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceId:
                                description: >
                                  An identifier maintained by the VIM or other
                                  resource provider. It is expected to be unique
                                  within the VIM instance.
                                type: string
                              vimLevelResourceType:
                                description: >
                                  Type of the resource in the scope of the VIM
                                  or the resource provider.
                                type: string
                          nsCpHandle:
                            description: >
                              Identifier of the CP/SAP instance to be connected
                              to this link port. The value refers to a
                              vnfExtCpInfo item in the VnfInstance, or a
                              pnfExtCpInfo item in the PnfInfo, or a sapInfo
                              item in the NS instance. There shall be at most
                              one link port associated with any connection point
                              instance.
                            type: array
                            items:
                              description: >
                                This type represents an identifier of the CP or
                                SAP instance.  It shall comply with the
                                provisions defined in Table 6.5.3.56-1.
                              type: object
                              properties:
                                vnfInstanceId:
                                  description: >
                                    An identifier with the intention of being
                                    globally unique.
                                  type: string
                                vnfExtCpInstanceId:
                                  description: >
                                    An identifier that is unique for the
                                    respective type within a VNF instance, but
                                    may not be globally unique.
                                  type: string
                                pnfInfoId:
                                  description: >
                                    An identifier with the intention of being
                                    globally unique.
                                  type: string
                                pnfExtCpInstanceId:
                                  description: >
                                    Identifier of the CP in the scope of the
                                    PNF.
                                  type: string
                                nsInstanceId:
                                  description: >
                                    An identifier with the intention of being
                                    globally unique.
                                  type: string
                                nsSapInstanceId:
                                  description: >
                                    An identifier that is unique with respect to
                                    a NS.  Representation: string of variable
                                    length.
                                  type: string
              vnffgInfo:
                description: |
                  Information on the VNFFG(s) of the NS instance.
                type: array
                items:
                  description: |
                    Information on the VNFFG(s) of the NS instance.
                  type: object
                  required:
                    - id
                    - vnffgdId
                    - vnfInstanceId
                    - pnfInfoId
                  properties:
                    id:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    vnffgdId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
                    vnfInstanceId:
                      description: >
                        Identifier(s) of the constituent VNF instance(s) of this
                        VNFFG instance.
                      type: array
                      items:
                        description: >
                          An identifier with the intention of being globally
                          unique.
                        type: string
                    pnfdInfoId:
                      description: >
                        Identifier(s) of the constituent PNF instance(s) of this
                        VNFFG instance.
                      type: array
                      items:
                        description: >
                          An identifier with the intention of being globally
                          unique.
                        type: string
                    nsVirtualLinkInfoId:
                      description: >
                        Identifier(s) of the constituent VL instance(s) of this
                        VNFFG instance.
                      type: array
                      items:
                        description: >
                          An identifier that is unique with respect to a NS. 
                          Representation: string of variable length.
                        type: string
                    nsCpHandle:
                      description: >
                        Identifiers of the CP instances attached to the
                        constituent VNFs and PNFs or the SAP instances of the
                        VNFFG. See note.
                      type: array
                      items:
                        description: >
                          This type represents an identifier of the CP or SAP
                          instance.  It shall comply with the provisions defined
                          in Table 6.5.3.56-1.
                        type: object
                        properties:
                          vnfInstanceId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          vnfExtCpInstanceId:
                            description: >
                              An identifier that is unique for the respective
                              type within a VNF instance, but may not be
                              globally unique.
                            type: string
                          pnfInfoId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          pnfExtCpInstanceId:
                            description: |
                              Identifier of the CP in the scope of the PNF.
                            type: string
                          nsInstanceId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          nsSapInstanceId:
                            description: >
                              An identifier that is unique with respect to a
                              NS.  Representation: string of variable length.
                            type: string
              sapInfo:
                description: |
                  Information on the SAP(s) of the NS instance.
                type: array
                items:
                  description: >
                    This type represents an SAP instance. It shall comply with
                    the provisions defined in Table 6.5.3.67-1.
                  type: object
                  required:
                    - id
                    - sapdId
                    - sapName
                    - sapProtocolInfo
                  properties:
                    id:
                      description: >
                        An identifier that is unique with respect to a NS. 
                        Representation: string of variable length.
                      type: string
                    sapdId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
                    sapName:
                      description: |
                        Human readable name for the SAP instance.
                      type: string
                    description:
                      description: |
                        Human readable description for the SAP instance.
                      type: string
                    sapProtocolInfo:
                      description: |
                        Network protocol information for this SAP.
                      type: array
                      items:
                        description: >
                          This type describes the protocol layer(s) that a CP or
                          SAP uses together with protocol-related information,
                          like addresses. It shall comply with the provisions
                          defined in Table 6.5.3.58-1.
                        type: object
                        required:
                          - layerProtocol
                          - ipOverEthernet
                        properties:
                          layerProtocol:
                            description: >
                              The identifier of layer(s) and protocol(s)
                              associated to the network address information.
                              Permitted values: IP_OVER_ETHERNET See note.
                            type: string
                            enum:
                              - IP_OVER_ETHERNET
                          ipOverEthernet:
                            description: >
                              This type represents information about a network
                              address that has been assigned.  It shall comply
                              with the provisions defined in Table 6.5.3.18-1.
                            type: object
                            required:
                              - macAddress
                              - ipAddresses
                              - subnetId
                              - addresses
                              - addressRange
                            properties:
                              macAddress:
                                description: >
                                  A MAC address. Representation: string that
                                  consists of groups of two hexadecimal digits,
                                  separated by hyphens or colons.
                                type: string
                                format: MAC
                              ipAddresses:
                                description: >
                                  Addresses assigned to the CP instance. Each
                                  entry represents IP addresses assigned by
                                  fixed or dynamic IP address assignment per
                                  subnet.
                                type: array
                                items:
                                  type: object
                                  required:
                                    - type
                                  properties:
                                    type:
                                      description: >
                                        The type of the IP addresses. Permitted
                                        values: IPV4, IPV6.
                                      type: string
                                      enum:
                                        - IPV4
                                        - IPV6
                                    addresses:
                                      description: >
                                        Fixed addresses assigned (from the
                                        subnet defined by "subnetId" if
                                        provided).
                                      type: array
                                      items:
                                        description: >
                                          An IPV4 or IPV6 address. Representation:
                                          In case of an IPV4 address, string that
                                          consists of four decimal integers
                                          separated by dots, each integer ranging
                                          from 0 to 255. In case of an IPV6
                                          address, string that  consists of groups
                                          of zero to four hexadecimal digits,
                                          separated by colons.
                                        type: string
                                        format: IP
                                    isDynamic:
                                      description: >
                                        Indicates whether this set of addresses
                                        was assigned dynamically (true) or based
                                        on address information provided as input
                                        from the API consumer (false). Shall be
                                        present if "addresses" is present and
                                        shall be absent otherwise.
                                      type: boolean
                                    addressRange:
                                      description: >
                                        An IP address range used, e.g., in case
                                        of egress connections. Exactly one of
                                        "addresses" or "addressRange" shall be
                                        present.
                                      type: object
                                      required:
                                        - minAddress
                                        - maxAddress
                                      properties:
                                        minAddress:
                                          description: >
                                            An IPV4 or IPV6 address. Representation:
                                            In case of an IPV4 address, string that
                                            consists of four decimal integers
                                            separated by dots, each integer ranging
                                            from 0 to 255. In case of an IPV6
                                            address, string that  consists of groups
                                            of zero to four hexadecimal digits,
                                            separated by colons.
                                          type: string
                                          format: IP
                                        maxAddress:
                                          description: >
                                            An IPV4 or IPV6 address. Representation:
                                            In case of an IPV4 address, string that
                                            consists of four decimal integers
                                            separated by dots, each integer ranging
                                            from 0 to 255. In case of an IPV6
                                            address, string that  consists of groups
                                            of zero to four hexadecimal digits,
                                            separated by colons.
                                          type: string
                                          format: IP
                                    subnetId:
                                      description: >
                                        An identifier maintained by the VIM or
                                        other resource provider. It is expected
                                        to be unique within the VIM instance.
                                      type: string
                              type:
                                description: |
                                  The type of the IP addresses
                                type: string
                                enum:
                                  - PV4
                                  - PV6
                              addresses:
                                description: >
                                  An IPV4 or IPV6 address. Representation: In
                                  case of an IPV4 address, string that consists
                                  of four decimal integers separated by dots,
                                  each integer ranging from 0 to 255. In case of
                                  an IPV6 address, string that  consists of
                                  groups of zero to four hexadecimal digits,
                                  separated by colons.
                                type: string
                                format: IP
                              isDynamic:
                                description: >
                                  Indicates whether this set of addresses was
                                  assigned dynamically (true) or based on
                                  address information provided as input from the
                                  API consumer (false). Shall be present if
                                  "addresses" is present and shall be absent
                                  otherwise.
                                type: boolean
                              addressRange:
                                description: >
                                  An IP address range used, e.g. in case of
                                  egress connections. See note.
                                type: object
                                required:
                                  - minAddress
                                  - maxAddress
                                properties:
                                  minAddress:
                                    description: >
                                      An IPV4 or IPV6 address. Representation:
                                      In case of an IPV4 address, string that
                                      consists of four decimal integers
                                      separated by dots, each integer ranging
                                      from 0 to 255. In case of an IPV6 address,
                                      string that  consists of groups of zero to
                                      four hexadecimal digits, separated by
                                      colons.
                                    type: string
                                    format: IP
                                  maxAddress:
                                    description: >
                                      An IPV4 or IPV6 address. Representation:
                                      In case of an IPV4 address, string that
                                      consists of four decimal integers
                                      separated by dots, each integer ranging
                                      from 0 to 255. In case of an IPV6 address,
                                      string that  consists of groups of zero to
                                      four hexadecimal digits, separated by
                                      colons.
                                    type: string
                                    format: IP
                              minAddress:
                                description: >
                                  An IPV4 or IPV6 address. Representation: In
                                  case of an IPV4 address, string that consists
                                  of four decimal integers separated by dots,
                                  each integer ranging from 0 to 255. In case of
                                  an IPV6 address, string that  consists of
                                  groups of zero to four hexadecimal digits,
                                  separated by colons.
                                type: string
                                format: IP
                              maxAddress:
                                description: >
                                  An IPV4 or IPV6 address. Representation: In
                                  case of an IPV4 address, string that consists
                                  of four decimal integers separated by dots,
                                  each integer ranging from 0 to 255. In case of
                                  an IPV6 address, string that  consists of
                                  groups of zero to four hexadecimal digits,
                                  separated by colons.
                                type: string
                                format: IP
                              subnetId:
                                description: >
                                  An identifier maintained by the VIM or other
                                  resource provider. It is expected to be unique
                                  within the VIM instance.
                                type: string
              nestedNsInstanceId:
                description: |
                  Identifier of the nested NS(s) of the NS instance.
                type: array
                items:
                  description: |
                    An identifier with the intention of being globally unique.
                  type: string
              nsState:
                description: >
                  The state of the NS instance. Permitted values:
                  NOT_INSTANTIATED: The NS instance is terminated or not
                  instantiated. INSTANTIATED: The NS instance is instantiated.
                type: string
                enum:
                  - NOT_INSTANTIATED
                  - INSTANTIATED
              nsScaleStatus:
                description: >
                  Status of each NS scaling aspect declared in the applicable
                  DF, how "big" the NS instance has been scaled w.r.t. that
                  aspect. This attribute shall be present if the nsState
                  attribute value is INSTANTIATED.
                type: array
                items:
                  description: >
                    This type represents the target NS Scale level for each NS
                    scaling aspect of the current deployment flavor.
                  type: object
                  required:
                    - nsScalingAspectId
                    - nsScaleLevelId
                  properties:
                    nsScalingAspectId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
                    nsScaleLevelId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
              additionalAffinityOrAntiAffinityRule:
                description: >
                  Information on the additional affinity or anti-affinity rule
                  from NS instantiation operation. Shall not conflict with rules
                  already specified in the NSD.
                type: array
                items:
                  description: >
                    This type describes the additional affinity or anti-affinity
                    rule  applicable between the VNF instances to be
                    instantiated in the NS instantiation operation request or
                    between the VNF instances  to be instantiated in the NS
                    instantiation operation request and the existing VNF
                    instances..
                  type: object
                  required:
                    - affinityOrAntiAffiinty
                    - scope
                  properties:
                    vnfdId:
                      description: >
                        Reference to a VNFD. When the VNFD which is not used to
                        instantiate VNF, it presents all VNF instances of this
                        type as the subjects of the affinity or anti-affinity
                        rule. The VNF instance which the VNFD presents is not
                        necessary as a part of the NS to be instantiated.
                      type: array
                      items:
                        description: >
                          An identifier with the intention of being globally
                          unique.
                        type: string
                    vnfProfileId:
                      description: >
                        Reference to a vnfProfile defined in the NSD. At least
                        one VnfProfile which is used to instantiate VNF for the
                        NS to be instantiated as the subject of the affinity or
                        anti-affinity rule shall be present. When the VnfProfile
                        which is not used to instantiate VNF, it presents all
                        VNF instances of this type as the subjects of the
                        affinity or anti-affinity rule. The VNF instance which
                        the VnfProfile presents is not necessary as a part of
                        the NS to be instantiated.
                      type: array
                      items:
                        description: >
                          An identifier that is unique within a NS descriptor.
                          Representation: string of variable length.
                        type: string
                    vnfInstanceId:
                      description: >
                        Reference to the existing VNF instance as the subject of
                        the affinity or anti-affinity rule. The existing VNF
                        instance is not necessary as a part of the NS to be
                        instantiated.
                      type: array
                      items:
                        description: >
                          An identifier with the intention of being globally
                          unique.
                        type: string
                    affinityOrAntiAffiinty:
                      description: >
                        The type of the constraint. Permitted values: AFFINITY
                        ANTI_AFFINITY.
                      type: string
                      enum:
                        - AFFINITY
                        - ANTI_AFFINITY
                    scope:
                      description: >
                        Specifies the scope of the rule where the placement
                        constraint applies. Permitted values: NFVI_POP ZONE
                        ZONE_GROUP NFVI_NODE.
                      type: string
                      enum:
                        - NFVI_POP
                        - ZONE
                        - ZONE_GROUP
                        - NFVI_NODE
              _links:
                type: object
                description: Links to resources related to this resource.
                required:
                  - self
                properties:
                  self:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
                  nestedNsInstances:
                    description: |
                      Links to resources related to this notification.
                    type: array
                    items:
                      description: |
                        This type represents a link to a resource.
                      type: object
                      required:
                        - href
                      properties:
                        href:
                          description: |
                            URI of the referenced resource.
                          type: string
                          format: url
                  instantiate:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
                  terminate:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
                  update:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
                  scale:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
                  heal:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
        '400':
          description: >
            Bad Request

            Error: Invalid attribute-based filtering parameters. The response
            body shall contain a ProblemDetails structure, in which the "detail"
            attribute should convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '401':
          description: >
            Unauthorized If the request contains no access token even though one
            is required, or if the request contains an authorization token that
            is invalid (e.g. expired or revoked), the API producer should
            respond with this response. The details of the error shall be
            returned in the WWW-Authenticate HTTP header, as defined in IETF RFC
            6750 and IETF RFC 7235. The ProblemDetails structure may be
            provided.
          headers:
            Content-Type:
              type: string
              description: The MIME type of the body of the response.
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '403':
          description: >
            Forbidden If the API consumer is not allowed to perform a particular
            request to a particular resource, the API producer shall respond
            with this response code. The "ProblemDetails" structure shall be
            provided.  It should include in the "detail" attribute information
            about the source of the problem, and may indicate how to solve it.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '404':
          description: >
            Not Found Error: The API producer did not find a current
            representation for the target resource or is not willing to disclose
            that one exists. Specifically in case of this task resource, the 
            response code 404 shall also returned if the task is not supported
            for the NS instance represented by the parent resource, which means
            that the task resource consequently does not exist.  In this case,
            the response body shall be present, and shall contain a
            ProblemDetails structure, in which the "detail" attribute shall
            convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '405':
          description: >
            Method Not Allowed If a particular HTTP method is not supported for
            a particular resource, the API producer shall respond with this
            response code. The "ProblemDetails" structure may be omitted in that
            case.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '406':
          description: >
            Not Acceptable If the Accept HTTP header does not contain at least
            one name of a content type that is acceptable to the API producer,
            the API producer shall respond with this response code. The
            ProblemDetails structure may be omitted in that case.        
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '409':
          description: >
            Conflict

            The operation cannot be executed currently, due to a conflict with
            the state of the NS instance resource. Typically, this is due to the
            fact that the NS instance resource is in NOT-INSTANTIATED state, or
            that another lifecycle management operation is ongoing. The response
            body shall contain a ProblemDetails structure, in which the "detail"
            attribute should convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '500':
          description: >
            Internal Server Error If there is an application error not related
            to the client's input that cannot be easily mapped to any other HTTP
            response code ("catch all error"), the API producer shall respond
            withthis response code. The ProblemDetails structure shall be
            provided, and shall include in the "detail" attribute more
            information about the source of the problem.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '503':
          description: >
            Service Unavailable If the API producer encounters an internal
            overload situation of itself or of a system it relies on, it should
            respond with this response code, following the provisions in IETF
            RFC 7231 [13] for the use of the Retry-After HTTP header and for the
            alternative to refuse the connection. The "ProblemDetails" structure
            may be omitted.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
  '/ns_instances/{nsInstanceId}/terminate':
    parameters:
      - name: nsInstanceId
        description: |
          The identifier of the NS instance to be terminated.
        in: path
        type: string
        required: true
    post:
      summary: Terminate a NS instance.
      description: >
        Terminate NS task.   The POST method terminates a NS instance. This
        method can only be  used with a NS instance in the INSTANTIATED state.
        Terminating a NS instance does not delete the NS instance identifier, 
        but rather transitions the NS into the NOT_INSTANTIATED state. This
        method shall support the URI query parameters, request and  response
        data structures, and response codes, as specified in the Tables
        6.4.8.3.1-1 and 6.8.8.3.1-2.
      parameters:
        - name: Accept
          description: >
            Content-Types that are acceptable for the response. Reference: IETF
            RFC 7231
          in: header
          required: true
          type: string
        - name: Authorization
          description: |
            The authorization token for the request. Reference: IETF RFC 7235
          in: header
          required: false
          type: string
        - name: Content-Type
          description: |
            The MIME type of the body of the request. Reference: IETF RFC 7231
          in: header
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - TerminateNsRequest
            properties:
              TerminateNsRequest:
                description: >
                  This type represents a NS termination request.  It shall
                  comply with the provisions defined in Table 6.5.2.15-1.
                type: object
                properties:
                  terminationTime:
                    description: >
                      Date-time stamp.  Representation: String formatted
                      according to IETF RFC 3339.
                    type: string
                    format: date-time
            description: >
              The terminate NS request parameters, as defined in  clause
              6.5.2.14.
      responses:
        '202':
          description: >
            202 Accepted

            The request was accepted for processing, but the processing has not 
            been completed. 

            The response body shall be empty.

            The HTTP response shall include a "Location" HTTP header that
            contains the URI of the newly-created "NS lifecycle operation
            occurrence" resource corresponding to the operation.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            Location:
              description: The resource URI of the created NS instance
              type: string
              format: url
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              This type represents a response for Query NS operation.  It shall
              comply with the provisions defined in Table 6.5.2.10-1.
            type: object
            required:
              - id
              - nsInstanceName
              - nsInstanceDescription
              - nsdId
              - nsdInfoId
              - nsState
            properties:
              id:
                description: |
                  An identifier with the intention of being globally unique.
                type: string
              nsInstanceName:
                description: |
                  Human readable name of the NS instance.
                type: string
              nsInstanceDescription:
                description: |
                  Human readable description of the NS instance.
                type: string
              nsdId:
                description: |
                  An identifier with the intention of being globally unique.
                type: string
              nsdInfoId:
                description: |
                  An identifier with the intention of being globally unique.
                type: string
              flavourId:
                description: >
                  An identifier that is unique within a NS descriptor.
                  Representation: string of variable length.
                type: string
              vnfInstance:
                description: |
                  Information on constituent VNF(s) of the NS instance.
                type: array
                items:
                  description: |
                    This type represents a VNF instance.
                  type: object
                  required:
                    - id
                    - vnfdId
                    - vnfProvider
                    - vnfProductName
                    - vnfSoftwareVersion
                    - vnfdVersion
                    - vnfPkgId
                    - instantiationState
                  properties:
                    id:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    vnfInstanceName:
                      description: >
                        Name of the VNF instance. This attribute can be modified
                        with the PATCH method.
                      type: string
                    vnfInstanceDescription:
                      description: >
                        Human-readable description of the VNF instance. This
                        attribute can be modified with the PATCH method.
                      type: string
                    vnfdId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    vnfProvider:
                      description: >
                        Provider of the VNF and the VNFD. The value is copied
                        from the VNFD.
                      type: string
                    vnfProductName:
                      description: >
                        Name to identify the VNF Product. The value is copied
                        from the VNFD.
                      type: string
                    vnfSoftwareVersion:
                      description: |
                        A Version.
                      type: string
                    vnfdVersion:
                      description: |
                        A Version.
                      type: string
                    vnfPkgId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    vnfConfigurableProperties:
                      description: >
                        This type represents a list of key-value pairs. The
                        order of the pairs in the list is not significant. In
                        JSON, a set of key- value pairs is represented as an
                        object. It shall comply with the provisions  defined in
                        clause 4 of IETF RFC 7159. 
                      type: object
                    vimId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    instantiationState:
                      description: |
                        The instantiation state of the VNF.
                      type: string
                      enum:
                        - NOT_INSTANTIATED
                        - INSTANTIATED
                    instantiatedVnfInfo:
                      description: >
                        Information specific to an instantiated VNF instance.
                        This attribute shall be present if the instantiateState
                        attribute value is INSTANTIATED.
                      type: object
                      required:
                        - flavourId
                        - vnfState
                      properties:
                        flavourId:
                          description: >
                            Identifier of the VNF Virtual Link Descriptor (VLD)
                            in the VNFD.
                          type: string
                        vnfState:
                          type: string
                          enum:
                            - STARTED
                            - STOPPED
                        scaleStatus:
                          description: >
                            Scale status of the VNF, one entry per aspect.
                            Represents for every scaling aspect how "big" the
                            VNF has been scaled w.r.t. that aspect.
                          type: array
                          items:
                            required:
                              - aspectId
                              - scaleLevel
                            type: object
                            properties:
                              aspectId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              scaleLevel:
                                description: >
                                  Indicates the scale level. The minimum value
                                  shall be 0 and the maximum value shall be <=
                                  maxScaleLevel as described in the VNFD.
                                type: integer
                        extCpInfo:
                          description: >
                            Information about the external CPs exposed by the
                            VNF instance.
                          type: array
                          minItems: 1
                          items:
                            type: object
                            required:
                              - id
                              - cpdId
                            properties:
                              id:
                                description: >
                                  An identifier that is unique for the
                                  respective type within a VNF instance, but may
                                  not be globally unique.
                                type: string
                              cpdId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              cpProtocolInfo:
                                description: |
                                  Network protocol information for this CP.
                                type: array
                                items:
                                  description: >
                                    This type describes the protocol layer(s)
                                    that a CP or SAP uses together with
                                    protocol-related information, like
                                    addresses. It shall comply with the
                                    provisions defined in Table 6.5.3.58-1.
                                  type: object
                                  required:
                                    - layerProtocol
                                    - ipOverEthernet
                                  properties:
                                    layerProtocol:
                                      description: >
                                        The identifier of layer(s) and
                                        protocol(s) associated to the network
                                        address information. Permitted values:
                                        IP_OVER_ETHERNET See note.
                                      type: string
                                      enum:
                                        - IP_OVER_ETHERNET
                                    ipOverEthernet:
                                      description: >
                                        This type represents information about a
                                        network address that has been assigned. 
                                        It shall comply with the provisions
                                        defined in Table 6.5.3.18-1.
                                      type: object
                                      required:
                                        - macAddress
                                        - ipAddresses
                                        - subnetId
                                        - addresses
                                        - addressRange
                                      properties:
                                        macAddress:
                                          description: >
                                            A MAC address. Representation: string
                                            that consists of groups of two
                                            hexadecimal digits, separated by hyphens
                                            or colons.
                                          type: string
                                          format: MAC
                                        ipAddresses:
                                          description: >
                                            Addresses assigned to the CP instance.
                                            Each entry represents IP addresses
                                            assigned by fixed or dynamic IP address
                                            assignment per subnet.
                                          type: array
                                          items:
                                            type: object
                                            required:
                                              - type
                                            properties:
                                              type:
                                                description: >
                                                  The type of the IP addresses. Permitted
                                                  values: IPV4, IPV6.
                                                type: string
                                                enum:
                                                  - IPV4
                                                  - IPV6
                                              addresses:
                                                description: >
                                                  Fixed addresses assigned (from the
                                                  subnet defined by "subnetId" if
                                                  provided).
                                                type: array
                                                items:
                                                  description: >
                                                    An IPV4 or IPV6 address. Representation:
                                                    In case of an IPV4 address, string that
                                                    consists of four decimal integers
                                                    separated by dots, each integer ranging
                                                    from 0 to 255. In case of an IPV6
                                                    address, string that  consists of groups
                                                    of zero to four hexadecimal digits,
                                                    separated by colons.
                                                  type: string
                                                  format: IP
                                              isDynamic:
                                                description: >
                                                  Indicates whether this set of addresses
                                                  was assigned dynamically (true) or based
                                                  on address information provided as input
                                                  from the API consumer (false). Shall be
                                                  present if "addresses" is present and
                                                  shall be absent otherwise.
                                                type: boolean
                                              addressRange:
                                                description: >
                                                  An IP address range used, e.g., in case
                                                  of egress connections. Exactly one of
                                                  "addresses" or "addressRange" shall be
                                                  present.
                                                type: object
                                                required:
                                                  - minAddress
                                                  - maxAddress
                                                properties:
                                                  minAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                                  maxAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                              subnetId:
                                                description: >
                                                  An identifier maintained by the VIM or
                                                  other resource provider. It is expected
                                                  to be unique within the VIM instance.
                                                type: string
                                        type:
                                          description: |
                                            The type of the IP addresses
                                          type: string
                                          enum:
                                            - PV4
                                            - PV6
                                        addresses:
                                          description: >
                                            An IPV4 or IPV6 address. Representation:
                                            In case of an IPV4 address, string that
                                            consists of four decimal integers
                                            separated by dots, each integer ranging
                                            from 0 to 255. In case of an IPV6
                                            address, string that  consists of groups
                                            of zero to four hexadecimal digits,
                                            separated by colons.
                                          type: string
                                          format: IP
                                        isDynamic:
                                          description: >
                                            Indicates whether this set of addresses
                                            was assigned dynamically (true) or based
                                            on address information provided as input
                                            from the API consumer (false). Shall be
                                            present if "addresses" is present and
                                            shall be absent otherwise.
                                          type: boolean
                                        addressRange:
                                          description: >
                                            An IP address range used, e.g. in case
                                            of egress connections. See note.
                                          type: object
                                          required:
                                            - minAddress
                                            - maxAddress
                                          properties:
                                            minAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                            maxAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                        minAddress:
                                          description: >
                                            An IPV4 or IPV6 address. Representation:
                                            In case of an IPV4 address, string that
                                            consists of four decimal integers
                                            separated by dots, each integer ranging
                                            from 0 to 255. In case of an IPV6
                                            address, string that  consists of groups
                                            of zero to four hexadecimal digits,
                                            separated by colons.
                                          type: string
                                          format: IP
                                        maxAddress:
                                          description: >
                                            An IPV4 or IPV6 address. Representation:
                                            In case of an IPV4 address, string that
                                            consists of four decimal integers
                                            separated by dots, each integer ranging
                                            from 0 to 255. In case of an IPV6
                                            address, string that  consists of groups
                                            of zero to four hexadecimal digits,
                                            separated by colons.
                                          type: string
                                          format: IP
                                        subnetId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                              extLinkPortId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                        extVirtualLinkInfo:
                          description: >
                            Information about the external VLs the VNF instance
                            is connected to.
                          type: array
                          items:
                            type: object
                            required:
                              - id
                              - resourceHandle
                            properties:
                              id:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceHandle:
                                required:
                                  - vimConnectionId
                                  - resourceId
                                type: object
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance. Information about
                                  the resource is available from the VIM.
                                properties:
                                  vimConnectionId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceProviderId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                                  vimLevelResourceType:
                                    description: >
                                      Type of the resource in the scope of the
                                      VIM or the resource provider.
                                    type: string
                              extLinkPorts:
                                description: |
                                  Link ports of this VL.
                                type: array
                                items:
                                  description: >
                                    This type represents information about a
                                    link port of an external VL, i.e. a port
                                    providing connectivity for the VNF to an NS
                                    VL. 
                                  type: object
                                  required:
                                    - id
                                    - resourceHandle
                                  properties:
                                    id:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    resourceHandle:
                                      required:
                                        - vimConnectionId
                                        - resourceId
                                      type: object
                                      description: >
                                        This type represents the information
                                        that allows addressing a virtualised
                                        resource that is used by a VNF instance.
                                        Information about the resource is
                                        available from the VIM.
                                      properties:
                                        vimConnectionId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceProviderId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                                        vimLevelResourceType:
                                          description: >
                                            Type of the resource in the scope of the
                                            VIM or the resource provider.
                                          type: string
                                    cpInstanceId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                        extManagedVirtualLinkInfo:
                          description: >
                            External virtual links the VNF instance is connected
                            to.
                          type: array
                          items:
                            type: object
                            required:
                              - id
                              - vnfVirtualLinkDescId
                            properties:
                              id:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              vnfVirtualLinkDescId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              networkResource:
                                required:
                                  - vimConnectionId
                                  - resourceId
                                type: object
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance. Information about
                                  the resource is available from the VIM.
                                properties:
                                  vimConnectionId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceProviderId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                                  vimLevelResourceType:
                                    description: >
                                      Type of the resource in the scope of the
                                      VIM or the resource provider.
                                    type: string
                              vnfLinkPorts:
                                description: |
                                  Link ports of this VL.
                                type: array
                                items:
                                  type: object
                                  required:
                                    - id
                                    - resourceHandle
                                  properties:
                                    id:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                                    resourceHandle:
                                      required:
                                        - vimConnectionId
                                        - resourceId
                                      type: object
                                      description: >
                                        This type represents the information
                                        that allows addressing a virtualised
                                        resource that is used by a VNF instance.
                                        Information about the resource is
                                        available from the VIM.
                                      properties:
                                        vimConnectionId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceProviderId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                                        vimLevelResourceType:
                                          description: >
                                            Type of the resource in the scope of the
                                            VIM or the resource provider.
                                          type: string
                                    cpInstanceId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                        monitoringParameters:
                          description: |
                            Active monitoring parameters.
                          type: array
                          items:
                            type: object
                            required:
                              - id
                              - value
                              - timeStamp
                            properties:
                              id:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              name:
                                description: >
                                  Human readable name of the monitoring
                                  parameter, as defined in the VNFD.
                                type: string
                              value:
                                description: >
                                  Value of the monitoring parameter known to the
                                  VNFM (e.g. obtained for auto-scaling
                                  purposes). The type of the "value" attribute
                                  (i.e. scalar, structure (Object in JSON), or
                                  array (of scalars, arrays or
                                  structures/Objects)) is assumed to be defined
                                  in an external measurement specification.
                                type: object
                              timeStamp:
                                description: >
                                  Represents the point in time when the
                                  measurement has been performed, as known to
                                  the VNFM. Should be formatted according to ETF
                                  RFC 3339.
                                type: string
                        localizationLanguage:
                          description: >
                            Information about localization language of the VNF
                            (includes e.g. strings in the VNFD). The
                            localization languages supported by a VNF can be
                            declared in the VNFD, and localization language
                            selection can take place at instantiation time. The
                            value shall comply with the format defined in IETF
                            RFC 5646.
                          type: string
                        vnfcResourceInfo:
                          description: >
                            Information about the virtualised compute and
                            storage resources used by the VNFCs of the VNF
                            instance.
                          type: array
                          items:
                            description: >
                              This type represents the information on
                              virtualised compute and storage resources used by
                              a VNFC in a VNF instance.
                            type: object
                            required:
                              - id
                              - vduId
                              - computeResource
                            properties:
                              id:
                                description: >
                                  An identifier that is unique for the
                                  respective type within a VNF instance, but may
                                  not be globally unique.
                                type: string
                              vduId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              computeResource:
                                required:
                                  - vimConnectionId
                                  - resourceId
                                type: object
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance. Information about
                                  the resource is available from the VIM.
                                properties:
                                  vimConnectionId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceProviderId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                                  vimLevelResourceType:
                                    description: >
                                      Type of the resource in the scope of the
                                      VIM or the resource provider.
                                    type: string
                              storageResourceIds:
                                description: >
                                  References to the VirtualStorage resources.
                                  The value refers to a
                                  VirtualStorageResourceInfo item in the
                                  VnfInstance.
                                type: array
                                items:
                                  description: >
                                    An identifier with the intention of being
                                    globally unique.
                                  type: string
                              reservationId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              vnfcCpInfo:
                                description: >
                                  CPs of the VNFC instance. Shall be present
                                  when that particular CP of the VNFC instance
                                  is associated to an external CP of the VNF
                                  instance. May be present otherwise.
                                type: array
                                items:
                                  type: object
                                  required:
                                    - id
                                    - cpdId
                                  properties:
                                    id:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                                    cpdId:
                                      description: >
                                        Identifier of the VNF Virtual Link
                                        Descriptor (VLD) in the VNFD.
                                      type: string
                                    vnfExtCpId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                                    cpProtocolInfo:
                                      description: >
                                        Network protocol information for this
                                        CP.
                                      type: array
                                      items:
                                        description: >
                                          This type describes the protocol
                                          layer(s) that a CP or SAP uses together
                                          with protocol-related information, like
                                          addresses. It shall comply with the
                                          provisions defined in Table 6.5.3.58-1.
                                        type: object
                                        required:
                                          - layerProtocol
                                          - ipOverEthernet
                                        properties:
                                          layerProtocol:
                                            description: >
                                              The identifier of layer(s) and
                                              protocol(s) associated to the network
                                              address information. Permitted values:
                                              IP_OVER_ETHERNET See note.
                                            type: string
                                            enum:
                                              - IP_OVER_ETHERNET
                                          ipOverEthernet:
                                            description: >
                                              This type represents information about a
                                              network address that has been assigned. 
                                              It shall comply with the provisions
                                              defined in Table 6.5.3.18-1.
                                            type: object
                                            required:
                                              - macAddress
                                              - ipAddresses
                                              - subnetId
                                              - addresses
                                              - addressRange
                                            properties:
                                              macAddress:
                                                description: >
                                                  A MAC address. Representation: string
                                                  that consists of groups of two
                                                  hexadecimal digits, separated by hyphens
                                                  or colons.
                                                type: string
                                                format: MAC
                                              ipAddresses:
                                                description: >
                                                  Addresses assigned to the CP instance.
                                                  Each entry represents IP addresses
                                                  assigned by fixed or dynamic IP address
                                                  assignment per subnet.
                                                type: array
                                                items:
                                                  type: object
                                                  required:
                                                    - type
                                                  properties:
                                                    type:
                                                      description: >
                                                        The type of the IP addresses. Permitted
                                                        values: IPV4, IPV6.
                                                      type: string
                                                      enum:
                                                        - IPV4
                                                        - IPV6
                                                    addresses:
                                                      description: >
                                                        Fixed addresses assigned (from the
                                                        subnet defined by "subnetId" if
                                                        provided).
                                                      type: array
                                                      items:
                                                        description: >
                                                          An IPV4 or IPV6 address. Representation:
                                                          In case of an IPV4 address, string that
                                                          consists of four decimal integers
                                                          separated by dots, each integer ranging
                                                          from 0 to 255. In case of an IPV6
                                                          address, string that  consists of groups
                                                          of zero to four hexadecimal digits,
                                                          separated by colons.
                                                        type: string
                                                        format: IP
                                                    isDynamic:
                                                      description: >
                                                        Indicates whether this set of addresses
                                                        was assigned dynamically (true) or based
                                                        on address information provided as input
                                                        from the API consumer (false). Shall be
                                                        present if "addresses" is present and
                                                        shall be absent otherwise.
                                                      type: boolean
                                                    addressRange:
                                                      description: >
                                                        An IP address range used, e.g., in case
                                                        of egress connections. Exactly one of
                                                        "addresses" or "addressRange" shall be
                                                        present.
                                                      type: object
                                                      required:
                                                        - minAddress
                                                        - maxAddress
                                                      properties:
                                                        minAddress:
                                                          description: >
                                                            An IPV4 or IPV6 address. Representation:
                                                            In case of an IPV4 address, string that
                                                            consists of four decimal integers
                                                            separated by dots, each integer ranging
                                                            from 0 to 255. In case of an IPV6
                                                            address, string that  consists of groups
                                                            of zero to four hexadecimal digits,
                                                            separated by colons.
                                                          type: string
                                                          format: IP
                                                        maxAddress:
                                                          description: >
                                                            An IPV4 or IPV6 address. Representation:
                                                            In case of an IPV4 address, string that
                                                            consists of four decimal integers
                                                            separated by dots, each integer ranging
                                                            from 0 to 255. In case of an IPV6
                                                            address, string that  consists of groups
                                                            of zero to four hexadecimal digits,
                                                            separated by colons.
                                                          type: string
                                                          format: IP
                                                    subnetId:
                                                      description: >
                                                        An identifier maintained by the VIM or
                                                        other resource provider. It is expected
                                                        to be unique within the VIM instance.
                                                      type: string
                                              type:
                                                description: |
                                                  The type of the IP addresses
                                                type: string
                                                enum:
                                                  - PV4
                                                  - PV6
                                              addresses:
                                                description: >
                                                  An IPV4 or IPV6 address. Representation:
                                                  In case of an IPV4 address, string that
                                                  consists of four decimal integers
                                                  separated by dots, each integer ranging
                                                  from 0 to 255. In case of an IPV6
                                                  address, string that  consists of groups
                                                  of zero to four hexadecimal digits,
                                                  separated by colons.
                                                type: string
                                                format: IP
                                              isDynamic:
                                                description: >
                                                  Indicates whether this set of addresses
                                                  was assigned dynamically (true) or based
                                                  on address information provided as input
                                                  from the API consumer (false). Shall be
                                                  present if "addresses" is present and
                                                  shall be absent otherwise.
                                                type: boolean
                                              addressRange:
                                                description: >
                                                  An IP address range used, e.g. in case
                                                  of egress connections. See note.
                                                type: object
                                                required:
                                                  - minAddress
                                                  - maxAddress
                                                properties:
                                                  minAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                                  maxAddress:
                                                    description: >
                                                      An IPV4 or IPV6 address. Representation:
                                                      In case of an IPV4 address, string that
                                                      consists of four decimal integers
                                                      separated by dots, each integer ranging
                                                      from 0 to 255. In case of an IPV6
                                                      address, string that  consists of groups
                                                      of zero to four hexadecimal digits,
                                                      separated by colons.
                                                    type: string
                                                    format: IP
                                              minAddress:
                                                description: >
                                                  An IPV4 or IPV6 address. Representation:
                                                  In case of an IPV4 address, string that
                                                  consists of four decimal integers
                                                  separated by dots, each integer ranging
                                                  from 0 to 255. In case of an IPV6
                                                  address, string that  consists of groups
                                                  of zero to four hexadecimal digits,
                                                  separated by colons.
                                                type: string
                                                format: IP
                                              maxAddress:
                                                description: >
                                                  An IPV4 or IPV6 address. Representation:
                                                  In case of an IPV4 address, string that
                                                  consists of four decimal integers
                                                  separated by dots, each integer ranging
                                                  from 0 to 255. In case of an IPV6
                                                  address, string that  consists of groups
                                                  of zero to four hexadecimal digits,
                                                  separated by colons.
                                                type: string
                                                format: IP
                                              subnetId:
                                                description: >
                                                  An identifier maintained by the VIM or
                                                  other resource provider. It is expected
                                                  to be unique within the VIM instance.
                                                type: string
                                    vnfLinkPortId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                              metadata:
                                description: >
                                  This type represents a list of key-value
                                  pairs. The order of the pairs in the list is
                                  not significant. In JSON, a set of key- value
                                  pairs is represented as an object. It shall
                                  comply with the provisions  defined in clause
                                  4 of IETF RFC 7159. 
                                type: object
                        virtualLinkResourceInfo:
                          description: >
                            Information about the virtualised network resources
                            used by the VLs of the VNF instance.
                          type: array
                          items:
                            description: >
                              This type represents the information that allows
                              addressing a virtualised resource that is used by
                              an internal VL instance in a VNF instance.
                            type: object
                            required:
                              - id
                              - vnfVirtualLinkDescId
                              - networkResource
                            properties:
                              id:
                                description: >
                                  An identifier that is unique for the
                                  respective type within a VNF instance, but may
                                  not be globally unique.
                                type: string
                              vnfVirtualLinkDescId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              networkResource:
                                required:
                                  - vimConnectionId
                                  - resourceId
                                type: object
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance. Information about
                                  the resource is available from the VIM.
                                properties:
                                  vimConnectionId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceProviderId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                                  vimLevelResourceType:
                                    description: >
                                      Type of the resource in the scope of the
                                      VIM or the resource provider.
                                    type: string
                              reservationId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              vnfLinkPorts:
                                description: >
                                  Links ports of this VL. Shall be present when
                                  the linkPort is used for external connectivity
                                  by the VNF (refer to VnfLinkPortInfo). May be
                                  present otherwise.
                                type: array
                                items:
                                  type: object
                                  required:
                                    - id
                                    - resourceHandle
                                  properties:
                                    id:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                                    resourceHandle:
                                      required:
                                        - vimConnectionId
                                        - resourceId
                                      type: object
                                      description: >
                                        This type represents the information
                                        that allows addressing a virtualised
                                        resource that is used by a VNF instance.
                                        Information about the resource is
                                        available from the VIM.
                                      properties:
                                        vimConnectionId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceProviderId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                                        vimLevelResourceType:
                                          description: >
                                            Type of the resource in the scope of the
                                            VIM or the resource provider.
                                          type: string
                                    cpInstanceId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                              metadata:
                                description: >
                                  This type represents a list of key-value
                                  pairs. The order of the pairs in the list is
                                  not significant. In JSON, a set of key- value
                                  pairs is represented as an object. It shall
                                  comply with the provisions  defined in clause
                                  4 of IETF RFC 7159. 
                                type: object
                        virtualStorageResourceInfo:
                          description: >
                            Information on the virtualised storage resource(s)
                            used as storage for the VNF instance.
                          type: array
                          items:
                            description: >
                              This type represents the information that allows
                              addressing a virtualised resource that is used by
                              a VNF instance.
                            type: object
                            required:
                              - id
                              - virtualStorageDescId
                              - storageResource
                            properties:
                              id:
                                description: >
                                  An identifier that is unique for the
                                  respective type within a VNF instance, but may
                                  not be globally unique.
                                type: string
                              virtualStorageDescId:
                                description: >
                                  Identifier of the VNF Virtual Link Descriptor
                                  (VLD) in the VNFD.
                                type: string
                              storageResource:
                                required:
                                  - vimConnectionId
                                  - resourceId
                                type: object
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance. Information about
                                  the resource is available from the VIM.
                                properties:
                                  vimConnectionId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceProviderId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                                  vimLevelResourceType:
                                    description: >
                                      Type of the resource in the scope of the
                                      VIM or the resource provider.
                                    type: string
                              reservationId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              metadata:
                                description: >
                                  This type represents a list of key-value
                                  pairs. The order of the pairs in the list is
                                  not significant. In JSON, a set of key- value
                                  pairs is represented as an object. It shall
                                  comply with the provisions  defined in clause
                                  4 of IETF RFC 7159. 
                                type: object
                    metadata:
                      description: >
                        This type represents a list of key-value pairs. The
                        order of the pairs in the list is not significant. In
                        JSON, a set of key- value pairs is represented as an
                        object. It shall comply with the provisions  defined in
                        clause 4 of IETF RFC 7159. 
                      type: object
                    extensions:
                      description: >
                        This type represents a list of key-value pairs. The
                        order of the pairs in the list is not significant. In
                        JSON, a set of key- value pairs is represented as an
                        object. It shall comply with the provisions  defined in
                        clause 4 of IETF RFC 7159. 
                      type: object
              pnfInfo:
                description: |
                  Information on the PNF(s) that are part of the NS instance.
                type: array
                items:
                  description: >
                    This type represents the information about a PNF that is
                    part of an NS instance.  It shall comply with the provisions
                    defined in Table 6.5.3.13-1.
                  type: object
                  required:
                    - pnfId
                    - pnfdId
                    - pnfdInfoId
                    - pnfProfileId
                  properties:
                    pnfId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    pnfName:
                      description: |
                        Name of the PNF.
                      type: string
                    pnfdId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    pnfdInfoId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    pnfProfileId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
                    cpInfo:
                      description: >
                        This type represents the information about the external
                        CP of the PNF.  It shall comply with the provisions
                        defined in Table 6.5.3.17-1.
                      type: object
                      required:
                        - cpInstanceId
                        - cpdId
                      properties:
                        cpInstanceId:
                          description: |
                            Identifier of the CP in the scope of the PNF.
                          type: string
                        cpdId:
                          description: >
                            An identifier that is unique within a NS descriptor.
                            Representation: string of variable length.
                          type: string
                        cpProtocolData:
                          description: >
                            Parameters for configuring the network protocols on
                            the CP.
                          type: array
                          items:
                            description: |
                              This type represents network protocol data. 
                            type: object
                            required:
                              - layerProtocol
                            properties:
                              layerProtocol:
                                description: >
                                  Identifier of layer(s) and protocol(s).
                                  Permitted values: IP_OVER_ETHERNET.
                                type: string
                                enum:
                                  - IP_OVER_ETHERNET
                              ipOverEthernet:
                                description: >
                                  This type represents network address data for
                                  IP over Ethernet.
                                type: object
                                properties:
                                  macAddress:
                                    description: >
                                      A MAC address. Representation: string that
                                      consists of groups of two hexadecimal
                                      digits, separated by hyphens or colons.
                                    type: string
                                    format: MAC
                                  ipAddresses:
                                    description: >
                                      List of IP addresses to assign to the CP
                                      instance. Each entry represents IP address
                                      data for fixed or dynamic IP address
                                      assignment per subnet. If this attribute
                                      is not present, no IP address shall be
                                      assigned.
                                    type: array
                                    items:
                                      type: object
                                      required:
                                        - type
                                      properties:
                                        type:
                                          description: >
                                            The type of the IP addresses. Permitted
                                            values: IPV4, IPV6.
                                          type: string
                                          enum:
                                            - IPV4
                                            - IPV6
                                        fixedAddresses:
                                          description: >
                                            Fixed addresses to assign (from the
                                            subnet defined by "subnetId" if
                                            provided). Exactly one of
                                            "fixedAddresses", "numDynamicAddresses"
                                            or "ipAddressRange" shall be present.
                                          type: array
                                          items:
                                            description: >
                                              An IPV4 or IPV6 address. Representation:
                                              In case of an IPV4 address, string that
                                              consists of four decimal integers
                                              separated by dots, each integer ranging
                                              from 0 to 255. In case of an IPV6
                                              address, string that  consists of groups
                                              of zero to four hexadecimal digits,
                                              separated by colons.
                                            type: string
                                            format: IP
                                        numDynamicAddresses:
                                          description: >
                                            Number of dynamic addresses to assign
                                            (from the subnet defined by "subnetId"
                                            if provided). Exactly one of
                                            "fixedAddresses", "numDynamicAddresses"
                                            or "ipAddressRange" shall be present.
                                          type: integer
                                        addressRange:
                                          description: >
                                            An IP address range to be used, e.g. in
                                            case of egress connections. In case this
                                            attribute is present, IP addresses from
                                            the range will be used.
                                          type: object
                                          required:
                                            - minAddress
                                            - maxAddress
                                          properties:
                                            minAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                            maxAddress:
                                              description: >
                                                An IPV4 or IPV6 address. Representation:
                                                In case of an IPV4 address, string that
                                                consists of four decimal integers
                                                separated by dots, each integer ranging
                                                from 0 to 255. In case of an IPV6
                                                address, string that  consists of groups
                                                of zero to four hexadecimal digits,
                                                separated by colons.
                                              type: string
                                              format: IP
                                        subnetId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
              virtualLinkInfo:
                description: >
                  Information on the VL(s) of the NS instance. This attribute
                  shall be present if the nsState attribute value is
                  INSTANTIATED and if the NS instance has specified
                  connectivity.
                type: array
                items:
                  description: >
                    This type specifies the information about an NS VL
                    instance.  It shall comply with the provisions defined in
                    Table 6.5.3.53-1
                  type: object
                  required:
                    - id
                    - nsVirtualLinkDescId
                  properties:
                    id:
                      description: >
                        An identifier that is unique with respect to a NS. 
                        Representation: string of variable length.
                      type: string
                    nsVirtualLinkDescId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
                    resourceHandle:
                      description: >
                        Identifier(s) of the virtualised network resource(s)
                        realizing the VL instance. See note.
                      type: array
                      items:
                        required:
                          - vimConnectionId
                          - resourceId
                        type: object
                        description: >
                          This type represents the information that allows
                          addressing a virtualised resource that is used by a
                          VNF instance. Information about the resource is
                          available from the VIM.
                        properties:
                          vimConnectionId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          resourceProviderId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          resourceId:
                            description: >
                              An identifier maintained by the VIM or other
                              resource provider. It is expected to be unique
                              within the VIM instance.
                            type: string
                          vimLevelResourceType:
                            description: >
                              Type of the resource in the scope of the VIM or
                              the resource provider.
                            type: string
                    linkPort:
                      description: >
                        Link ports of the VL instance. Cardinality of zero
                        indicates that no port has yet been created for the VL
                        instance.
                      type: array
                      items:
                        description: >
                          This type represents information about a link port of
                          a VL instance.  It shall comply with the provisions
                          defined in Table 6.5.3.55-1.
                        type: object
                        required:
                          - id
                          - resourceHandle
                        properties:
                          id:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          resourceHandle:
                            required:
                              - vimConnectionId
                              - resourceId
                            type: object
                            description: >
                              This type represents the information that allows
                              addressing a virtualised resource that is used by
                              a VNF instance. Information about the resource is
                              available from the VIM.
                            properties:
                              vimConnectionId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceProviderId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceId:
                                description: >
                                  An identifier maintained by the VIM or other
                                  resource provider. It is expected to be unique
                                  within the VIM instance.
                                type: string
                              vimLevelResourceType:
                                description: >
                                  Type of the resource in the scope of the VIM
                                  or the resource provider.
                                type: string
                          nsCpHandle:
                            description: >
                              Identifier of the CP/SAP instance to be connected
                              to this link port. The value refers to a
                              vnfExtCpInfo item in the VnfInstance, or a
                              pnfExtCpInfo item in the PnfInfo, or a sapInfo
                              item in the NS instance. There shall be at most
                              one link port associated with any connection point
                              instance.
                            type: array
                            items:
                              description: >
                                This type represents an identifier of the CP or
                                SAP instance.  It shall comply with the
                                provisions defined in Table 6.5.3.56-1.
                              type: object
                              properties:
                                vnfInstanceId:
                                  description: >
                                    An identifier with the intention of being
                                    globally unique.
                                  type: string
                                vnfExtCpInstanceId:
                                  description: >
                                    An identifier that is unique for the
                                    respective type within a VNF instance, but
                                    may not be globally unique.
                                  type: string
                                pnfInfoId:
                                  description: >
                                    An identifier with the intention of being
                                    globally unique.
                                  type: string
                                pnfExtCpInstanceId:
                                  description: >
                                    Identifier of the CP in the scope of the
                                    PNF.
                                  type: string
                                nsInstanceId:
                                  description: >
                                    An identifier with the intention of being
                                    globally unique.
                                  type: string
                                nsSapInstanceId:
                                  description: >
                                    An identifier that is unique with respect to
                                    a NS.  Representation: string of variable
                                    length.
                                  type: string
              vnffgInfo:
                description: |
                  Information on the VNFFG(s) of the NS instance.
                type: array
                items:
                  description: |
                    Information on the VNFFG(s) of the NS instance.
                  type: object
                  required:
                    - id
                    - vnffgdId
                    - vnfInstanceId
                    - pnfInfoId
                  properties:
                    id:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    vnffgdId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
                    vnfInstanceId:
                      description: >
                        Identifier(s) of the constituent VNF instance(s) of this
                        VNFFG instance.
                      type: array
                      items:
                        description: >
                          An identifier with the intention of being globally
                          unique.
                        type: string
                    pnfdInfoId:
                      description: >
                        Identifier(s) of the constituent PNF instance(s) of this
                        VNFFG instance.
                      type: array
                      items:
                        description: >
                          An identifier with the intention of being globally
                          unique.
                        type: string
                    nsVirtualLinkInfoId:
                      description: >
                        Identifier(s) of the constituent VL instance(s) of this
                        VNFFG instance.
                      type: array
                      items:
                        description: >
                          An identifier that is unique with respect to a NS. 
                          Representation: string of variable length.
                        type: string
                    nsCpHandle:
                      description: >
                        Identifiers of the CP instances attached to the
                        constituent VNFs and PNFs or the SAP instances of the
                        VNFFG. See note.
                      type: array
                      items:
                        description: >
                          This type represents an identifier of the CP or SAP
                          instance.  It shall comply with the provisions defined
                          in Table 6.5.3.56-1.
                        type: object
                        properties:
                          vnfInstanceId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          vnfExtCpInstanceId:
                            description: >
                              An identifier that is unique for the respective
                              type within a VNF instance, but may not be
                              globally unique.
                            type: string
                          pnfInfoId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          pnfExtCpInstanceId:
                            description: |
                              Identifier of the CP in the scope of the PNF.
                            type: string
                          nsInstanceId:
                            description: >
                              An identifier with the intention of being globally
                              unique.
                            type: string
                          nsSapInstanceId:
                            description: >
                              An identifier that is unique with respect to a
                              NS.  Representation: string of variable length.
                            type: string
              sapInfo:
                description: |
                  Information on the SAP(s) of the NS instance.
                type: array
                items:
                  description: >
                    This type represents an SAP instance. It shall comply with
                    the provisions defined in Table 6.5.3.67-1.
                  type: object
                  required:
                    - id
                    - sapdId
                    - sapName
                    - sapProtocolInfo
                  properties:
                    id:
                      description: >
                        An identifier that is unique with respect to a NS. 
                        Representation: string of variable length.
                      type: string
                    sapdId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
                    sapName:
                      description: |
                        Human readable name for the SAP instance.
                      type: string
                    description:
                      description: |
                        Human readable description for the SAP instance.
                      type: string
                    sapProtocolInfo:
                      description: |
                        Network protocol information for this SAP.
                      type: array
                      items:
                        description: >
                          This type describes the protocol layer(s) that a CP or
                          SAP uses together with protocol-related information,
                          like addresses. It shall comply with the provisions
                          defined in Table 6.5.3.58-1.
                        type: object
                        required:
                          - layerProtocol
                          - ipOverEthernet
                        properties:
                          layerProtocol:
                            description: >
                              The identifier of layer(s) and protocol(s)
                              associated to the network address information.
                              Permitted values: IP_OVER_ETHERNET See note.
                            type: string
                            enum:
                              - IP_OVER_ETHERNET
                          ipOverEthernet:
                            description: >
                              This type represents information about a network
                              address that has been assigned.  It shall comply
                              with the provisions defined in Table 6.5.3.18-1.
                            type: object
                            required:
                              - macAddress
                              - ipAddresses
                              - subnetId
                              - addresses
                              - addressRange
                            properties:
                              macAddress:
                                description: >
                                  A MAC address. Representation: string that
                                  consists of groups of two hexadecimal digits,
                                  separated by hyphens or colons.
                                type: string
                                format: MAC
                              ipAddresses:
                                description: >
                                  Addresses assigned to the CP instance. Each
                                  entry represents IP addresses assigned by
                                  fixed or dynamic IP address assignment per
                                  subnet.
                                type: array
                                items:
                                  type: object
                                  required:
                                    - type
                                  properties:
                                    type:
                                      description: >
                                        The type of the IP addresses. Permitted
                                        values: IPV4, IPV6.
                                      type: string
                                      enum:
                                        - IPV4
                                        - IPV6
                                    addresses:
                                      description: >
                                        Fixed addresses assigned (from the
                                        subnet defined by "subnetId" if
                                        provided).
                                      type: array
                                      items:
                                        description: >
                                          An IPV4 or IPV6 address. Representation:
                                          In case of an IPV4 address, string that
                                          consists of four decimal integers
                                          separated by dots, each integer ranging
                                          from 0 to 255. In case of an IPV6
                                          address, string that  consists of groups
                                          of zero to four hexadecimal digits,
                                          separated by colons.
                                        type: string
                                        format: IP
                                    isDynamic:
                                      description: >
                                        Indicates whether this set of addresses
                                        was assigned dynamically (true) or based
                                        on address information provided as input
                                        from the API consumer (false). Shall be
                                        present if "addresses" is present and
                                        shall be absent otherwise.
                                      type: boolean
                                    addressRange:
                                      description: >
                                        An IP address range used, e.g., in case
                                        of egress connections. Exactly one of
                                        "addresses" or "addressRange" shall be
                                        present.
                                      type: object
                                      required:
                                        - minAddress
                                        - maxAddress
                                      properties:
                                        minAddress:
                                          description: >
                                            An IPV4 or IPV6 address. Representation:
                                            In case of an IPV4 address, string that
                                            consists of four decimal integers
                                            separated by dots, each integer ranging
                                            from 0 to 255. In case of an IPV6
                                            address, string that  consists of groups
                                            of zero to four hexadecimal digits,
                                            separated by colons.
                                          type: string
                                          format: IP
                                        maxAddress:
                                          description: >
                                            An IPV4 or IPV6 address. Representation:
                                            In case of an IPV4 address, string that
                                            consists of four decimal integers
                                            separated by dots, each integer ranging
                                            from 0 to 255. In case of an IPV6
                                            address, string that  consists of groups
                                            of zero to four hexadecimal digits,
                                            separated by colons.
                                          type: string
                                          format: IP
                                    subnetId:
                                      description: >
                                        An identifier maintained by the VIM or
                                        other resource provider. It is expected
                                        to be unique within the VIM instance.
                                      type: string
                              type:
                                description: |
                                  The type of the IP addresses
                                type: string
                                enum:
                                  - PV4
                                  - PV6
                              addresses:
                                description: >
                                  An IPV4 or IPV6 address. Representation: In
                                  case of an IPV4 address, string that consists
                                  of four decimal integers separated by dots,
                                  each integer ranging from 0 to 255. In case of
                                  an IPV6 address, string that  consists of
                                  groups of zero to four hexadecimal digits,
                                  separated by colons.
                                type: string
                                format: IP
                              isDynamic:
                                description: >
                                  Indicates whether this set of addresses was
                                  assigned dynamically (true) or based on
                                  address information provided as input from the
                                  API consumer (false). Shall be present if
                                  "addresses" is present and shall be absent
                                  otherwise.
                                type: boolean
                              addressRange:
                                description: >
                                  An IP address range used, e.g. in case of
                                  egress connections. See note.
                                type: object
                                required:
                                  - minAddress
                                  - maxAddress
                                properties:
                                  minAddress:
                                    description: >
                                      An IPV4 or IPV6 address. Representation:
                                      In case of an IPV4 address, string that
                                      consists of four decimal integers
                                      separated by dots, each integer ranging
                                      from 0 to 255. In case of an IPV6 address,
                                      string that  consists of groups of zero to
                                      four hexadecimal digits, separated by
                                      colons.
                                    type: string
                                    format: IP
                                  maxAddress:
                                    description: >
                                      An IPV4 or IPV6 address. Representation:
                                      In case of an IPV4 address, string that
                                      consists of four decimal integers
                                      separated by dots, each integer ranging
                                      from 0 to 255. In case of an IPV6 address,
                                      string that  consists of groups of zero to
                                      four hexadecimal digits, separated by
                                      colons.
                                    type: string
                                    format: IP
                              minAddress:
                                description: >
                                  An IPV4 or IPV6 address. Representation: In
                                  case of an IPV4 address, string that consists
                                  of four decimal integers separated by dots,
                                  each integer ranging from 0 to 255. In case of
                                  an IPV6 address, string that  consists of
                                  groups of zero to four hexadecimal digits,
                                  separated by colons.
                                type: string
                                format: IP
                              maxAddress:
                                description: >
                                  An IPV4 or IPV6 address. Representation: In
                                  case of an IPV4 address, string that consists
                                  of four decimal integers separated by dots,
                                  each integer ranging from 0 to 255. In case of
                                  an IPV6 address, string that  consists of
                                  groups of zero to four hexadecimal digits,
                                  separated by colons.
                                type: string
                                format: IP
                              subnetId:
                                description: >
                                  An identifier maintained by the VIM or other
                                  resource provider. It is expected to be unique
                                  within the VIM instance.
                                type: string
              nestedNsInstanceId:
                description: |
                  Identifier of the nested NS(s) of the NS instance.
                type: array
                items:
                  description: |
                    An identifier with the intention of being globally unique.
                  type: string
              nsState:
                description: >
                  The state of the NS instance. Permitted values:
                  NOT_INSTANTIATED: The NS instance is terminated or not
                  instantiated. INSTANTIATED: The NS instance is instantiated.
                type: string
                enum:
                  - NOT_INSTANTIATED
                  - INSTANTIATED
              nsScaleStatus:
                description: >
                  Status of each NS scaling aspect declared in the applicable
                  DF, how "big" the NS instance has been scaled w.r.t. that
                  aspect. This attribute shall be present if the nsState
                  attribute value is INSTANTIATED.
                type: array
                items:
                  description: >
                    This type represents the target NS Scale level for each NS
                    scaling aspect of the current deployment flavor.
                  type: object
                  required:
                    - nsScalingAspectId
                    - nsScaleLevelId
                  properties:
                    nsScalingAspectId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
                    nsScaleLevelId:
                      description: >
                        An identifier that is unique within a NS descriptor.
                        Representation: string of variable length.
                      type: string
              additionalAffinityOrAntiAffinityRule:
                description: >
                  Information on the additional affinity or anti-affinity rule
                  from NS instantiation operation. Shall not conflict with rules
                  already specified in the NSD.
                type: array
                items:
                  description: >
                    This type describes the additional affinity or anti-affinity
                    rule  applicable between the VNF instances to be
                    instantiated in the NS instantiation operation request or
                    between the VNF instances  to be instantiated in the NS
                    instantiation operation request and the existing VNF
                    instances..
                  type: object
                  required:
                    - affinityOrAntiAffiinty
                    - scope
                  properties:
                    vnfdId:
                      description: >
                        Reference to a VNFD. When the VNFD which is not used to
                        instantiate VNF, it presents all VNF instances of this
                        type as the subjects of the affinity or anti-affinity
                        rule. The VNF instance which the VNFD presents is not
                        necessary as a part of the NS to be instantiated.
                      type: array
                      items:
                        description: >
                          An identifier with the intention of being globally
                          unique.
                        type: string
                    vnfProfileId:
                      description: >
                        Reference to a vnfProfile defined in the NSD. At least
                        one VnfProfile which is used to instantiate VNF for the
                        NS to be instantiated as the subject of the affinity or
                        anti-affinity rule shall be present. When the VnfProfile
                        which is not used to instantiate VNF, it presents all
                        VNF instances of this type as the subjects of the
                        affinity or anti-affinity rule. The VNF instance which
                        the VnfProfile presents is not necessary as a part of
                        the NS to be instantiated.
                      type: array
                      items:
                        description: >
                          An identifier that is unique within a NS descriptor.
                          Representation: string of variable length.
                        type: string
                    vnfInstanceId:
                      description: >
                        Reference to the existing VNF instance as the subject of
                        the affinity or anti-affinity rule. The existing VNF
                        instance is not necessary as a part of the NS to be
                        instantiated.
                      type: array
                      items:
                        description: >
                          An identifier with the intention of being globally
                          unique.
                        type: string
                    affinityOrAntiAffiinty:
                      description: >
                        The type of the constraint. Permitted values: AFFINITY
                        ANTI_AFFINITY.
                      type: string
                      enum:
                        - AFFINITY
                        - ANTI_AFFINITY
                    scope:
                      description: >
                        Specifies the scope of the rule where the placement
                        constraint applies. Permitted values: NFVI_POP ZONE
                        ZONE_GROUP NFVI_NODE.
                      type: string
                      enum:
                        - NFVI_POP
                        - ZONE
                        - ZONE_GROUP
                        - NFVI_NODE
              _links:
                type: object
                description: Links to resources related to this resource.
                required:
                  - self
                properties:
                  self:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
                  nestedNsInstances:
                    description: |
                      Links to resources related to this notification.
                    type: array
                    items:
                      description: |
                        This type represents a link to a resource.
                      type: object
                      required:
                        - href
                      properties:
                        href:
                          description: |
                            URI of the referenced resource.
                          type: string
                          format: url
                  instantiate:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
                  terminate:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
                  update:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
                  scale:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
                  heal:
                    description: |
                      This type represents a link to a resource.
                    type: object
                    required:
                      - href
                    properties:
                      href:
                        description: |
                          URI of the referenced resource.
                        type: string
                        format: url
        '400':
          description: >
            Bad Request

            Error: Invalid attribute-based filtering parameters. The response
            body shall contain a ProblemDetails structure, in which the "detail"
            attribute should convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '401':
          description: >
            Unauthorized If the request contains no access token even though one
            is required, or if the request contains an authorization token that
            is invalid (e.g. expired or revoked), the API producer should
            respond with this response. The details of the error shall be
            returned in the WWW-Authenticate HTTP header, as defined in IETF RFC
            6750 and IETF RFC 7235. The ProblemDetails structure may be
            provided.
          headers:
            Content-Type:
              type: string
              description: The MIME type of the body of the response.
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '403':
          description: >
            Forbidden If the API consumer is not allowed to perform a particular
            request to a particular resource, the API producer shall respond
            with this response code. The "ProblemDetails" structure shall be
            provided.  It should include in the "detail" attribute information
            about the source of the problem, and may indicate how to solve it.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '404':
          description: >
            Not Found Error: The API producer did not find a current
            representation for the target resource or is not willing to disclose
            that one exists. Specifically in case of this task resource, the 
            response code 404 shall also returned if the task is not supported
            for the NS instance represented by the parent resource, which means
            that the task resource consequently does not exist.  In this case,
            the response body shall be present, and shall contain a
            ProblemDetails structure, in which the "detail" attribute shall
            convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '405':
          description: >
            Method Not Allowed If a particular HTTP method is not supported for
            a particular resource, the API producer shall respond with this
            response code. The "ProblemDetails" structure may be omitted in that
            case.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '406':
          description: >
            Not Acceptable If the Accept HTTP header does not contain at least
            one name of a content type that is acceptable to the API producer,
            the API producer shall respond with this response code. The
            ProblemDetails structure may be omitted in that case.        
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '409':
          description: >
            Conflict

            The operation cannot be executed currently, due to a conflict with
            the state of the NS instance resource. Typically, this is due to the
            fact that the NS instance resource is in NOT-INSTANTIATED state, or
            that another lifecycle management operation is ongoing. The response
            body shall contain a ProblemDetails structure, in which the "detail"
            attribute should convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '500':
          description: >
            Internal Server Error If there is an application error not related
            to the client's input that cannot be easily mapped to any other HTTP
            response code ("catch all error"), the API producer shall respond
            withthis response code. The ProblemDetails structure shall be
            provided, and shall include in the "detail" attribute more
            information about the source of the problem.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '503':
          description: >
            Service Unavailable If the API producer encounters an internal
            overload situation of itself or of a system it relies on, it should
            respond with this response code, following the provisions in IETF
            RFC 7231 [13] for the use of the Retry-After HTTP header and for the
            alternative to refuse the connection. The "ProblemDetails" structure
            may be omitted.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
  /ns_lcm_op_occs:
    get:
      summary: Query multiple NS LCM operation occurrences.
      description: >
        Get Operation Status. The client can use this method to query status
        information about multiple NS lifecycle management operation
        occurrences. This method shall follow the provisions specified in the
        Tables 6.4.9.3.2-1 and 6.4.9.3.2-2 for URI query parameters, request and
        response data structures, and response codes.
      parameters:
        - name: filter
          in: query
          required: false
          type: string
          description: >
            Attribute-based filtering parameters according to clause 4.3.2. The
            NFVO shall support receiving filtering parameters as part of the URI
            query string. The OSS/BSS may supply an attribute filter. All
            attribute names that appear in the NsLcmOpOcc and in data types
            referenced from it shall be supported in filtering parameters.
        - name: fields
          in: query
          required: false
          type: string
          description: >
            Complex attributes to be included into the response. See clause
            4.3.3 for details. The NFVO should support this parameter.
        - name: exclude_fields
          in: query
          required: false
          type: string
          description: >
            Complex attributes to be excluded from the response. See clause
            4.3.3 for details. The NFVO should support this parameter.
        - name: exclude_default
          in: query
          required: false
          type: string
          description: >
            Indicates to exclude the following complex attributes from the
            response. See clause 4.3.3 for details. The NFVO shall support this
            parameter. The following attributes shall be excluded from the
            NsLcmOpOcc structure in the response body if this parameter is
            provided: - operationParams - changedVnfInfo - error -
            resourceChanges
        - name: Accept
          description: >
            Content-Types that are acceptable for the response. Reference: IETF
            RFC 7231
          in: header
          required: true
          type: string
        - name: Authorization
          description: |
            The authorization token for the request. Reference: IETF RFC 7235
          in: header
          required: false
          type: string
      responses:
        '200':
          description: >
            200 OK

            Status information for zero or more NS lifecycle management
            operation occurrences was queried successfully. The response body
            shall contain representations of zero or more NS instances, as
            defined in clause 5.5.2.13.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              maximum: 1
              minimum: 0
          schema:
            type: array
            items:
              properties:
                NsLcmOpOcc:
                  description: >
                    This type represents a request a NS lifecycle operation
                    occurrence.  It shall comply with the provisions defined in
                    Table 6.5.2.3-1.
                  type: object
                  required:
                    - id
                    - operationState
                    - stateEnteredTime
                    - nsInstanceId
                    - lcmOperationType
                    - startTime
                    - isAutomaticInvocation
                    - operationParams
                    - isCancelPending
                    - _links
                  properties:
                    id:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    operationState:
                      description: >
                        The enumeration NsLcmOperationStateType shall comply
                        with the provisions defined in Table 6.5.4.4-1. Value |
                        Description ------|------------ PROCESSING | The LCM
                        operation is currently in execution. COMPLETED | The LCM
                        operation has been completed successfully.
                        PARTIALLY_COMPLETED | The LCM operation has been
                        partially completed with accepTable errors. FAILED_TEMP
                        | The LCM operation has failed and execution has
                        stopped, but the execution of the operation is not
                        considered to be closed. FAILED | The LCM operation has
                        failed and it cannot be retried or rolled back, as it is
                        determined that such action won't succeed. OLLING_BACK |
                        The LCM operation is currently being rolled back.
                        ROLLED_BACK | The LCM operation has been successfully
                        rolled back, i.e. The state of the VNF prior to the
                        original operation invocation has been restored as
                        closely as possible.
                      type: string
                      enum:
                        - PROCESSING
                        - COMPLETED
                        - FAILED_TEMP
                        - FAILED
                        - ROLLING_BACK
                        - ROLLED_BACK
                    stateEnteredTime:
                      description: |
                        Date-time when the current state was entered.
                      type: string
                      format: date-time
                    nsInstanceId:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    lcmOperationType:
                      description: >
                        The enumeration NsLcmOpType represents those lifecycle
                        operations that trigger a NS lifecycle management
                        operation occurrence notification. Value | Description
                        ------|------------ INSTANTIATE | Represents the
                        "Instantiate NS" LCM operation. SCALE | Represents the
                        "Scale NS" LCM operation. UPDATE | Represents the
                        "Update NS" LCM operation. TERMINATE | Represents the
                        "Terminate NS" LCM operation. HEAL | Represents the
                        "Heal NS" LCM operation.
                      type: string
                      enum:
                        - INSTANTIATE
                        - SCALE
                        - UPDATE
                        - TERMINATE
                        - HEAL
                    startTime:
                      description: |
                        Date-time of the start of the operation.
                      type: string
                      format: date-time
                    isAutomaticInvocation:
                      description: >
                        Set to true if this NS LCM operation occurrence has been
                        automatically triggered by the NFVO. This occurs in the
                        case of auto-scaling, auto-healing and when a nested NS
                        is modified as a result of an operation on its composite
                        NS. Set to false otherwise.
                      type: boolean
                    operationParams:
                      description: >
                        Input parameters of the LCM operation. This attribute
                        shall be formatted according to the request data type of
                        the related LCM operation. The following mapping between
                        lcmOperationType and the data type of this attribute
                        shall apply: - INSTANTIATE: InstantiateNsRequest -
                        SCALE: ScaleNsRequest - UPDATE: UpdateNsRequest - HEAL:
                        HealNsRequest - TERMINATE: TerminateNsRequest
                      type: string
                      enum:
                        - INSTANTIATE
                        - SCALE
                        - UPDATE
                        - HEAL
                        - TERMINATE
                    isCancelPending:
                      description: >
                        If the LCM operation occurrence is in "PROCESSING" or
                        "ROLLING_BACK" state and the operation is being
                        cancelled, this attribute shall be set to true.
                        Otherwise, it shall be set to false.
                      type: boolean
                    cancelMode:
                      description: >
                        Cancellation mode.

                        The NFVO shall not start any new VNF lifecycle
                        management and resource management operation, and shall
                        wait for the ongoing VNF lifecycle management and
                        resource management operations in the underlying system,
                        typically the VNFM and VIM, to finish execution or to
                        time out. After that, the NFVO shall put the operation
                        occurrence into the FAILED_TEMP state.

                        The NFVO shall not start any new VNF lifecycle
                        management and resource management operation, shall
                        cancel the ongoing VNF lifecycle management and resource
                        management operations in the underlying system,
                        typically the VNFM and VIM, and shall wait for the
                        cancellation to finish or to time out. After that, the
                        NFVO shall put the operation occurrence into the
                        FAILED_TEMP state.
                      type: string
                      enum:
                        - GRACEFUL
                        - FORCEFUL
                    error:
                      description: >
                        The definition of the general "ProblemDetails" data
                        structure from IETF RFC 7807 [19] is reproduced inthis
                        structure. Compared to the general framework defined in
                        IETF RFC 7807 [19], the "status" and "detail" attributes
                        are mandated to be included by the present document, to
                        ensure that the response contains additional textual
                        information about an error. IETF RFC 7807 [19] foresees
                        extensibility of the "ProblemDetails" type. It is
                        possible that particular APIs in the present document,
                        or particular implementations, define extensions to
                        define additional attributes that provide more
                        information about the error. The description column only
                        provides some explanation of the meaning to Facilitate
                        understanding of the design. For a full description, see
                        IETF RFC 7807 [19].
                      type: object
                      required:
                        - status
                        - detail
                      properties:
                        type:
                          description: >
                            A URI reference according to IETF RFC 3986 [5] that
                            identifies the problem type. It is encouraged that
                            the URI provides human-readable documentation for
                            the problem (e.g. using HTML) when dereferenced.
                            When this member is not present, its value is
                            assumed to be "about:blank".
                          type: string
                          format: URI
                        title:
                          description: >
                            A short, human-readable summary of the problem type.
                            It should not change from occurrence to occurrence
                            of the problem, except for purposes of localization.
                            If type is given and other than "about:blank", this
                            attribute shall also be provided. A short,
                            human-readable summary of the problem type.  It
                            SHOULD NOT change from occurrence to occurrence of
                            the problem, except for purposes of localization
                            (e.g., using proactive content negotiation; see
                            [RFC7231], Section 3.4).
                          type: string
                        status:
                          description: >
                            The HTTP status code for this occurrence of the
                            problem. The HTTP status code ([RFC7231], Section 6)
                            generated by the origin server for this occurrence
                            of the problem.
                          type: integer
                        detail:
                          description: >
                            A human-readable explanation specific to this
                            occurrence of the problem.
                          type: string
                        instance:
                          description: >
                            A URI reference that identifies the specific
                            occurrence of the problem. It may yield further
                            information if dereferenced.
                          type: string
                          format: URI
                    resourceChanges:
                      description: >
                        This attribute contains information about the cumulative
                        changes to virtualised resources that were performed so
                        far by the LCM operation since its start, if applicable
                      type: object
                      properties:
                        affectedVnfs:
                          description: >
                            Information about the VNF instances that were
                            affected during the lifecycle operation, if this
                            notification represents the result of a lifecycle
                            operation.
                          type: array
                          items:
                            description: >
                              This type provides information about added,
                              deleted and modified VNFs.  It shall comply with
                              the provisions in Table 6.5.3.2-1.
                            type: object
                            required:
                              - vnfInstanceId
                              - vnfdId
                              - vnfProfileId
                            properties:
                              vnfInstanceId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              vnfdId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              vnfProfileId:
                                description: >
                                  An identifier that is unique within a NS
                                  descriptor. Representation: string of variable
                                  length.
                                type: string
                              vnfName:
                                description: |
                                  Name of the VNF Instance.
                                type: string
                              changeType:
                                description: >
                                  Signals the type of change Permitted values: -
                                  ADD - REMOVE - INSTANTIATE - TERMINATE - SCALE
                                  - CHANGE_FLAVOUR - HEAL - OPERATE -
                                  MODIFY_INFORMATION -
                                  CHANGE_EXTERNAL_VNF_CONNECTIVITY
                                type: string
                                enum:
                                  - ADD
                                  - REMOVE
                                  - INSTANTIATE
                                  - TERMINATE
                                  - SCALE
                                  - CHANGE_FLAVOUR
                                  - HEAL
                                  - OPERATE
                                  - MODIFY_INFORMATION
                                  - CHANGE_EXTERNAL_VNF_CONNECTIVITY
                              changeResult:
                                description: >
                                  Signals the result of change identified by the
                                  "changeType" attribute. Permitted values: -
                                  COMPLETED - ROLLED_BACK - FAILED
                                type: string
                                enum:
                                  - COMPLETED
                                  - ROLLED_BACK
                                  - FAILED
                              changedInfo:
                                description: >
                                  Information about the changed VNF instance
                                  information, including VNF configurable
                                  properties,if applicable. When the
                                  "changedInfo" attribute is present,  either
                                  the "changedVnfInfo" attribute or the
                                  "changedExtConnectivity" attribute or both
                                  shall be present.
                                type: object
                                required:
                                  - self
                                properties:
                                  changedVnfInfo:
                                    description: >
                                      This type represents the information that
                                      is requested to be modified for a VNF
                                      instance. The information to be modified
                                      shall comply with the associated NSD.
                                      EXAMPLE. The vnfPkgId attribute value for
                                      a particular VNF instance can only be
                                      updated with a value that matches the
                                      identifier value of a VNF package whose
                                      vnfdId is present in the associated
                                      profile of the NSD.
                                    type: object
                                    required:
                                      - vnfInstanceId
                                    properties:
                                      vnfInstanceId:
                                        description: >
                                          An identifier with the intention of
                                          being globally unique.
                                        type: string
                                      vnfInstanceName:
                                        description: >
                                          New value of the "vnfInstanceName"
                                          attribute in "VnfInstance", or "null" to
                                          remove the attribute.
                                        type: string
                                      vnfInstanceDescription:
                                        description: >
                                          New value of the
                                          "vnfInstanceDescription" attribute in
                                          "VnfInstance", or "null" to remove the
                                          attribute.
                                        type: string
                                      vnfPkgId:
                                        description: >
                                          An identifier with the intention of
                                          being globally unique.
                                        type: string
                                      vnfConfigurableProperties:
                                        description: >
                                          This type represents a list of key-value
                                          pairs. The order of the pairs in the
                                          list is not significant. In JSON, a set
                                          of key- value pairs is represented as an
                                          object. It shall comply with the
                                          provisions  defined in clause 4 of IETF
                                          RFC 7159. 
                                        type: object
                                      Metadata:
                                        description: >
                                          This type represents a list of key-value
                                          pairs. The order of the pairs in the
                                          list is not significant. In JSON, a set
                                          of key- value pairs is represented as an
                                          object. It shall comply with the
                                          provisions  defined in clause 4 of IETF
                                          RFC 7159. 
                                        type: object
                                      Extensions:
                                        description: >
                                          This type represents a list of key-value
                                          pairs. The order of the pairs in the
                                          list is not significant. In JSON, a set
                                          of key- value pairs is represented as an
                                          object. It shall comply with the
                                          provisions  defined in clause 4 of IETF
                                          RFC 7159. 
                                        type: object
                                  changedExtConnectivity:
                                    type: object
                                    required:
                                      - id
                                      - resourceHandle
                                    properties:
                                      id:
                                        description: >
                                          An identifier with the intention of
                                          being globally unique.
                                        type: string
                                      resourceHandle:
                                        required:
                                          - vimConnectionId
                                          - resourceId
                                        type: object
                                        description: >
                                          This type represents the information
                                          that allows addressing a virtualised
                                          resource that is used by a VNF instance.
                                          Information about the resource is
                                          available from the VIM.
                                        properties:
                                          vimConnectionId:
                                            description: >
                                              An identifier with the intention of
                                              being globally unique.
                                            type: string
                                          resourceProviderId:
                                            description: >
                                              An identifier with the intention of
                                              being globally unique.
                                            type: string
                                          resourceId:
                                            description: >
                                              An identifier maintained by the VIM or
                                              other resource provider. It is expected
                                              to be unique within the VIM instance.
                                            type: string
                                          vimLevelResourceType:
                                            description: >
                                              Type of the resource in the scope of the
                                              VIM or the resource provider.
                                            type: string
                                      extLinkPorts:
                                        description: |
                                          Link ports of this VL.
                                        type: array
                                        items:
                                          description: >
                                            This type represents information about a
                                            link port of an external VL, i.e. a port
                                            providing connectivity for the VNF to an
                                            NS VL. 
                                          type: object
                                          required:
                                            - id
                                            - resourceHandle
                                          properties:
                                            id:
                                              description: >
                                                An identifier with the intention of
                                                being globally unique.
                                              type: string
                                            resourceHandle:
                                              required:
                                                - vimConnectionId
                                                - resourceId
                                              type: object
                                              description: >
                                                This type represents the information
                                                that allows addressing a virtualised
                                                resource that is used by a VNF instance.
                                                Information about the resource is
                                                available from the VIM.
                                              properties:
                                                vimConnectionId:
                                                  description: >
                                                    An identifier with the intention of
                                                    being globally unique.
                                                  type: string
                                                resourceProviderId:
                                                  description: >
                                                    An identifier with the intention of
                                                    being globally unique.
                                                  type: string
                                                resourceId:
                                                  description: >
                                                    An identifier maintained by the VIM or
                                                    other resource provider. It is expected
                                                    to be unique within the VIM instance.
                                                  type: string
                                                vimLevelResourceType:
                                                  description: >
                                                    Type of the resource in the scope of the
                                                    VIM or the resource provider.
                                                  type: string
                                            cpInstanceId:
                                              description: >
                                                An identifier that is unique for the
                                                respective type within a VNF instance,
                                                but may not be globally unique.
                                              type: string
                        affectedPnfs:
                          description: >
                            Information about the PNF instances that were
                            affected during the lifecycle operation, if this
                            notification represents the result of a lifecycle
                            operation.
                          type: array
                          items:
                            description: >
                              This type provides information about added,
                              deleted and modified PNFs.  It shall comply with
                              the provisions in Table 6.5.3.3-1.
                            type: object
                            required:
                              - pnfId
                              - pnfdId
                              - pnfProfileId
                              - cpInstanceId
                            properties:
                              pnfId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              pnfdId:
                                description: >
                                  An identifier that is unique within a NS
                                  descriptor. Representation: string of variable
                                  length.
                                type: string
                              pnfProfileId:
                                description: >
                                  An identifier that is unique within a NS
                                  descriptor. Representation: string of variable
                                  length.
                                type: string
                              pnfName:
                                description: |
                                  Name of the PNF.
                                type: string
                              cpInstanceId:
                                description: |
                                  Identifier of the CP in the scope of the PNF.
                                type: array
                                items:
                                  description: >
                                    Identifier of the CP in the scope of the
                                    PNF.
                                  type: string
                              changeType:
                                description: >
                                  Signals the type of change. Permitted values:
                                  - ADD - REMOVE - MODIFY
                                type: string
                                enum:
                                  - ADD
                                  - REMOVE
                                  - MODIFY
                              changeResult:
                                description: >
                                  Signals the result of change identified by the
                                  "changeType" attribute. Permitted values: -
                                  COMPLETED - ROLLED_BACK - FAILED
                                type: string
                                enum:
                                  - COMPLETED
                                  - ROLLED_BACK
                                  - FAILED
                        affectedVls:
                          description: >
                            Information about the VL instances that were
                            affected during the lifecycle operation, if this
                            notification represents the result of a lifecycle
                            operation.
                          type: array
                          items:
                            description: >
                              This type provides information about added,
                              deleted and modified VLs.  It shall comply with
                              the provisions in Table 6.5.3.4-1.
                            type: object
                            required:
                              - nsVirtualLinkInstanceId
                              - nsVirtualLinkDescId
                              - vlProfileId
                            properties:
                              nsVirtualLinkInstanceId:
                                description: >
                                  An identifier that is unique with respect to a
                                  NS.  Representation: string of variable
                                  length.
                                type: string
                              nsVirtualLinkDescId:
                                description: >
                                  An identifier that is unique within a NS
                                  descriptor. Representation: string of variable
                                  length.
                                type: string
                              vlProfileId:
                                description: >
                                  An identifier that is unique within a NS
                                  descriptor. Representation: string of variable
                                  length.
                                type: string
                              changeType:
                                description: >
                                  Signals the type of change. Permitted values:
                                  - ADD - DELETE - MODIFY - ADD_LINK_PORT -
                                  REMOVE_LINK_PORT
                                type: string
                                enum:
                                  - ADD
                                  - DELETE
                                  - MODIFY
                                  - ADD_LINK_PORT
                                  - REMOVE_LINK_PORT
                              changeResult:
                                description: >
                                  Signals the result of change identified by the
                                  "changeType" attribute. Permitted values: -
                                  COMPLETED - ROLLED_BACK - FAILED
                                type: string
                                enum:
                                  - COMPLETED
                                  - ROLLED_BACK
                                  - FAILED
                        affectedVnffgs:
                          description: >
                            Information about the VNFFG instances that were
                            affected during the lifecycle operation, if this
                            notification               represents the result of
                            a lifecycle operation. See note
                          type: array
                          items:
                            description: >
                              This type provides information about added,
                              deleted and modified VNFFG instances.  It shall
                              comply with the provisions in Table 6.5.3.5-1.
                            type: object
                            required:
                              - vnffgInstanceId
                              - vnffgdId
                            properties:
                              vnffgInstanceId:
                                description: >
                                  An identifier that is unique with respect to a
                                  NS.  Representation: string of variable
                                  length.
                                type: string
                              vnffgdId:
                                description: >
                                  An identifier that is unique within a NS
                                  descriptor. Representation: string of variable
                                  length.
                                type: string
                              changeType:
                                description: >
                                  Signals the type of change. Permitted values:
                                  - ADD - DELETE - MODIFY
                                type: string
                                enum:
                                  - ADD
                                  - DELETE
                                  - MODIFY
                              changeResult:
                                description: >
                                  Signals the result of change identified by the
                                  "changeType" attribute. Permitted values: -
                                  COMPLETED - ROLLED_BACK - FAILED
                                type: string
                                enum:
                                  - COMPLETED
                                  - ROLLED_BACK
                                  - FAILED
                        affectedNss:
                          description: >
                            Information about the nested NS instances that were
                            affected during the lifecycle operation, if this
                            notification represents the result of a lifecycle
                            operation. See note.
                          type: array
                          items:
                            description: >
                              This type provides information about added,
                              deleted and modified nested NSs.  It shall comply
                              with the provisions in Table 6.5.3.6-1.
                            type: object
                            required:
                              - nsInstanceId
                              - nsdId
                            properties:
                              nsInstanceId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              nsdId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              changeType:
                                description: >
                                  Signals the type of lifecycle change.
                                  Permitted values: - ADD - REMOVE - INSTANTIATE
                                  - SCALE - UPDATE - HEAL - TERMINATE
                                type: string
                                enum:
                                  - ADD
                                  - REMOVE
                                  - INSTANTIATE
                                  - SCALE
                                  - UPDATE
                                  - HEAL
                                  - TERMINATE
                              changeResult:
                                description: >
                                  Signals the result of change identified by the
                                  "changeType" attribute. Permitted values: -
                                  COMPLETED - ROLLED_BACK - FAILED -
                                  PARTIALLY_COMPLETED           
                                type: string
                                enum:
                                  - COMPLETED
                                  - ROLLED_BACK
                                  - FAILED
                                  - PARTIALLY_COMPLETED
                        affectedSaps:
                          description: >
                            Information about the nested NS instances that were
                            affected during the lifecycle operation, if this
                            notification represents the result of a lifecycle
                            operation. See note.
                          type: array
                          items:
                            description: >
                              This type provides information about added,
                              deleted and modified SAP of a NS.  It shall comply
                              with the provisions in Table 6.5.3.7-1.
                            type: object
                            required:
                              - sapInstanceId
                              - sapdId
                            properties:
                              sapInstanceId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              sapdId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              sapName:
                                description: |
                                  Human readable name for the SAP.
                                type: string
                              changeType:
                                description: >
                                  Signals the type of lifecycle change.
                                  Permitted values: - ADD - REMOVE - MODIFY
                                type: string
                                enum:
                                  - ADD
                                  - REMOVE
                                  - MODIFY
                              changeResult:
                                description: >
                                  Signals the result of change identified by the
                                  "changeType" attribute. Permitted values: -
                                  COMPLETED - ROLLED_BACK - FAILED
                                type: string
                                enum:
                                  - COMPLETED
                                  - ROLLED_BACK
                                  - FAILED
                    _links:
                      description: |
                        Links to resources related to this resource.
                      type: object
                      required:
                        - self
                        - nsInstance
                      properties:
                        self:
                          description: |
                            This type represents a link to a resource.
                          type: object
                          required:
                            - href
                          properties:
                            href:
                              description: |
                                URI of the referenced resource.
                              type: string
                              format: url
                        nsInstance:
                          description: |
                            This type represents a link to a resource.
                          type: object
                          required:
                            - href
                          properties:
                            href:
                              description: |
                                URI of the referenced resource.
                              type: string
                              format: url
                        cancel:
                          description: |
                            This type represents a link to a resource.
                          type: object
                          required:
                            - href
                          properties:
                            href:
                              description: |
                                URI of the referenced resource.
                              type: string
                              format: url
                        retry:
                          description: |
                            This type represents a link to a resource.
                          type: object
                          required:
                            - href
                          properties:
                            href:
                              description: |
                                URI of the referenced resource.
                              type: string
                              format: url
                        rollback:
                          description: |
                            This type represents a link to a resource.
                          type: object
                          required:
                            - href
                          properties:
                            href:
                              description: |
                                URI of the referenced resource.
                              type: string
                              format: url
                        continue:
                          description: |
                            This type represents a link to a resource.
                          type: object
                          required:
                            - href
                          properties:
                            href:
                              description: |
                                URI of the referenced resource.
                              type: string
                              format: url
                        fail:
                          description: |
                            This type represents a link to a resource.
                          type: object
                          required:
                            - href
                          properties:
                            href:
                              description: |
                                URI of the referenced resource.
                              type: string
                              format: url
        '400':
          description: >
            Bad Request

            Error: Invalid attribute-based filtering parameters. The response
            body shall contain a ProblemDetails structure, in which the "detail"
            attribute should convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '401':
          description: >
            Unauthorized If the request contains no access token even though one
            is required, or if the request contains an authorization token that
            is invalid (e.g. expired or revoked), the API producer should
            respond with this response. The details of the error shall be
            returned in the WWW-Authenticate HTTP header, as defined in IETF RFC
            6750 and IETF RFC 7235. The ProblemDetails structure may be
            provided.
          headers:
            Content-Type:
              type: string
              description: The MIME type of the body of the response.
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '403':
          description: >
            Forbidden If the API consumer is not allowed to perform a particular
            request to a particular resource, the API producer shall respond
            with this response code. The "ProblemDetails" structure shall be
            provided.  It should include in the "detail" attribute information
            about the source of the problem, and may indicate how to solve it.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '404':
          description: >
            Not Found If the API producer did not find a current representation
            for the resource addressed by the URI passed in the request, or is
            not willing to disclose that one exists, it shall respond with this
            response code.  The "ProblemDetails" structure may be provided,
            including in the "detail" attribute information about the source of
            the problem, e.g. a wrong resource URI variable.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '405':
          description: >
            Method Not Allowed If a particular HTTP method is not supported for
            a particular resource, the API producer shall respond with this
            response code. The "ProblemDetails" structure may be omitted in that
            case.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '406':
          description: >
            Not Acceptable If the Accept HTTP header does not contain at least
            one name of a content type that is acceptable to the API producer,
            the API producer shall respond with this response code. The
            ProblemDetails structure may be omitted in that case.        
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '409':
          description: >
            Conflict

            Another request is in progress that prohibits the fulfilment of the
            current request, or the current resource state is inconsistent with
            the request.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '500':
          description: >
            Internal Server Error If there is an application error not related
            to the client's input that cannot be easily mapped to any other HTTP
            response code ("catch all error"), the API producer shall respond
            withthis response code. The ProblemDetails structure shall be
            provided, and shall include in the "detail" attribute more
            information about the source of the problem.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '503':
          description: >
            Service Unavailable If the API producer encounters an internal
            overload situation of itself or of a system it relies on, it should
            respond with this response code, following the provisions in IETF
            RFC 7231 [13] for the use of the Retry-After HTTP header and for the
            alternative to refuse the connection. The "ProblemDetails" structure
            may be omitted.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
  '/ns_lcm_op_occs/{nsLcmOpOccId}':
    parameters:
      - name: nsLcmOpOccId
        description: |
          Identifier of a NS lifecycle management operation occurrence.
        in: path
        type: string
        required: true
    get:
      summary: Read an individual NS LCM operation occurrence resource.
      description: >
        The client can use this method to retrieve status information about  a
        NS lifecycle management operation occurrence by reading an individual
        "NS LCM operation occurrence" resource. This method shall follow the
        provisions specified in the  Tables 6.4.10.3.2-1 and 6.4.10.3.2-2 for
        URI query parameters, request and response data structures, and response
        codes.
      parameters:
        - name: Accept
          description: >
            Content-Types that are acceptable for the response. Reference: IETF
            RFC 7231
          in: header
          required: true
          type: string
        - name: Authorization
          description: |
            The authorization token for the request. Reference: IETF RFC 7235
          in: header
          required: false
          type: string
        - name: Content-Type
          description: |
            The MIME type of the body of the request. Reference: IETF RFC 7231
          in: header
          required: true
          type: string
      responses:
        '200':
          description: >
            200 OK

            Information about an individual NS instance was queried
            successfully. The response body shall contain status information
            about a NS lifecycle management operation occurrence (see clause
            6.5.2.3).
          schema:
            type: object
            properties:
              NsLcmOpOcc:
                description: >
                  This type represents a request a NS lifecycle operation
                  occurrence.  It shall comply with the provisions defined in
                  Table 6.5.2.3-1.
                type: object
                required:
                  - id
                  - operationState
                  - stateEnteredTime
                  - nsInstanceId
                  - lcmOperationType
                  - startTime
                  - isAutomaticInvocation
                  - operationParams
                  - isCancelPending
                  - _links
                properties:
                  id:
                    description: |
                      An identifier with the intention of being globally unique.
                    type: string
                  operationState:
                    description: >
                      The enumeration NsLcmOperationStateType shall comply with
                      the provisions defined in Table 6.5.4.4-1. Value |
                      Description ------|------------ PROCESSING | The LCM
                      operation is currently in execution. COMPLETED | The LCM
                      operation has been completed successfully.
                      PARTIALLY_COMPLETED | The LCM operation has been partially
                      completed with accepTable errors. FAILED_TEMP | The LCM
                      operation has failed and execution has stopped, but the
                      execution of the operation is not considered to be closed.
                      FAILED | The LCM operation has failed and it cannot be
                      retried or rolled back, as it is determined that such
                      action won't succeed. OLLING_BACK | The LCM operation is
                      currently being rolled back. ROLLED_BACK | The LCM
                      operation has been successfully rolled back, i.e. The
                      state of the VNF prior to the original operation
                      invocation has been restored as closely as possible.
                    type: string
                    enum:
                      - PROCESSING
                      - COMPLETED
                      - FAILED_TEMP
                      - FAILED
                      - ROLLING_BACK
                      - ROLLED_BACK
                  stateEnteredTime:
                    description: |
                      Date-time when the current state was entered.
                    type: string
                    format: date-time
                  nsInstanceId:
                    description: |
                      An identifier with the intention of being globally unique.
                    type: string
                  lcmOperationType:
                    description: >
                      The enumeration NsLcmOpType represents those lifecycle
                      operations that trigger a NS lifecycle management
                      operation occurrence notification. Value | Description
                      ------|------------ INSTANTIATE | Represents the
                      "Instantiate NS" LCM operation. SCALE | Represents the
                      "Scale NS" LCM operation. UPDATE | Represents the "Update
                      NS" LCM operation. TERMINATE | Represents the "Terminate
                      NS" LCM operation. HEAL | Represents the "Heal NS" LCM
                      operation.
                    type: string
                    enum:
                      - INSTANTIATE
                      - SCALE
                      - UPDATE
                      - TERMINATE
                      - HEAL
                  startTime:
                    description: |
                      Date-time of the start of the operation.
                    type: string
                    format: date-time
                  isAutomaticInvocation:
                    description: >
                      Set to true if this NS LCM operation occurrence has been
                      automatically triggered by the NFVO. This occurs in the
                      case of auto-scaling, auto-healing and when a nested NS is
                      modified as a result of an operation on its composite NS.
                      Set to false otherwise.
                    type: boolean
                  operationParams:
                    description: >
                      Input parameters of the LCM operation. This attribute
                      shall be formatted according to the request data type of
                      the related LCM operation. The following mapping between
                      lcmOperationType and the data type of this attribute shall
                      apply: - INSTANTIATE: InstantiateNsRequest - SCALE:
                      ScaleNsRequest - UPDATE: UpdateNsRequest - HEAL:
                      HealNsRequest - TERMINATE: TerminateNsRequest
                    type: string
                    enum:
                      - INSTANTIATE
                      - SCALE
                      - UPDATE
                      - HEAL
                      - TERMINATE
                  isCancelPending:
                    description: >
                      If the LCM operation occurrence is in "PROCESSING" or
                      "ROLLING_BACK" state and the operation is being cancelled,
                      this attribute shall be set to true. Otherwise, it shall
                      be set to false.
                    type: boolean
                  cancelMode:
                    description: >
                      Cancellation mode.

                      The NFVO shall not start any new VNF lifecycle management
                      and resource management operation, and shall wait for the
                      ongoing VNF lifecycle management and resource management
                      operations in the underlying system, typically the VNFM
                      and VIM, to finish execution or to time out. After that,
                      the NFVO shall put the operation occurrence into the
                      FAILED_TEMP state.

                      The NFVO shall not start any new VNF lifecycle management
                      and resource management operation, shall cancel the
                      ongoing VNF lifecycle management and resource management
                      operations in the underlying system, typically the VNFM
                      and VIM, and shall wait for the cancellation to finish or
                      to time out. After that, the NFVO shall put the operation
                      occurrence into the FAILED_TEMP state.
                    type: string
                    enum:
                      - GRACEFUL
                      - FORCEFUL
                  error:
                    description: >
                      The definition of the general "ProblemDetails" data
                      structure from IETF RFC 7807 [19] is reproduced inthis
                      structure. Compared to the general framework defined in
                      IETF RFC 7807 [19], the "status" and "detail" attributes
                      are mandated to be included by the present document, to
                      ensure that the response contains additional textual
                      information about an error. IETF RFC 7807 [19] foresees
                      extensibility of the "ProblemDetails" type. It is possible
                      that particular APIs in the present document, or
                      particular implementations, define extensions to define
                      additional attributes that provide more information about
                      the error. The description column only provides some
                      explanation of the meaning to Facilitate understanding of
                      the design. For a full description, see IETF RFC 7807
                      [19].
                    type: object
                    required:
                      - status
                      - detail
                    properties:
                      type:
                        description: >
                          A URI reference according to IETF RFC 3986 [5] that
                          identifies the problem type. It is encouraged that the
                          URI provides human-readable documentation for the
                          problem (e.g. using HTML) when dereferenced. When this
                          member is not present, its value is assumed to be
                          "about:blank".
                        type: string
                        format: URI
                      title:
                        description: >
                          A short, human-readable summary of the problem type.
                          It should not change from occurrence to occurrence of
                          the problem, except for purposes of localization. If
                          type is given and other than "about:blank", this
                          attribute shall also be provided. A short,
                          human-readable summary of the problem type.  It SHOULD
                          NOT change from occurrence to occurrence of the
                          problem, except for purposes of localization (e.g.,
                          using proactive content negotiation; see [RFC7231],
                          Section 3.4).
                        type: string
                      status:
                        description: >
                          The HTTP status code for this occurrence of the
                          problem. The HTTP status code ([RFC7231], Section 6)
                          generated by the origin server for this occurrence of
                          the problem.
                        type: integer
                      detail:
                        description: >
                          A human-readable explanation specific to this
                          occurrence of the problem.
                        type: string
                      instance:
                        description: >
                          A URI reference that identifies the specific
                          occurrence of the problem. It may yield further
                          information if dereferenced.
                        type: string
                        format: URI
                  resourceChanges:
                    description: >
                      This attribute contains information about the cumulative
                      changes to virtualised resources that were performed so
                      far by the LCM operation since its start, if applicable
                    type: object
                    properties:
                      affectedVnfs:
                        description: >
                          Information about the VNF instances that were affected
                          during the lifecycle operation, if this notification
                          represents the result of a lifecycle operation.
                        type: array
                        items:
                          description: >
                            This type provides information about added, deleted
                            and modified VNFs.  It shall comply with the
                            provisions in Table 6.5.3.2-1.
                          type: object
                          required:
                            - vnfInstanceId
                            - vnfdId
                            - vnfProfileId
                          properties:
                            vnfInstanceId:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                            vnfdId:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                            vnfProfileId:
                              description: >
                                An identifier that is unique within a NS
                                descriptor. Representation: string of variable
                                length.
                              type: string
                            vnfName:
                              description: |
                                Name of the VNF Instance.
                              type: string
                            changeType:
                              description: >
                                Signals the type of change Permitted values: -
                                ADD - REMOVE - INSTANTIATE - TERMINATE - SCALE -
                                CHANGE_FLAVOUR - HEAL - OPERATE -
                                MODIFY_INFORMATION -
                                CHANGE_EXTERNAL_VNF_CONNECTIVITY
                              type: string
                              enum:
                                - ADD
                                - REMOVE
                                - INSTANTIATE
                                - TERMINATE
                                - SCALE
                                - CHANGE_FLAVOUR
                                - HEAL
                                - OPERATE
                                - MODIFY_INFORMATION
                                - CHANGE_EXTERNAL_VNF_CONNECTIVITY
                            changeResult:
                              description: >
                                Signals the result of change identified by the
                                "changeType" attribute. Permitted values: -
                                COMPLETED - ROLLED_BACK - FAILED
                              type: string
                              enum:
                                - COMPLETED
                                - ROLLED_BACK
                                - FAILED
                            changedInfo:
                              description: >
                                Information about the changed VNF instance
                                information, including VNF configurable
                                properties,if applicable. When the "changedInfo"
                                attribute is present,  either the
                                "changedVnfInfo" attribute or the
                                "changedExtConnectivity" attribute or both shall
                                be present.
                              type: object
                              required:
                                - self
                              properties:
                                changedVnfInfo:
                                  description: >
                                    This type represents the information that is
                                    requested to be modified for a VNF instance.
                                    The information to be modified shall comply
                                    with the associated NSD. EXAMPLE. The
                                    vnfPkgId attribute value for a particular
                                    VNF instance can only be updated with a
                                    value that matches the identifier value of a
                                    VNF package whose vnfdId is present in the
                                    associated profile of the NSD.
                                  type: object
                                  required:
                                    - vnfInstanceId
                                  properties:
                                    vnfInstanceId:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    vnfInstanceName:
                                      description: >
                                        New value of the "vnfInstanceName"
                                        attribute in "VnfInstance", or "null" to
                                        remove the attribute.
                                      type: string
                                    vnfInstanceDescription:
                                      description: >
                                        New value of the
                                        "vnfInstanceDescription" attribute in
                                        "VnfInstance", or "null" to remove the
                                        attribute.
                                      type: string
                                    vnfPkgId:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    vnfConfigurableProperties:
                                      description: >
                                        This type represents a list of key-value
                                        pairs. The order of the pairs in the
                                        list is not significant. In JSON, a set
                                        of key- value pairs is represented as an
                                        object. It shall comply with the
                                        provisions  defined in clause 4 of IETF
                                        RFC 7159. 
                                      type: object
                                    Metadata:
                                      description: >
                                        This type represents a list of key-value
                                        pairs. The order of the pairs in the
                                        list is not significant. In JSON, a set
                                        of key- value pairs is represented as an
                                        object. It shall comply with the
                                        provisions  defined in clause 4 of IETF
                                        RFC 7159. 
                                      type: object
                                    Extensions:
                                      description: >
                                        This type represents a list of key-value
                                        pairs. The order of the pairs in the
                                        list is not significant. In JSON, a set
                                        of key- value pairs is represented as an
                                        object. It shall comply with the
                                        provisions  defined in clause 4 of IETF
                                        RFC 7159. 
                                      type: object
                                changedExtConnectivity:
                                  type: object
                                  required:
                                    - id
                                    - resourceHandle
                                  properties:
                                    id:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    resourceHandle:
                                      required:
                                        - vimConnectionId
                                        - resourceId
                                      type: object
                                      description: >
                                        This type represents the information
                                        that allows addressing a virtualised
                                        resource that is used by a VNF instance.
                                        Information about the resource is
                                        available from the VIM.
                                      properties:
                                        vimConnectionId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceProviderId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                                        vimLevelResourceType:
                                          description: >
                                            Type of the resource in the scope of the
                                            VIM or the resource provider.
                                          type: string
                                    extLinkPorts:
                                      description: |
                                        Link ports of this VL.
                                      type: array
                                      items:
                                        description: >
                                          This type represents information about a
                                          link port of an external VL, i.e. a port
                                          providing connectivity for the VNF to an
                                          NS VL. 
                                        type: object
                                        required:
                                          - id
                                          - resourceHandle
                                        properties:
                                          id:
                                            description: >
                                              An identifier with the intention of
                                              being globally unique.
                                            type: string
                                          resourceHandle:
                                            required:
                                              - vimConnectionId
                                              - resourceId
                                            type: object
                                            description: >
                                              This type represents the information
                                              that allows addressing a virtualised
                                              resource that is used by a VNF instance.
                                              Information about the resource is
                                              available from the VIM.
                                            properties:
                                              vimConnectionId:
                                                description: >
                                                  An identifier with the intention of
                                                  being globally unique.
                                                type: string
                                              resourceProviderId:
                                                description: >
                                                  An identifier with the intention of
                                                  being globally unique.
                                                type: string
                                              resourceId:
                                                description: >
                                                  An identifier maintained by the VIM or
                                                  other resource provider. It is expected
                                                  to be unique within the VIM instance.
                                                type: string
                                              vimLevelResourceType:
                                                description: >
                                                  Type of the resource in the scope of the
                                                  VIM or the resource provider.
                                                type: string
                                          cpInstanceId:
                                            description: >
                                              An identifier that is unique for the
                                              respective type within a VNF instance,
                                              but may not be globally unique.
                                            type: string
                      affectedPnfs:
                        description: >
                          Information about the PNF instances that were affected
                          during the lifecycle operation, if this notification
                          represents the result of a lifecycle operation.
                        type: array
                        items:
                          description: >
                            This type provides information about added, deleted
                            and modified PNFs.  It shall comply with the
                            provisions in Table 6.5.3.3-1.
                          type: object
                          required:
                            - pnfId
                            - pnfdId
                            - pnfProfileId
                            - cpInstanceId
                          properties:
                            pnfId:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                            pnfdId:
                              description: >
                                An identifier that is unique within a NS
                                descriptor. Representation: string of variable
                                length.
                              type: string
                            pnfProfileId:
                              description: >
                                An identifier that is unique within a NS
                                descriptor. Representation: string of variable
                                length.
                              type: string
                            pnfName:
                              description: |
                                Name of the PNF.
                              type: string
                            cpInstanceId:
                              description: |
                                Identifier of the CP in the scope of the PNF.
                              type: array
                              items:
                                description: |
                                  Identifier of the CP in the scope of the PNF.
                                type: string
                            changeType:
                              description: >
                                Signals the type of change. Permitted values: -
                                ADD - REMOVE - MODIFY
                              type: string
                              enum:
                                - ADD
                                - REMOVE
                                - MODIFY
                            changeResult:
                              description: >
                                Signals the result of change identified by the
                                "changeType" attribute. Permitted values: -
                                COMPLETED - ROLLED_BACK - FAILED
                              type: string
                              enum:
                                - COMPLETED
                                - ROLLED_BACK
                                - FAILED
                      affectedVls:
                        description: >
                          Information about the VL instances that were affected
                          during the lifecycle operation, if this notification
                          represents the result of a lifecycle operation.
                        type: array
                        items:
                          description: >
                            This type provides information about added, deleted
                            and modified VLs.  It shall comply with the
                            provisions in Table 6.5.3.4-1.
                          type: object
                          required:
                            - nsVirtualLinkInstanceId
                            - nsVirtualLinkDescId
                            - vlProfileId
                          properties:
                            nsVirtualLinkInstanceId:
                              description: >
                                An identifier that is unique with respect to a
                                NS.  Representation: string of variable length.
                              type: string
                            nsVirtualLinkDescId:
                              description: >
                                An identifier that is unique within a NS
                                descriptor. Representation: string of variable
                                length.
                              type: string
                            vlProfileId:
                              description: >
                                An identifier that is unique within a NS
                                descriptor. Representation: string of variable
                                length.
                              type: string
                            changeType:
                              description: >
                                Signals the type of change. Permitted values: -
                                ADD - DELETE - MODIFY - ADD_LINK_PORT -
                                REMOVE_LINK_PORT
                              type: string
                              enum:
                                - ADD
                                - DELETE
                                - MODIFY
                                - ADD_LINK_PORT
                                - REMOVE_LINK_PORT
                            changeResult:
                              description: >
                                Signals the result of change identified by the
                                "changeType" attribute. Permitted values: -
                                COMPLETED - ROLLED_BACK - FAILED
                              type: string
                              enum:
                                - COMPLETED
                                - ROLLED_BACK
                                - FAILED
                      affectedVnffgs:
                        description: >
                          Information about the VNFFG instances that were
                          affected during the lifecycle operation, if this
                          notification               represents the result of a
                          lifecycle operation. See note
                        type: array
                        items:
                          description: >
                            This type provides information about added, deleted
                            and modified VNFFG instances.  It shall comply with
                            the provisions in Table 6.5.3.5-1.
                          type: object
                          required:
                            - vnffgInstanceId
                            - vnffgdId
                          properties:
                            vnffgInstanceId:
                              description: >
                                An identifier that is unique with respect to a
                                NS.  Representation: string of variable length.
                              type: string
                            vnffgdId:
                              description: >
                                An identifier that is unique within a NS
                                descriptor. Representation: string of variable
                                length.
                              type: string
                            changeType:
                              description: >
                                Signals the type of change. Permitted values: -
                                ADD - DELETE - MODIFY
                              type: string
                              enum:
                                - ADD
                                - DELETE
                                - MODIFY
                            changeResult:
                              description: >
                                Signals the result of change identified by the
                                "changeType" attribute. Permitted values: -
                                COMPLETED - ROLLED_BACK - FAILED
                              type: string
                              enum:
                                - COMPLETED
                                - ROLLED_BACK
                                - FAILED
                      affectedNss:
                        description: >
                          Information about the nested NS instances that were
                          affected during the lifecycle operation, if this
                          notification represents the result of a lifecycle
                          operation. See note.
                        type: array
                        items:
                          description: >
                            This type provides information about added, deleted
                            and modified nested NSs.  It shall comply with the
                            provisions in Table 6.5.3.6-1.
                          type: object
                          required:
                            - nsInstanceId
                            - nsdId
                          properties:
                            nsInstanceId:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                            nsdId:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                            changeType:
                              description: >
                                Signals the type of lifecycle change. Permitted
                                values: - ADD - REMOVE - INSTANTIATE - SCALE -
                                UPDATE - HEAL - TERMINATE
                              type: string
                              enum:
                                - ADD
                                - REMOVE
                                - INSTANTIATE
                                - SCALE
                                - UPDATE
                                - HEAL
                                - TERMINATE
                            changeResult:
                              description: >
                                Signals the result of change identified by the
                                "changeType" attribute. Permitted values: -
                                COMPLETED - ROLLED_BACK - FAILED -
                                PARTIALLY_COMPLETED           
                              type: string
                              enum:
                                - COMPLETED
                                - ROLLED_BACK
                                - FAILED
                                - PARTIALLY_COMPLETED
                      affectedSaps:
                        description: >
                          Information about the nested NS instances that were
                          affected during the lifecycle operation, if this
                          notification represents the result of a lifecycle
                          operation. See note.
                        type: array
                        items:
                          description: >
                            This type provides information about added, deleted
                            and modified SAP of a NS.  It shall comply with the
                            provisions in Table 6.5.3.7-1.
                          type: object
                          required:
                            - sapInstanceId
                            - sapdId
                          properties:
                            sapInstanceId:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                            sapdId:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                            sapName:
                              description: |
                                Human readable name for the SAP.
                              type: string
                            changeType:
                              description: >
                                Signals the type of lifecycle change. Permitted
                                values: - ADD - REMOVE - MODIFY
                              type: string
                              enum:
                                - ADD
                                - REMOVE
                                - MODIFY
                            changeResult:
                              description: >
                                Signals the result of change identified by the
                                "changeType" attribute. Permitted values: -
                                COMPLETED - ROLLED_BACK - FAILED
                              type: string
                              enum:
                                - COMPLETED
                                - ROLLED_BACK
                                - FAILED
                  _links:
                    description: |
                      Links to resources related to this resource.
                    type: object
                    required:
                      - self
                      - nsInstance
                    properties:
                      self:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
                      nsInstance:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
                      cancel:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
                      retry:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
                      rollback:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
                      continue:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
                      fail:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
          headers:
            Content-Type:
              type: string
              description: >
                The MIME type of the body of the response.This header field
                shall be present if the response has a non-empty message body.
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              maximum: 1
              minimum: 0
        '400':
          description: >
            Bad Request

            Error: Invalid attribute-based filtering parameters. The response
            body shall contain a ProblemDetails structure, in which the "detail"
            attribute should convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '401':
          description: >
            Unauthorized If the request contains no access token even though one
            is required, or if the request contains an authorization token that
            is invalid (e.g. expired or revoked), the API producer should
            respond with this response. The details of the error shall be
            returned in the WWW-Authenticate HTTP header, as defined in IETF RFC
            6750 and IETF RFC 7235. The ProblemDetails structure may be
            provided.
          headers:
            Content-Type:
              type: string
              description: The MIME type of the body of the response.
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '403':
          description: >
            Forbidden If the API consumer is not allowed to perform a particular
            request to a particular resource, the API producer shall respond
            with this response code. The "ProblemDetails" structure shall be
            provided.  It should include in the "detail" attribute information
            about the source of the problem, and may indicate how to solve it.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '404':
          description: >
            Not Found If the API producer did not find a current representation
            for the resource addressed by the URI passed in the request, or is
            not willing to disclose that one exists, it shall respond with this
            response code.  The "ProblemDetails" structure may be provided,
            including in the "detail" attribute information about the source of
            the problem, e.g. a wrong resource URI variable.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '405':
          description: >
            Method Not Allowed If a particular HTTP method is not supported for
            a particular resource, the API producer shall respond with this
            response code. The "ProblemDetails" structure may be omitted in that
            case.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '406':
          description: >
            Not Acceptable If the Accept HTTP header does not contain at least
            one name of a content type that is acceptable to the API producer,
            the API producer shall respond with this response code. The
            ProblemDetails structure may be omitted in that case.        
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '409':
          description: >
            Conflict

            Another request is in progress that prohibits the fulfilment of the
            current request, or the current resource state is inconsistent with
            the request.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '416':
          description: >
            Requested Range Not Satisfiable This code is returned if the
            requested byte range in the Range HTTP header is not present in the
            requested resource.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '500':
          description: >
            Internal Server Error If there is an application error not related
            to the client's input that cannot be easily mapped to any other HTTP
            response code ("catch all error"), the API producer shall respond
            withthis response code. The ProblemDetails structure shall be
            provided, and shall include in the "detail" attribute more
            information about the source of the problem.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '503':
          description: >
            Service Unavailable If the API producer encounters an internal
            overload situation of itself or of a system it relies on, it should
            respond with this response code, following the provisions in IETF
            RFC 7231 [13] for the use of the Retry-After HTTP header and for the
            alternative to refuse the connection. The "ProblemDetails" structure
            may be omitted.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
  '/ns_lcm_op_occs/{nsLcmOpOccId}/retry':
    parameters:
      - name: nsLcmOpOccId
        description: >
          Identifier of a NS lifecycle management operation occurrence to be
          retried.

          This identifier can be retrieved from the resource referenced by the
          "Location" HTTP header in the response to a POST request triggering a
          NS LCM operation. It can also be retrieved from the "nsLcmOpOccId"
          attribute in the NsLcmOperationOccurrenceNotification.
        in: path
        type: string
        required: true
    post:
      summary: Retry a NS lifecycle management operation occurrence.
      description: >
        The POST method initiates retrying a NS lifecycle management operation 
        if that operation has experienced a temporary failure, i.e. the related
        "NS LCM operation occurrence" is in "FAILED_TEMP" state. This method
        shall follow the provisions specified in the  Tables 6.4.11.3.1-1 and
        6.4.11.3.1-2 for URI query parameters, request and response data
        structures, and response codes.
      parameters:
        - name: Authorization
          description: |
            The authorization token for the request. Reference: IETF RFC 7235
          in: header
          required: false
          type: string
      responses:
        '202':
          description: >
            Accepted

            The request was accepted for processing, but processing has not been
            completed. The response shall have an empty payload body.
          headers:
            Location:
              description: The resource URI of the created NS instance
              type: string
              format: url
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
        '400':
          description: >
            Bad Request

            Error: Invalid attribute-based filtering parameters. The response
            body shall contain a ProblemDetails structure, in which the "detail"
            attribute should convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '401':
          description: >
            Unauthorized If the request contains no access token even though one
            is required, or if the request contains an authorization token that
            is invalid (e.g. expired or revoked), the API producer should
            respond with this response. The details of the error shall be
            returned in the WWW-Authenticate HTTP header, as defined in IETF RFC
            6750 and IETF RFC 7235. The ProblemDetails structure may be
            provided.
          headers:
            Content-Type:
              type: string
              description: The MIME type of the body of the response.
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '403':
          description: >
            Forbidden If the API consumer is not allowed to perform a particular
            request to a particular resource, the API producer shall respond
            with this response code. The "ProblemDetails" structure shall be
            provided.  It should include in the "detail" attribute information
            about the source of the problem, and may indicate how to solve it.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '404':
          description: >
            Not Found Error: The API producer did not find a current
            representation for the target resource or is not willing to disclose
            that one exists. Specifically in case of this task resource, the 
            response code 404 shall also be returned if the task is not
            supported for the NS LCM operation occurrence represented by the
            parent resource, which means that the task resource consequently
            does not exist.  In this case, the response body shall be present,
            and shall contain a ProblemDetails structure, in which the "detail"
            attribute shall convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '405':
          description: >
            Method Not Allowed If a particular HTTP method is not supported for
            a particular resource, the API producer shall respond with this
            response code. The "ProblemDetails" structure may be omitted in that
            case.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '406':
          description: >
            Not Acceptable If the Accept HTTP header does not contain at least
            one name of a content type that is acceptable to the API producer,
            the API producer shall respond with this response code. The
            ProblemDetails structure may be omitted in that case.        
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '409':
          description: >
            The operation cannot be executed currently, due to a conflict with
            the state of the NS instance resource. Typically, this is due to the
            fact that the NS instance resource is not in FAILED_TEMP state, or
            another error handling action is starting, such as rollback or fail.
            The response body shall contain a ProblemDetails structure, in which
            the "detail" attribute should convey more information about the
            error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '500':
          description: >
            Internal Server Error If there is an application error not related
            to the client's input that cannot be easily mapped to any other HTTP
            response code ("catch all error"), the API producer shall respond
            withthis response code. The ProblemDetails structure shall be
            provided, and shall include in the "detail" attribute more
            information about the source of the problem.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '503':
          description: >
            Service Unavailable If the API producer encounters an internal
            overload situation of itself or of a system it relies on, it should
            respond with this response code, following the provisions in IETF
            RFC 7231 [13] for the use of the Retry-After HTTP header and for the
            alternative to refuse the connection. The "ProblemDetails" structure
            may be omitted.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
  '/ns_lcm_op_occs/{nsLcmOpOccId}/rollback':
    parameters:
      - name: nsLcmOpOccId
        description: >
          Identifier of a NS lifecycle management operation occurrence to be
          rolled back.

          This identifier can be retrieved from the resource referenced by the
          "Location" HTTP header in the response to a POST request triggering a
          NS LCM operation. It can also be retrieved from the "nsLcmOpOccId"
          attribute in the NsLcmOperationOccurrenceNotification.
        in: path
        required: true
        type: string
    post:
      summary: Rollback a NS lifecycle management operation occurrence.
      description: >
        The POST method initiates rolling back a NS lifecycle operation  if that
        operation has experienced a temporary failure, i.e. the related "NS LCM
        operation occurrence" is in "FAILED_TEMP" state. This method shall
        follow the provisions specified in the  Tables 6.4.12.3.1-1 and
        6.4.12.3.1-2 for URI query parameters, request and response data
        structures, and response codes.
      parameters:
        - name: Authorization
          description: |
            The authorization token for the request. Reference: IETF RFC 7235
          in: header
          required: false
          type: string
      responses:
        '202':
          description: >
            Accepted

            The request was accepted for processing, but processing has not been
            completed. The response shall have an empty payload body.
          headers:
            Location:
              description: The resource URI of the created NS instance
              type: string
              format: url
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
        '400':
          description: >
            Bad Request

            Error: Invalid attribute-based filtering parameters. The response
            body shall contain a ProblemDetails structure, in which the "detail"
            attribute should convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '401':
          description: >
            Unauthorized If the request contains no access token even though one
            is required, or if the request contains an authorization token that
            is invalid (e.g. expired or revoked), the API producer should
            respond with this response. The details of the error shall be
            returned in the WWW-Authenticate HTTP header, as defined in IETF RFC
            6750 and IETF RFC 7235. The ProblemDetails structure may be
            provided.
          headers:
            Content-Type:
              type: string
              description: The MIME type of the body of the response.
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '403':
          description: >
            Forbidden If the API consumer is not allowed to perform a particular
            request to a particular resource, the API producer shall respond
            with this response code. The "ProblemDetails" structure shall be
            provided.  It should include in the "detail" attribute information
            about the source of the problem, and may indicate how to solve it.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '404':
          description: >
            Not Found Error: The API producer did not find a current
            representation for the target resource or is not willing to disclose
            that one exists. The general cause for this error and its handling
            is specified in clause 4.3.5.4, including rules for the presence of
            the response body. Specifically, in case of this task resource, the
            reason can also be that the task is not supported for the NS LCM
            operation occurrence represented by the parent source, and that the
            task resource consequently does not exist. In this case, the
            response body shall be present, and shall contain a ProblemDetails
            structure, in which the "detail" attribute shall convey more
            information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '405':
          description: >
            Method Not Allowed If a particular HTTP method is not supported for
            a particular resource, the API producer shall respond with this
            response code. The "ProblemDetails" structure may be omitted in that
            case.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '406':
          description: >
            Not Acceptable If the Accept HTTP header does not contain at least
            one name of a content type that is acceptable to the API producer,
            the API producer shall respond with this response code. The
            ProblemDetails structure may be omitted in that case.        
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '409':
          description: >
            The operation cannot be executed currently, due to a conflict with
            the state of the NS instance resource. Typically, this is due to the
            fact that the NS instance resource is not in FAILED_TEMP state, or
            another error handling action is starting, such as rollback or fail.
            The response body shall contain a ProblemDetails structure, in which
            the "detail" attribute should convey more information about the
            error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '500':
          description: >
            Internal Server Error If there is an application error not related
            to the client's input that cannot be easily mapped to any other HTTP
            response code ("catch all error"), the API producer shall respond
            withthis response code. The ProblemDetails structure shall be
            provided, and shall include in the "detail" attribute more
            information about the source of the problem.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '503':
          description: >
            Service Unavailable If the API producer encounters an internal
            overload situation of itself or of a system it relies on, it should
            respond with this response code, following the provisions in IETF
            RFC 7231 [13] for the use of the Retry-After HTTP header and for the
            alternative to refuse the connection. The "ProblemDetails" structure
            may be omitted.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
  '/ns_lcm_op_occs/{nsLcmOpOccId}/continue':
    parameters:
      - name: nsLcmOpOccId
        description: >
          Identifier of a NS lifecycle management operation occurrence to be
          continued.
        in: path
        required: true
        type: string
    post:
      summary: Continue a NS lifecycle management operation occurrence.
      description: >
        The POST method initiates continuing an NS lifecycle operation if that
        operation has experienced a temporary failure, i.e. the related "NS LCM
        operation occurrence" is in "FAILED_TEMP" state. This method shall
        follow the provisions specified in the Tables 6.4.13.3.1-1 and
        6.4.13.3.1-2 for URI query parameters, request and response data
        structures, and response codes.
      parameters:
        - name: Authorization
          description: |
            The authorization token for the request. Reference: IETF RFC 7235
          in: header
          required: false
          type: string
      responses:
        '202':
          description: >
            Accepted

            The request was accepted for processing, but processing has not been
            completed. The response shall have an empty payload body.
          headers:
            Location:
              description: The resource URI of the created NS instance
              type: string
              format: url
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
        '400':
          description: >
            Bad Request

            Error: Invalid attribute-based filtering parameters. The response
            body shall contain a ProblemDetails structure, in which the "detail"
            attribute should convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '401':
          description: >
            Unauthorized If the request contains no access token even though one
            is required, or if the request contains an authorization token that
            is invalid (e.g. expired or revoked), the API producer should
            respond with this response. The details of the error shall be
            returned in the WWW-Authenticate HTTP header, as defined in IETF RFC
            6750 and IETF RFC 7235. The ProblemDetails structure may be
            provided.
          headers:
            Content-Type:
              type: string
              description: The MIME type of the body of the response.
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '403':
          description: >
            Forbidden If the API consumer is not allowed to perform a particular
            request to a particular resource, the API producer shall respond
            with this response code. The "ProblemDetails" structure shall be
            provided.  It should include in the "detail" attribute information
            about the source of the problem, and may indicate how to solve it.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '404':
          description: >
            Not Found Error: The API producer did not find a current
            representation for the target resource or is not willing to disclose
            that one exists. The general cause for this error and its handling
            is specified in clause 4.3.5.4, including rules for the presence of
            the response body. Specifically, in case of this task resource, the
            reason can also be that the task is not supported for the NS LCM
            operation occurrence represented by the parent source, and that the
            task resource consequently does not exist. In this case, the
            response body shall be present, and shall contain a ProblemDetails
            structure, in which the "detail" attribute shall convey more
            information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '405':
          description: >
            Method Not Allowed If a particular HTTP method is not supported for
            a particular resource, the API producer shall respond with this
            response code. The "ProblemDetails" structure may be omitted in that
            case.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '406':
          description: >
            Not Acceptable If the Accept HTTP header does not contain at least
            one name of a content type that is acceptable to the API producer,
            the API producer shall respond with this response code. The
            ProblemDetails structure may be omitted in that case.        
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '409':
          description: >
            The operation cannot be executed currently, due to a conflict with
            the state of the NS instance resource. Typically, this is due to the
            fact that the NS instance resource is not in FAILED_TEMP state, or
            another error handling action is starting, such as rollback or fail.
            The response body shall contain a ProblemDetails structure, in which
            the "detail" attribute should convey more information about the
            error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '500':
          description: >
            Internal Server Error If there is an application error not related
            to the client's input that cannot be easily mapped to any other HTTP
            response code ("catch all error"), the API producer shall respond
            withthis response code. The ProblemDetails structure shall be
            provided, and shall include in the "detail" attribute more
            information about the source of the problem.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '503':
          description: >
            Service Unavailable If the API producer encounters an internal
            overload situation of itself or of a system it relies on, it should
            respond with this response code, following the provisions in IETF
            RFC 7231 [13] for the use of the Retry-After HTTP header and for the
            alternative to refuse the connection. The "ProblemDetails" structure
            may be omitted.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
  '/nslcm/v1/ns_lcm_op_occs/{nsLcmOpOccId}/fail':
    parameters:
      - name: nsLcmOpOccId
        description: >
          Identifier of a NS lifecycle management operation occurrence to be
          marked as "failed".

          This identifier can be retrieved from the resource referenced by  he
          "Location" HTTP header in the response to a POST request triggering a
          NS LCM operation.  It can also be retrieved from the "nsLcmOpOccId"
          attribute in the NsLcmOperationOccurrenceNotification.
        in: path
        required: true
        type: string
    post:
      summary: Mark a NS lifecycle management operation occurrence as failed.
      description: >
        The POST method marks a NS lifecycle management operation  occurrence as
        "finally failed" if that operation occurrence is in "FAILED_TEMP" state.
      parameters:
        - name: Accept
          description: >
            Content-Types that are acceptable for the response. Reference: IETF
            RFC 7231
          in: header
          required: true
          type: string
        - name: Authorization
          description: |
            The authorization token for the request. Reference: IETF RFC 7235
          in: header
          required: false
          type: string
      responses:
        '200':
          description: 200 OK
          schema:
            type: object
            description: >
              The state of the NS lifecycle management operation occurrence was
              changed successfully. The response shall include a representation
              of the NS lifecycle management operation occurrence resource.
            properties:
              NsLcmOpOcc:
                description: >
                  This type represents a request a NS lifecycle operation
                  occurrence.  It shall comply with the provisions defined in
                  Table 6.5.2.3-1.
                type: object
                required:
                  - id
                  - operationState
                  - stateEnteredTime
                  - nsInstanceId
                  - lcmOperationType
                  - startTime
                  - isAutomaticInvocation
                  - operationParams
                  - isCancelPending
                  - _links
                properties:
                  id:
                    description: |
                      An identifier with the intention of being globally unique.
                    type: string
                  operationState:
                    description: >
                      The enumeration NsLcmOperationStateType shall comply with
                      the provisions defined in Table 6.5.4.4-1. Value |
                      Description ------|------------ PROCESSING | The LCM
                      operation is currently in execution. COMPLETED | The LCM
                      operation has been completed successfully.
                      PARTIALLY_COMPLETED | The LCM operation has been partially
                      completed with accepTable errors. FAILED_TEMP | The LCM
                      operation has failed and execution has stopped, but the
                      execution of the operation is not considered to be closed.
                      FAILED | The LCM operation has failed and it cannot be
                      retried or rolled back, as it is determined that such
                      action won't succeed. OLLING_BACK | The LCM operation is
                      currently being rolled back. ROLLED_BACK | The LCM
                      operation has been successfully rolled back, i.e. The
                      state of the VNF prior to the original operation
                      invocation has been restored as closely as possible.
                    type: string
                    enum:
                      - PROCESSING
                      - COMPLETED
                      - FAILED_TEMP
                      - FAILED
                      - ROLLING_BACK
                      - ROLLED_BACK
                  stateEnteredTime:
                    description: |
                      Date-time when the current state was entered.
                    type: string
                    format: date-time
                  nsInstanceId:
                    description: |
                      An identifier with the intention of being globally unique.
                    type: string
                  lcmOperationType:
                    description: >
                      The enumeration NsLcmOpType represents those lifecycle
                      operations that trigger a NS lifecycle management
                      operation occurrence notification. Value | Description
                      ------|------------ INSTANTIATE | Represents the
                      "Instantiate NS" LCM operation. SCALE | Represents the
                      "Scale NS" LCM operation. UPDATE | Represents the "Update
                      NS" LCM operation. TERMINATE | Represents the "Terminate
                      NS" LCM operation. HEAL | Represents the "Heal NS" LCM
                      operation.
                    type: string
                    enum:
                      - INSTANTIATE
                      - SCALE
                      - UPDATE
                      - TERMINATE
                      - HEAL
                  startTime:
                    description: |
                      Date-time of the start of the operation.
                    type: string
                    format: date-time
                  isAutomaticInvocation:
                    description: >
                      Set to true if this NS LCM operation occurrence has been
                      automatically triggered by the NFVO. This occurs in the
                      case of auto-scaling, auto-healing and when a nested NS is
                      modified as a result of an operation on its composite NS.
                      Set to false otherwise.
                    type: boolean
                  operationParams:
                    description: >
                      Input parameters of the LCM operation. This attribute
                      shall be formatted according to the request data type of
                      the related LCM operation. The following mapping between
                      lcmOperationType and the data type of this attribute shall
                      apply: - INSTANTIATE: InstantiateNsRequest - SCALE:
                      ScaleNsRequest - UPDATE: UpdateNsRequest - HEAL:
                      HealNsRequest - TERMINATE: TerminateNsRequest
                    type: string
                    enum:
                      - INSTANTIATE
                      - SCALE
                      - UPDATE
                      - HEAL
                      - TERMINATE
                  isCancelPending:
                    description: >
                      If the LCM operation occurrence is in "PROCESSING" or
                      "ROLLING_BACK" state and the operation is being cancelled,
                      this attribute shall be set to true. Otherwise, it shall
                      be set to false.
                    type: boolean
                  cancelMode:
                    description: >
                      Cancellation mode.

                      The NFVO shall not start any new VNF lifecycle management
                      and resource management operation, and shall wait for the
                      ongoing VNF lifecycle management and resource management
                      operations in the underlying system, typically the VNFM
                      and VIM, to finish execution or to time out. After that,
                      the NFVO shall put the operation occurrence into the
                      FAILED_TEMP state.

                      The NFVO shall not start any new VNF lifecycle management
                      and resource management operation, shall cancel the
                      ongoing VNF lifecycle management and resource management
                      operations in the underlying system, typically the VNFM
                      and VIM, and shall wait for the cancellation to finish or
                      to time out. After that, the NFVO shall put the operation
                      occurrence into the FAILED_TEMP state.
                    type: string
                    enum:
                      - GRACEFUL
                      - FORCEFUL
                  error:
                    description: >
                      The definition of the general "ProblemDetails" data
                      structure from IETF RFC 7807 [19] is reproduced inthis
                      structure. Compared to the general framework defined in
                      IETF RFC 7807 [19], the "status" and "detail" attributes
                      are mandated to be included by the present document, to
                      ensure that the response contains additional textual
                      information about an error. IETF RFC 7807 [19] foresees
                      extensibility of the "ProblemDetails" type. It is possible
                      that particular APIs in the present document, or
                      particular implementations, define extensions to define
                      additional attributes that provide more information about
                      the error. The description column only provides some
                      explanation of the meaning to Facilitate understanding of
                      the design. For a full description, see IETF RFC 7807
                      [19].
                    type: object
                    required:
                      - status
                      - detail
                    properties:
                      type:
                        description: >
                          A URI reference according to IETF RFC 3986 [5] that
                          identifies the problem type. It is encouraged that the
                          URI provides human-readable documentation for the
                          problem (e.g. using HTML) when dereferenced. When this
                          member is not present, its value is assumed to be
                          "about:blank".
                        type: string
                        format: URI
                      title:
                        description: >
                          A short, human-readable summary of the problem type.
                          It should not change from occurrence to occurrence of
                          the problem, except for purposes of localization. If
                          type is given and other than "about:blank", this
                          attribute shall also be provided. A short,
                          human-readable summary of the problem type.  It SHOULD
                          NOT change from occurrence to occurrence of the
                          problem, except for purposes of localization (e.g.,
                          using proactive content negotiation; see [RFC7231],
                          Section 3.4).
                        type: string
                      status:
                        description: >
                          The HTTP status code for this occurrence of the
                          problem. The HTTP status code ([RFC7231], Section 6)
                          generated by the origin server for this occurrence of
                          the problem.
                        type: integer
                      detail:
                        description: >
                          A human-readable explanation specific to this
                          occurrence of the problem.
                        type: string
                      instance:
                        description: >
                          A URI reference that identifies the specific
                          occurrence of the problem. It may yield further
                          information if dereferenced.
                        type: string
                        format: URI
                  resourceChanges:
                    description: >
                      This attribute contains information about the cumulative
                      changes to virtualised resources that were performed so
                      far by the LCM operation since its start, if applicable
                    type: object
                    properties:
                      affectedVnfs:
                        description: >
                          Information about the VNF instances that were affected
                          during the lifecycle operation, if this notification
                          represents the result of a lifecycle operation.
                        type: array
                        items:
                          description: >
                            This type provides information about added, deleted
                            and modified VNFs.  It shall comply with the
                            provisions in Table 6.5.3.2-1.
                          type: object
                          required:
                            - vnfInstanceId
                            - vnfdId
                            - vnfProfileId
                          properties:
                            vnfInstanceId:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                            vnfdId:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                            vnfProfileId:
                              description: >
                                An identifier that is unique within a NS
                                descriptor. Representation: string of variable
                                length.
                              type: string
                            vnfName:
                              description: |
                                Name of the VNF Instance.
                              type: string
                            changeType:
                              description: >
                                Signals the type of change Permitted values: -
                                ADD - REMOVE - INSTANTIATE - TERMINATE - SCALE -
                                CHANGE_FLAVOUR - HEAL - OPERATE -
                                MODIFY_INFORMATION -
                                CHANGE_EXTERNAL_VNF_CONNECTIVITY
                              type: string
                              enum:
                                - ADD
                                - REMOVE
                                - INSTANTIATE
                                - TERMINATE
                                - SCALE
                                - CHANGE_FLAVOUR
                                - HEAL
                                - OPERATE
                                - MODIFY_INFORMATION
                                - CHANGE_EXTERNAL_VNF_CONNECTIVITY
                            changeResult:
                              description: >
                                Signals the result of change identified by the
                                "changeType" attribute. Permitted values: -
                                COMPLETED - ROLLED_BACK - FAILED
                              type: string
                              enum:
                                - COMPLETED
                                - ROLLED_BACK
                                - FAILED
                            changedInfo:
                              description: >
                                Information about the changed VNF instance
                                information, including VNF configurable
                                properties,if applicable. When the "changedInfo"
                                attribute is present,  either the
                                "changedVnfInfo" attribute or the
                                "changedExtConnectivity" attribute or both shall
                                be present.
                              type: object
                              required:
                                - self
                              properties:
                                changedVnfInfo:
                                  description: >
                                    This type represents the information that is
                                    requested to be modified for a VNF instance.
                                    The information to be modified shall comply
                                    with the associated NSD. EXAMPLE. The
                                    vnfPkgId attribute value for a particular
                                    VNF instance can only be updated with a
                                    value that matches the identifier value of a
                                    VNF package whose vnfdId is present in the
                                    associated profile of the NSD.
                                  type: object
                                  required:
                                    - vnfInstanceId
                                  properties:
                                    vnfInstanceId:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    vnfInstanceName:
                                      description: >
                                        New value of the "vnfInstanceName"
                                        attribute in "VnfInstance", or "null" to
                                        remove the attribute.
                                      type: string
                                    vnfInstanceDescription:
                                      description: >
                                        New value of the
                                        "vnfInstanceDescription" attribute in
                                        "VnfInstance", or "null" to remove the
                                        attribute.
                                      type: string
                                    vnfPkgId:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    vnfConfigurableProperties:
                                      description: >
                                        This type represents a list of key-value
                                        pairs. The order of the pairs in the
                                        list is not significant. In JSON, a set
                                        of key- value pairs is represented as an
                                        object. It shall comply with the
                                        provisions  defined in clause 4 of IETF
                                        RFC 7159. 
                                      type: object
                                    Metadata:
                                      description: >
                                        This type represents a list of key-value
                                        pairs. The order of the pairs in the
                                        list is not significant. In JSON, a set
                                        of key- value pairs is represented as an
                                        object. It shall comply with the
                                        provisions  defined in clause 4 of IETF
                                        RFC 7159. 
                                      type: object
                                    Extensions:
                                      description: >
                                        This type represents a list of key-value
                                        pairs. The order of the pairs in the
                                        list is not significant. In JSON, a set
                                        of key- value pairs is represented as an
                                        object. It shall comply with the
                                        provisions  defined in clause 4 of IETF
                                        RFC 7159. 
                                      type: object
                                changedExtConnectivity:
                                  type: object
                                  required:
                                    - id
                                    - resourceHandle
                                  properties:
                                    id:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    resourceHandle:
                                      required:
                                        - vimConnectionId
                                        - resourceId
                                      type: object
                                      description: >
                                        This type represents the information
                                        that allows addressing a virtualised
                                        resource that is used by a VNF instance.
                                        Information about the resource is
                                        available from the VIM.
                                      properties:
                                        vimConnectionId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceProviderId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                                        vimLevelResourceType:
                                          description: >
                                            Type of the resource in the scope of the
                                            VIM or the resource provider.
                                          type: string
                                    extLinkPorts:
                                      description: |
                                        Link ports of this VL.
                                      type: array
                                      items:
                                        description: >
                                          This type represents information about a
                                          link port of an external VL, i.e. a port
                                          providing connectivity for the VNF to an
                                          NS VL. 
                                        type: object
                                        required:
                                          - id
                                          - resourceHandle
                                        properties:
                                          id:
                                            description: >
                                              An identifier with the intention of
                                              being globally unique.
                                            type: string
                                          resourceHandle:
                                            required:
                                              - vimConnectionId
                                              - resourceId
                                            type: object
                                            description: >
                                              This type represents the information
                                              that allows addressing a virtualised
                                              resource that is used by a VNF instance.
                                              Information about the resource is
                                              available from the VIM.
                                            properties:
                                              vimConnectionId:
                                                description: >
                                                  An identifier with the intention of
                                                  being globally unique.
                                                type: string
                                              resourceProviderId:
                                                description: >
                                                  An identifier with the intention of
                                                  being globally unique.
                                                type: string
                                              resourceId:
                                                description: >
                                                  An identifier maintained by the VIM or
                                                  other resource provider. It is expected
                                                  to be unique within the VIM instance.
                                                type: string
                                              vimLevelResourceType:
                                                description: >
                                                  Type of the resource in the scope of the
                                                  VIM or the resource provider.
                                                type: string
                                          cpInstanceId:
                                            description: >
                                              An identifier that is unique for the
                                              respective type within a VNF instance,
                                              but may not be globally unique.
                                            type: string
                      affectedPnfs:
                        description: >
                          Information about the PNF instances that were affected
                          during the lifecycle operation, if this notification
                          represents the result of a lifecycle operation.
                        type: array
                        items:
                          description: >
                            This type provides information about added, deleted
                            and modified PNFs.  It shall comply with the
                            provisions in Table 6.5.3.3-1.
                          type: object
                          required:
                            - pnfId
                            - pnfdId
                            - pnfProfileId
                            - cpInstanceId
                          properties:
                            pnfId:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                            pnfdId:
                              description: >
                                An identifier that is unique within a NS
                                descriptor. Representation: string of variable
                                length.
                              type: string
                            pnfProfileId:
                              description: >
                                An identifier that is unique within a NS
                                descriptor. Representation: string of variable
                                length.
                              type: string
                            pnfName:
                              description: |
                                Name of the PNF.
                              type: string
                            cpInstanceId:
                              description: |
                                Identifier of the CP in the scope of the PNF.
                              type: array
                              items:
                                description: |
                                  Identifier of the CP in the scope of the PNF.
                                type: string
                            changeType:
                              description: >
                                Signals the type of change. Permitted values: -
                                ADD - REMOVE - MODIFY
                              type: string
                              enum:
                                - ADD
                                - REMOVE
                                - MODIFY
                            changeResult:
                              description: >
                                Signals the result of change identified by the
                                "changeType" attribute. Permitted values: -
                                COMPLETED - ROLLED_BACK - FAILED
                              type: string
                              enum:
                                - COMPLETED
                                - ROLLED_BACK
                                - FAILED
                      affectedVls:
                        description: >
                          Information about the VL instances that were affected
                          during the lifecycle operation, if this notification
                          represents the result of a lifecycle operation.
                        type: array
                        items:
                          description: >
                            This type provides information about added, deleted
                            and modified VLs.  It shall comply with the
                            provisions in Table 6.5.3.4-1.
                          type: object
                          required:
                            - nsVirtualLinkInstanceId
                            - nsVirtualLinkDescId
                            - vlProfileId
                          properties:
                            nsVirtualLinkInstanceId:
                              description: >
                                An identifier that is unique with respect to a
                                NS.  Representation: string of variable length.
                              type: string
                            nsVirtualLinkDescId:
                              description: >
                                An identifier that is unique within a NS
                                descriptor. Representation: string of variable
                                length.
                              type: string
                            vlProfileId:
                              description: >
                                An identifier that is unique within a NS
                                descriptor. Representation: string of variable
                                length.
                              type: string
                            changeType:
                              description: >
                                Signals the type of change. Permitted values: -
                                ADD - DELETE - MODIFY - ADD_LINK_PORT -
                                REMOVE_LINK_PORT
                              type: string
                              enum:
                                - ADD
                                - DELETE
                                - MODIFY
                                - ADD_LINK_PORT
                                - REMOVE_LINK_PORT
                            changeResult:
                              description: >
                                Signals the result of change identified by the
                                "changeType" attribute. Permitted values: -
                                COMPLETED - ROLLED_BACK - FAILED
                              type: string
                              enum:
                                - COMPLETED
                                - ROLLED_BACK
                                - FAILED
                      affectedVnffgs:
                        description: >
                          Information about the VNFFG instances that were
                          affected during the lifecycle operation, if this
                          notification               represents the result of a
                          lifecycle operation. See note
                        type: array
                        items:
                          description: >
                            This type provides information about added, deleted
                            and modified VNFFG instances.  It shall comply with
                            the provisions in Table 6.5.3.5-1.
                          type: object
                          required:
                            - vnffgInstanceId
                            - vnffgdId
                          properties:
                            vnffgInstanceId:
                              description: >
                                An identifier that is unique with respect to a
                                NS.  Representation: string of variable length.
                              type: string
                            vnffgdId:
                              description: >
                                An identifier that is unique within a NS
                                descriptor. Representation: string of variable
                                length.
                              type: string
                            changeType:
                              description: >
                                Signals the type of change. Permitted values: -
                                ADD - DELETE - MODIFY
                              type: string
                              enum:
                                - ADD
                                - DELETE
                                - MODIFY
                            changeResult:
                              description: >
                                Signals the result of change identified by the
                                "changeType" attribute. Permitted values: -
                                COMPLETED - ROLLED_BACK - FAILED
                              type: string
                              enum:
                                - COMPLETED
                                - ROLLED_BACK
                                - FAILED
                      affectedNss:
                        description: >
                          Information about the nested NS instances that were
                          affected during the lifecycle operation, if this
                          notification represents the result of a lifecycle
                          operation. See note.
                        type: array
                        items:
                          description: >
                            This type provides information about added, deleted
                            and modified nested NSs.  It shall comply with the
                            provisions in Table 6.5.3.6-1.
                          type: object
                          required:
                            - nsInstanceId
                            - nsdId
                          properties:
                            nsInstanceId:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                            nsdId:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                            changeType:
                              description: >
                                Signals the type of lifecycle change. Permitted
                                values: - ADD - REMOVE - INSTANTIATE - SCALE -
                                UPDATE - HEAL - TERMINATE
                              type: string
                              enum:
                                - ADD
                                - REMOVE
                                - INSTANTIATE
                                - SCALE
                                - UPDATE
                                - HEAL
                                - TERMINATE
                            changeResult:
                              description: >
                                Signals the result of change identified by the
                                "changeType" attribute. Permitted values: -
                                COMPLETED - ROLLED_BACK - FAILED -
                                PARTIALLY_COMPLETED           
                              type: string
                              enum:
                                - COMPLETED
                                - ROLLED_BACK
                                - FAILED
                                - PARTIALLY_COMPLETED
                      affectedSaps:
                        description: >
                          Information about the nested NS instances that were
                          affected during the lifecycle operation, if this
                          notification represents the result of a lifecycle
                          operation. See note.
                        type: array
                        items:
                          description: >
                            This type provides information about added, deleted
                            and modified SAP of a NS.  It shall comply with the
                            provisions in Table 6.5.3.7-1.
                          type: object
                          required:
                            - sapInstanceId
                            - sapdId
                          properties:
                            sapInstanceId:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                            sapdId:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                            sapName:
                              description: |
                                Human readable name for the SAP.
                              type: string
                            changeType:
                              description: >
                                Signals the type of lifecycle change. Permitted
                                values: - ADD - REMOVE - MODIFY
                              type: string
                              enum:
                                - ADD
                                - REMOVE
                                - MODIFY
                            changeResult:
                              description: >
                                Signals the result of change identified by the
                                "changeType" attribute. Permitted values: -
                                COMPLETED - ROLLED_BACK - FAILED
                              type: string
                              enum:
                                - COMPLETED
                                - ROLLED_BACK
                                - FAILED
                  _links:
                    description: |
                      Links to resources related to this resource.
                    type: object
                    required:
                      - self
                      - nsInstance
                    properties:
                      self:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
                      nsInstance:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
                      cancel:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
                      retry:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
                      rollback:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
                      continue:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
                      fail:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
          headers:
            Content-Type:
              type: string
              description: >
                The MIME type of the body of the response.This header field
                shall be present if the response has a non-empty message body.
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              maximum: 1
              minimum: 0
        '400':
          description: >
            Bad Request

            Error: Invalid attribute-based filtering parameters. The response
            body shall contain a ProblemDetails structure, in which the "detail"
            attribute should convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '401':
          description: >
            Unauthorized If the request contains no access token even though one
            is required, or if the request contains an authorization token that
            is invalid (e.g. expired or revoked), the API producer should
            respond with this response. The details of the error shall be
            returned in the WWW-Authenticate HTTP header, as defined in IETF RFC
            6750 and IETF RFC 7235. The ProblemDetails structure may be
            provided.
          headers:
            Content-Type:
              type: string
              description: The MIME type of the body of the response.
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '403':
          description: >
            Forbidden If the API consumer is not allowed to perform a particular
            request to a particular resource, the API producer shall respond
            with this response code. The "ProblemDetails" structure shall be
            provided.  It should include in the "detail" attribute information
            about the source of the problem, and may indicate how to solve it.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '404':
          description: >
            Not Found Error: The API producer did not find a current
            representation for the target resource or is not willing to disclose
            that one exists. The general cause for this error and its handling
            is specified in clause 4.3.5.4, including rules for the presence of
            the response body. Specifically, in case of this task resource, the
            reason can also be that the task is not supported for the NS LCM
            operation occurrence represented by the parent source, and that the
            task resource consequently does not exist. In this case, the
            response body shall be present, and shall contain a ProblemDetails
            structure, in which the "detail" attribute shall convey more
            information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '405':
          description: >
            Method Not Allowed If a particular HTTP method is not supported for
            a particular resource, the API producer shall respond with this
            response code. The "ProblemDetails" structure may be omitted in that
            case.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '406':
          description: >
            Not Acceptable If the Accept HTTP header does not contain at least
            one name of a content type that is acceptable to the API producer,
            the API producer shall respond with this response code. The
            ProblemDetails structure may be omitted in that case.        
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '409':
          description: >
            The operation cannot be executed currently, due to a conflict with
            the state of the NS instance resource. Typically, this is due to the
            fact that the NS instance resource is not in FAILED_TEMP state, or
            another error handling action is starting, such as rollback or fail.
            The response body shall contain a ProblemDetails structure, in which
            the "detail" attribute should convey more information about the
            error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '500':
          description: >
            Internal Server Error If there is an application error not related
            to the client's input that cannot be easily mapped to any other HTTP
            response code ("catch all error"), the API producer shall respond
            withthis response code. The ProblemDetails structure shall be
            provided, and shall include in the "detail" attribute more
            information about the source of the problem.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '503':
          description: >
            Service Unavailable If the API producer encounters an internal
            overload situation of itself or of a system it relies on, it should
            respond with this response code, following the provisions in IETF
            RFC 7231 [13] for the use of the Retry-After HTTP header and for the
            alternative to refuse the connection. The "ProblemDetails" structure
            may be omitted.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
  '/nslcm/v1/ns_lcm_op_occs/{nsLcmOpOccId}/cancel':
    parameters:
      - name: nsLcmOpOccId
        description: >
          Identifier of a NS lifecycle management operation occurrence to be
          canceled.

          This identifier can be retrieved from the resource referenced by the
          "Location" HTTP header in the response to a POST request triggering a
          NS LCM operation. It can also be retrieved from the "nsLcmOpOccId"
          attribute in the NsLcmOperationOccurrenceNotification.
        in: path
        required: true
        type: string
    post:
      summary: Cancel a NS lifecycle management operation occurrence.
      description: >
        The POST method initiates canceling an ongoing NS lifecycle  management
        operation while it is being executed or rolled back, i.e. the related
        "NS LCM operation occurrence" is  either in "PROCESSING" or
        "ROLLING_BACK" state. This method shall follow the provisions specified
        in the  Tables 6.4.15.3.1-1 and 6.4.15.3.1-2 for URI query parameters,
        request and response data structures, and response codes.        
      parameters:
        - name: Accept
          description: >
            Content-Types that are acceptable for the response. Reference: IETF
            RFC 7231
          in: header
          required: true
          type: string
        - name: Authorization
          description: |
            The authorization token for the request. Reference: IETF RFC 7235
          in: header
          required: false
          type: string
        - name: Content-Type
          description: |
            The MIME type of the body of the request. Reference: IETF RFC 7231
          in: header
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - CancelMode
            properties:
              CancelMode:
                description: >
                  This type represents a parameter to select the mode of
                  canceling an ongoing NS LCM operation occurrence.  It shall
                  comply with the provisions defined in Table 6.5.2.16-1..
                type: object
                required:
                  - cancelMode
                properties:
                  cancelMode:
                    description: >
                      Cancellation mode.

                      The NFVO shall not start any new VNF lifecycle management
                      and resource management operation, and shall wait for the
                      ongoing VNF lifecycle management and resource management
                      operations in the underlying system, typically the VNFM
                      and VIM, to finish execution or to time out. After that,
                      the NFVO shall put the operation occurrence into the
                      FAILED_TEMP state.

                      The NFVO shall not start any new VNF lifecycle management
                      and resource management operation, shall cancel the
                      ongoing VNF lifecycle management and resource management
                      operations in the underlying system, typically the VNFM
                      and VIM, and shall wait for the cancellation to finish or
                      to time out. After that, the NFVO shall put the operation
                      occurrence into the FAILED_TEMP state.
                    type: string
                    enum:
                      - GRACEFUL
                      - FORCEFUL
            description: >
              The POST request to this resource shall include a CancelMode
              structure in the payload body to choose between "graceful" and
              "forceful" cancellation.
      responses:
        '202':
          description: >
            Accepted

            The request was accepted for processing, but processing has not been
            completed. The response shall have an empty payload body.
          headers:
            Location:
              description: The resource URI of the created NS instance
              type: string
              format: url
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
        '400':
          description: >
            Bad Request

            Error: Invalid attribute-based filtering parameters. The response
            body shall contain a ProblemDetails structure, in which the "detail"
            attribute should convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '401':
          description: >
            Unauthorized If the request contains no access token even though one
            is required, or if the request contains an authorization token that
            is invalid (e.g. expired or revoked), the API producer should
            respond with this response. The details of the error shall be
            returned in the WWW-Authenticate HTTP header, as defined in IETF RFC
            6750 and IETF RFC 7235. The ProblemDetails structure may be
            provided.
          headers:
            Content-Type:
              type: string
              description: The MIME type of the body of the response.
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '403':
          description: >
            Forbidden If the API consumer is not allowed to perform a particular
            request to a particular resource, the API producer shall respond
            with this response code. The "ProblemDetails" structure shall be
            provided.  It should include in the "detail" attribute information
            about the source of the problem, and may indicate how to solve it.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '404':
          description: >
            Not Found Error: The API producer did not find a current
            representation for the target resource or is not willing to disclose
            that one exists. Specifically in case of this task resource, the 
            response code 404 shall also be returned if the task is not
            supported for the NS LCM operation occurrence represented by the
            parent resource, which means that the task resource consequently
            does not exist.  In this case, the response body shall be present,
            and shall contain a ProblemDetails structure, in which the "detail"
            attribute shall convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '405':
          description: >
            Method Not Allowed If a particular HTTP method is not supported for
            a particular resource, the API producer shall respond with this
            response code. The "ProblemDetails" structure may be omitted in that
            case.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '406':
          description: >
            Not Acceptable If the Accept HTTP header does not contain at least
            one name of a content type that is acceptable to the API producer,
            the API producer shall respond with this response code. The
            ProblemDetails structure may be omitted in that case.        
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '409':
          description: >
            409 Conflict.

            Error: The operation cannot be executed currently, due to a conflict
            with the state of the NS LCM operation occurrence resource.
            Typically, this is due to the fact that the operation occurrence is
            not in STARTING, PROCESSING or ROLLING_BACK state. The response body
            shall contain a ProblemDetails structure, in which the "detail"
            attribute shall convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '500':
          description: >
            Internal Server Error If there is an application error not related
            to the client's input that cannot be easily mapped to any other HTTP
            response code ("catch all error"), the API producer shall respond
            withthis response code. The ProblemDetails structure shall be
            provided, and shall include in the "detail" attribute more
            information about the source of the problem.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '503':
          description: >
            Service Unavailable If the API producer encounters an internal
            overload situation of itself or of a system it relies on, it should
            respond with this response code, following the provisions in IETF
            RFC 7231 [13] for the use of the Retry-After HTTP header and for the
            alternative to refuse the connection. The "ProblemDetails" structure
            may be omitted.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
  /subscriptions:
    post:
      summary: Subscribe to NS lifecycle change notifications.
      description: >
        The POST method creates a new subscription. This method shall support
        the URI query parameters, request and response data structures, and
        response codes, as specified in the Tables 6.4.16.3.1-1 and
        6.4.16.3.1-2. Creation of two subscription resources with the same
        callbackURI and the same filter can result in performance degradation
        and will provide duplicates of notifications to the OSS, and might make
        sense only in very rare use cases. Consequently, the NFVO may either
        allow creating a subscription resource if another subscription resource
        with the same filter and callbackUri already exists (in which case it
        shall return the "201 Created" response code), or may decide to not
        create a duplicate subscription resource (in which case it shall return
        a "303 See Other" response code referencing the existing subscription
        resource with the same filter and callbackUri).
      parameters:
        - name: Accept
          description: >
            Content-Types that are acceptable for the response. Reference: IETF
            RFC 7231
          in: header
          required: true
          type: string
        - name: Authorization
          description: |
            The authorization token for the request. Reference: IETF RFC 7235
          in: header
          required: false
          type: string
        - name: Content-Type
          description: |
            The MIME type of the body of the request. Reference: IETF RFC 7231
          in: header
          required: true
          type: string
        - name: body
          in: body
          required: true
          schema:
            type: object
            required:
              - LccnSubscriptionRequest
            properties:
              LccnSubscriptionRequest:
                description: >
                  This type represents a subscription request related to
                  notifications  about NS lifecycle changes. It shall comply
                  with the provisions defined in Table 6.5.2.2-1..
                type: object
                required:
                  - callbackUri
                properties:
                  filter:
                    description: >
                      This type represents a subscription filter related to
                      notifications about  NS lifecycle changes. It shall comply
                      with the provisions defined in Table 6.5.3.8-1. At a
                      particular nesting level in the filter structure, the
                      following applies:  All attributes shall match in order
                      for the filter to match (logical "and" between different
                      filter attributes).  If an attribute is an array, the
                      attribute shall match if at least one of the values in the
                      array matches (logical "or" between the values of one
                      filter attribute).
                    type: object
                    properties:
                      nsInstanceSubscriptionFilter:
                        description: >
                          This type represents subscription filter criteria to
                          match NS instances.  It shall comply with the
                          provisions defined in Table 4.4.1.5-1.
                        type: object
                        properties:
                          nsdIds:
                            description: >
                              If present, match NS instances that were created
                              based on a NSD identified by one of the nsdId
                              values listed in this attribute.
                            type: array
                            items:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                          vnfdIds:
                            description: >
                              If present, match NS instances that contain VNF
                              instances that were created based on a VNFD
                              identified by one of the vnfdId values listed in
                              this attribute.
                            type: array
                            items:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                          pnfdIds:
                            description: >
                              If present, match NS instances that contain PNFs
                              that are represented by a PNFD identified by one
                              of the pnfdId values listed in this attribute.
                            type: array
                            items:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                          nsInstanceIds:
                            description: >
                              If present, match NS instances with an instance
                              identifier listed in this attribute.
                            type: array
                            items:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                          nsInstanceNames:
                            description: >
                              If present, match NS instances with a NS Instance
                              Name listed in this attribute.
                            type: array
                            items:
                              description: |
                                This type represents stack of string values
                              type: string
                      notificationTypes:
                        description: >
                          Match particular notification types. Permitted values:
                          - NsLcmOperationOccurenceNotification -
                          NsIdentifierCreationNotification -
                          NsIdentifierDeletionNotification -
                          NsChangeNotification
                        type: array
                        items:
                          type: string
                          enum:
                            - NsLcmOperationOccurenceNotification
                            - NsIdentifierCreationNotification
                            - NsIdentifierDeletionNotification
                            - NsChangeNotification
                      operationTypes:
                        description: >
                          Match particular NS lifecycle operation types for the
                          notification of type
                          NsLcmOperationOccurrenceNotification. May be present
                          if the "notificationTypes" attribute contains the
                          value "NsLcmOperationOccurrenceNotification", and
                          shall be absent otherwise.
                        type: array
                        items:
                          description: >
                            The enumeration NsLcmOpType represents those
                            lifecycle operations that trigger a NS lifecycle
                            management operation occurrence notification. Value
                            | Description ------|------------ INSTANTIATE |
                            Represents the "Instantiate NS" LCM operation. SCALE
                            | Represents the "Scale NS" LCM operation. UPDATE |
                            Represents the "Update NS" LCM operation. TERMINATE
                            | Represents the "Terminate NS" LCM operation. HEAL
                            | Represents the "Heal NS" LCM operation.
                          type: string
                          enum:
                            - INSTANTIATE
                            - SCALE
                            - UPDATE
                            - TERMINATE
                            - HEAL
                      operationStates:
                        description: >
                          Match particular LCM operation state values as
                          reported in notifications of type
                          NsLcmOperationOccurrenceNotification. May be present
                          if the "notificationTypes" attribute contains the
                          value "NsLcmOperationOccurrenceNotification", and
                          shall be absent otherwise.
                        type: array
                        items:
                          description: >
                            Value | Description ------|------------ PROCESSING |
                            The LCM operation is currently in execution.
                            COMPLETED | The LCM operation has been completed
                            successfully. PARTIALLY_COMPLETED | The LCM
                            operation has been partially completed with
                            accepTable errors. FAILED_TEMP | The LCM operation
                            has failed and execution has stopped, but the
                            execution of the operation is not considered to be
                            closed. FAILED | The LCM operation has failed and it
                            cannot be retried or rolled back, as it is
                            determined that such action will not succeed.
                            OLLING_BACK | The LCM operation is currently being
                            rolled back. ROLLED_BACK | The LCM operation has
                            been successfully rolled back, i.e. The state of the
                            NS prior to the original operation invocation has
                            been restored as closely as possible.
                          type: string
                          enum:
                            - PROCESSING
                            - COMPLETED
                            - PARTIALLY_COMPLETED
                            - FAILED_TEMP
                            - FAILED
                            - ROLLING_BACK
                            - ROLLED_BACK
                      nsComponentTypes:
                        description: >
                          Match particular NS component types for the
                          notification of type NsChangeNotification. May be
                          present if the "notificationTypes" attribute contains
                          the value "NsChang.
                        type: array
                        items:
                          description: >
                            The enumeration NsComponentType represents the NS
                            component type. It shall comply with the provisions
                            defined in Table 6.5.4.5-1. Value | Description
                            ------|------------ VNF | Represents the impacted NS
                            component is a VNF. PNF | Represents the impacted NS
                            component is a PNF. NS | Represents the impacted NS
                            component is a nested NS.
                          type: string
                          enum:
                            - VNF
                            - PNF
                            - NS
                      lcmOpNameImpactingNsComponent:
                        description: >
                          Match particular LCM operation names for the
                          notification of type NsChangeNotification. May be
                          present if the "notificationTypes" attribute contains
                          the value "NsChangeNotification", and shall be absent
                          otherwise.
                        type: array
                        items:
                          description: >
                            The enumeration LcmOpNameForChangeNotificationType
                            represents the name of the lifecycle operation that
                            impacts the NS component and trigger an NS change
                            notification. It shall comply with the provisions
                            defined in Table 6.5.4.6-1. Value | Description
                            ------|------------ VNF_INSTANTIATE | Represents the
                            "Instantiate VNF" LCM operation. VNF_SCALE |
                            Represents the "Scale VNF" LCM operation.
                            VNF_SCALE_TO_LEVEL | Represents the "Scale VNF to
                            Level" LCM operation. VNF_CHANGE_FLAVOUR |
                            Represents the "Change VNF Flavor" LCM operation.
                            VNF_TERMINATE | Represents the "Terminate VNF" LCM
                            operation. VNF_HEAL | Represents the "Heal VNF" LCM
                            operation. VNF_OPERATE | Represents the "Operate
                            VNF" LCM operation. VNF_CHANGE_EXT_CONN | Represents
                            the "Change external VNF connectivity" LCM
                            operation. VNF_MODIFY_INFO | Represents the "Modify
                            VNF Information" LCM operation.           
                            NS_INSTANTIATE | Represents the "Instantiate NS" LCM
                            operation NS_SCALE | Represents the "Scale NS" LCM
                            operation. NS_UPDATE | Represents the "Update NS"
                            LCM operation. NS_TERMINATE | Represents the
                            "Terminate NS" LCM operation. NS_HEAL | Represents
                            the "Heal NS" LCM operation.
                          type: string
                          enum:
                            - VNF_INSTANTIATE
                            - VNF_SCALE
                            - VNF_SCALE_TO_LEVEL
                            - VNF_CHANGE_FLAVOUR
                            - VNF_TERMINATE
                            - VNF_HEAL
                            - VNF_OPERATE
                            - VNF_CHANGE_EXT_CONN
                            - VNF_MODIFY_INFO
                            - NS_INSTANTIATE
                            - NS_SCALE
                            - NS_UPDATE
                            - NS_TERMINATE
                            - NS_HEAL
                      lcmOpOccStatusImpactingNsComponent:
                        description: >
                          Match particular LCM operation status values as
                          reported in notifications of type
                          NsChangeNotification. May be present if the
                          "notificationTypes" attribute contains the value
                          "NsChangeNotification", and shall be absent otherwise.
                        type: array
                        items:
                          description: >
                            The enumeration
                            LcmOpOccStatusForChangeNotificationType represents
                            the status of the lifecycle management operation
                            occurrence that impacts the NS component and
                            triggers an NS change notification. It shall comply
                            with the provisions defined in Table 6.5.4.7-1.
                            Value | Description ------|------------ START | The
                            impact on the NS component is identified. COMPLETED
                            | The impact on the NS component stops and related
                            lifecycle operation completes successfully.
                            PARTIALLY_COMPLETED | The impact on the NS component
                            stops and related lifecycle operation partially
                            completes. Inconsistency state may exist on the NS
                            component. FAILED | The impact on the NS component
                            stops and related lifecycle operation fails.
                            Inconsistency state may exist for the NS component.
                            ROLLED_BACK | The impact on the NS component stops
                            and related lifecycle operation is rolled back.
                          type: string
                          enum:
                            - START
                            - COMPLETED
                            - PARTIALLY_COMPLETED
                            - FAILED
                            - ROLLED_BACK
                  callbackUri:
                    description: |
                      String formatted according to IETF RFC 3986.
                    type: string
                  authentication:
                    type: object
                    required:
                      - authType
                    properties:
                      authType:
                        description: >
                          Defines the types of Authentication / Authorization
                          which the API consumer is willing to accept when
                          receiving a notification. Permitted values: * BASIC:
                          In every HTTP request to the notification endpoint,
                          use
                            HTTP Basic authentication with the client credentials. 
                          * OAUTH2_CLIENT_CREDENTIALS: In every HTTP request to
                          the
                            notification endpoint, use an OAuth 2.0 Bearer token, obtained
                            using the client credentials grant type.
                          * TLS_CERT: Every HTTP request to the notification
                          endpoint is sent
                            over a mutually authenticated TLS session, i.e. not only the
                            server is authenticated, but also the client is authenticated
                            during the TLS tunnel setup.
                        type: array
                        items:
                          type: string
                          enum:
                            - BASIC
                            - OAUTH2_CLIENT_CREDENTIALS
                            - TLS_CERT
                      paramsBasic:
                        description: >
                          Parameters for authentication/authorization using
                          BASIC. Shall be present if authType is "BASIC" and the
                          contained information has not been provisioned out of
                          band. Shall be absent otherwise.
                        type: object
                        properties:
                          userName:
                            description: >
                              Username to be used in HTTP Basic authentication.
                              Shall be present if it has not been provisioned
                              out of band.
                            type: string
                          password:
                            description: >
                              Password to be used in HTTP Basic authentication.
                              Shall be present if it has not been provisioned
                              out of band.
                            type: string
                      paramsOauth2ClientCredentials:
                        description: >
                          Parameters for authentication/authorization using
                          OAUTH2_CLIENT_CREDENTIALS. Shall be present if
                          authType is "OAUTH2_CLIENT_CREDENTIALS" and the
                          contained information has not been provisioned out of
                          band. Shall be absent otherwise.
                        type: object
                        properties:
                          clientId:
                            description: >
                              Client identifier to be used in the access token
                              request of the OAuth 2.0 client credentials grant
                              type.  Shall be present if it has not been
                              provisioned out of band. The clientId and
                              clientPassword passed in a subscription shall not
                              be the same as the clientId and clientPassword
                              that are used to obtain authorization for API
                              requests. Client credentials may differ between
                              subscriptions. The value of clientPassword should
                              be generated by a random process.
                            type: string
                          clientPassword:
                            description: >
                              Client password to be used in the access token
                              request of the OAuth 2.0 client credentials grant
                              type.  Shall be present if it has not been
                              provisioned out of band. The clientId and
                              clientPassword passed in a subscription shall not
                              be the same as the clientId and clientPassword
                              that are used to obtain authorization for API
                              requests. Client credentials may differ between
                              subscriptions. The value of clientPassword should
                              be generated by a random process.
                            type: string
                          tokenEndpoint:
                            description: |
                              String formatted according to IETF RFC 3986.
                            type: string
            description: >
              Details of the subscription to be created, as defined in clause
              6.5.2.2.
      responses:
        '201':
          description: >
            201 Created

            The subscription was created successfully. The response body shall
            contain a representation of the created subscription resource. The
            HTTP response shall include a "Location:" HTTP header that points to
            the created subscription resource.            
          schema:
            type: object
            properties:
              LccnSubscription:
                description: >
                  This type represents a subscription related to notifications
                  about NS lifecycle changes.  It shall comply with the
                  provisions defined in Table 6.5.2.4-1.
                type: object
                required:
                  - id
                  - callbackUri
                  - _links
                properties:
                  id:
                    description: |
                      An identifier with the intention of being globally unique.
                    type: string
                  filter:
                    description: >
                      This type represents a subscription filter related to
                      notifications about  NS lifecycle changes. It shall comply
                      with the provisions defined in Table 6.5.3.8-1. At a
                      particular nesting level in the filter structure, the
                      following applies:  All attributes shall match in order
                      for the filter to match (logical "and" between different
                      filter attributes).  If an attribute is an array, the
                      attribute shall match if at least one of the values in the
                      array matches (logical "or" between the values of one
                      filter attribute).
                    type: object
                    properties:
                      nsInstanceSubscriptionFilter:
                        description: >
                          This type represents subscription filter criteria to
                          match NS instances.  It shall comply with the
                          provisions defined in Table 4.4.1.5-1.
                        type: object
                        properties:
                          nsdIds:
                            description: >
                              If present, match NS instances that were created
                              based on a NSD identified by one of the nsdId
                              values listed in this attribute.
                            type: array
                            items:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                          vnfdIds:
                            description: >
                              If present, match NS instances that contain VNF
                              instances that were created based on a VNFD
                              identified by one of the vnfdId values listed in
                              this attribute.
                            type: array
                            items:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                          pnfdIds:
                            description: >
                              If present, match NS instances that contain PNFs
                              that are represented by a PNFD identified by one
                              of the pnfdId values listed in this attribute.
                            type: array
                            items:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                          nsInstanceIds:
                            description: >
                              If present, match NS instances with an instance
                              identifier listed in this attribute.
                            type: array
                            items:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                          nsInstanceNames:
                            description: >
                              If present, match NS instances with a NS Instance
                              Name listed in this attribute.
                            type: array
                            items:
                              description: |
                                This type represents stack of string values
                              type: string
                      notificationTypes:
                        description: >
                          Match particular notification types. Permitted values:
                          - NsLcmOperationOccurenceNotification -
                          NsIdentifierCreationNotification -
                          NsIdentifierDeletionNotification -
                          NsChangeNotification
                        type: array
                        items:
                          type: string
                          enum:
                            - NsLcmOperationOccurenceNotification
                            - NsIdentifierCreationNotification
                            - NsIdentifierDeletionNotification
                            - NsChangeNotification
                      operationTypes:
                        description: >
                          Match particular NS lifecycle operation types for the
                          notification of type
                          NsLcmOperationOccurrenceNotification. May be present
                          if the "notificationTypes" attribute contains the
                          value "NsLcmOperationOccurrenceNotification", and
                          shall be absent otherwise.
                        type: array
                        items:
                          description: >
                            The enumeration NsLcmOpType represents those
                            lifecycle operations that trigger a NS lifecycle
                            management operation occurrence notification. Value
                            | Description ------|------------ INSTANTIATE |
                            Represents the "Instantiate NS" LCM operation. SCALE
                            | Represents the "Scale NS" LCM operation. UPDATE |
                            Represents the "Update NS" LCM operation. TERMINATE
                            | Represents the "Terminate NS" LCM operation. HEAL
                            | Represents the "Heal NS" LCM operation.
                          type: string
                          enum:
                            - INSTANTIATE
                            - SCALE
                            - UPDATE
                            - TERMINATE
                            - HEAL
                      operationStates:
                        description: >
                          Match particular LCM operation state values as
                          reported in notifications of type
                          NsLcmOperationOccurrenceNotification. May be present
                          if the "notificationTypes" attribute contains the
                          value "NsLcmOperationOccurrenceNotification", and
                          shall be absent otherwise.
                        type: array
                        items:
                          description: >
                            Value | Description ------|------------ PROCESSING |
                            The LCM operation is currently in execution.
                            COMPLETED | The LCM operation has been completed
                            successfully. PARTIALLY_COMPLETED | The LCM
                            operation has been partially completed with
                            accepTable errors. FAILED_TEMP | The LCM operation
                            has failed and execution has stopped, but the
                            execution of the operation is not considered to be
                            closed. FAILED | The LCM operation has failed and it
                            cannot be retried or rolled back, as it is
                            determined that such action will not succeed.
                            OLLING_BACK | The LCM operation is currently being
                            rolled back. ROLLED_BACK | The LCM operation has
                            been successfully rolled back, i.e. The state of the
                            NS prior to the original operation invocation has
                            been restored as closely as possible.
                          type: string
                          enum:
                            - PROCESSING
                            - COMPLETED
                            - PARTIALLY_COMPLETED
                            - FAILED_TEMP
                            - FAILED
                            - ROLLING_BACK
                            - ROLLED_BACK
                      nsComponentTypes:
                        description: >
                          Match particular NS component types for the
                          notification of type NsChangeNotification. May be
                          present if the "notificationTypes" attribute contains
                          the value "NsChang.
                        type: array
                        items:
                          description: >
                            The enumeration NsComponentType represents the NS
                            component type. It shall comply with the provisions
                            defined in Table 6.5.4.5-1. Value | Description
                            ------|------------ VNF | Represents the impacted NS
                            component is a VNF. PNF | Represents the impacted NS
                            component is a PNF. NS | Represents the impacted NS
                            component is a nested NS.
                          type: string
                          enum:
                            - VNF
                            - PNF
                            - NS
                      lcmOpNameImpactingNsComponent:
                        description: >
                          Match particular LCM operation names for the
                          notification of type NsChangeNotification. May be
                          present if the "notificationTypes" attribute contains
                          the value "NsChangeNotification", and shall be absent
                          otherwise.
                        type: array
                        items:
                          description: >
                            The enumeration LcmOpNameForChangeNotificationType
                            represents the name of the lifecycle operation that
                            impacts the NS component and trigger an NS change
                            notification. It shall comply with the provisions
                            defined in Table 6.5.4.6-1. Value | Description
                            ------|------------ VNF_INSTANTIATE | Represents the
                            "Instantiate VNF" LCM operation. VNF_SCALE |
                            Represents the "Scale VNF" LCM operation.
                            VNF_SCALE_TO_LEVEL | Represents the "Scale VNF to
                            Level" LCM operation. VNF_CHANGE_FLAVOUR |
                            Represents the "Change VNF Flavor" LCM operation.
                            VNF_TERMINATE | Represents the "Terminate VNF" LCM
                            operation. VNF_HEAL | Represents the "Heal VNF" LCM
                            operation. VNF_OPERATE | Represents the "Operate
                            VNF" LCM operation. VNF_CHANGE_EXT_CONN | Represents
                            the "Change external VNF connectivity" LCM
                            operation. VNF_MODIFY_INFO | Represents the "Modify
                            VNF Information" LCM operation.           
                            NS_INSTANTIATE | Represents the "Instantiate NS" LCM
                            operation NS_SCALE | Represents the "Scale NS" LCM
                            operation. NS_UPDATE | Represents the "Update NS"
                            LCM operation. NS_TERMINATE | Represents the
                            "Terminate NS" LCM operation. NS_HEAL | Represents
                            the "Heal NS" LCM operation.
                          type: string
                          enum:
                            - VNF_INSTANTIATE
                            - VNF_SCALE
                            - VNF_SCALE_TO_LEVEL
                            - VNF_CHANGE_FLAVOUR
                            - VNF_TERMINATE
                            - VNF_HEAL
                            - VNF_OPERATE
                            - VNF_CHANGE_EXT_CONN
                            - VNF_MODIFY_INFO
                            - NS_INSTANTIATE
                            - NS_SCALE
                            - NS_UPDATE
                            - NS_TERMINATE
                            - NS_HEAL
                      lcmOpOccStatusImpactingNsComponent:
                        description: >
                          Match particular LCM operation status values as
                          reported in notifications of type
                          NsChangeNotification. May be present if the
                          "notificationTypes" attribute contains the value
                          "NsChangeNotification", and shall be absent otherwise.
                        type: array
                        items:
                          description: >
                            The enumeration
                            LcmOpOccStatusForChangeNotificationType represents
                            the status of the lifecycle management operation
                            occurrence that impacts the NS component and
                            triggers an NS change notification. It shall comply
                            with the provisions defined in Table 6.5.4.7-1.
                            Value | Description ------|------------ START | The
                            impact on the NS component is identified. COMPLETED
                            | The impact on the NS component stops and related
                            lifecycle operation completes successfully.
                            PARTIALLY_COMPLETED | The impact on the NS component
                            stops and related lifecycle operation partially
                            completes. Inconsistency state may exist on the NS
                            component. FAILED | The impact on the NS component
                            stops and related lifecycle operation fails.
                            Inconsistency state may exist for the NS component.
                            ROLLED_BACK | The impact on the NS component stops
                            and related lifecycle operation is rolled back.
                          type: string
                          enum:
                            - START
                            - COMPLETED
                            - PARTIALLY_COMPLETED
                            - FAILED
                            - ROLLED_BACK
                  callbackUri:
                    description: |
                      String formatted according to IETF RFC 3986.
                    type: string
                  _links:
                    description: |
                      Links to resources related to this resource.
                    type: object
                    required:
                      - self
                    properties:
                      self:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
          headers:
            Content-Type:
              type: string
              description: >
                The MIME type of the body of the response.This header field
                shall be present if the response has a non-empty message body.
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              maximum: 1
              minimum: 0
        '303':
          description: >
            See Other.

            A subscription with the same callbackURI and the same filter already
            exits and the policy of the NFVO is to not create redundant
            subscriptions. The HTTP response shall include a "Location" HTTP
            header that contains the resource URI of the existing subscription
            resource. The response body shall be empty.
          headers:
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              maximum: 1
              minimum: 0
        '400':
          description: >
            Bad Request

            Error: Invalid attribute-based filtering parameters. The response
            body shall contain a ProblemDetails structure, in which the "detail"
            attribute should convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '401':
          description: >
            Unauthorized If the request contains no access token even though one
            is required, or if the request contains an authorization token that
            is invalid (e.g. expired or revoked), the API producer should
            respond with this response. The details of the error shall be
            returned in the WWW-Authenticate HTTP header, as defined in IETF RFC
            6750 and IETF RFC 7235. The ProblemDetails structure may be
            provided.
          headers:
            Content-Type:
              type: string
              description: The MIME type of the body of the response.
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '403':
          description: >
            Forbidden If the API consumer is not allowed to perform a particular
            request to a particular resource, the API producer shall respond
            with this response code. The "ProblemDetails" structure shall be
            provided.  It should include in the "detail" attribute information
            about the source of the problem, and may indicate how to solve it.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '404':
          description: >
            Not Found If the API producer did not find a current representation
            for the resource addressed by the URI passed in the request, or is
            not willing to disclose that one exists, it shall respond with this
            response code.  Specifically in case of this task resource, the
            reason can also be that the task is not supported for the NS LCM
            operation occurrence represented by the parent resource, and that
            the task resource consequently does not exist. The "ProblemDetails"
            structure may be provided, including in the "detail" attribute
            information about the source of the problem, e.g. a wrong resource
            URI variable.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '405':
          description: >
            Method Not Allowed If a particular HTTP method is not supported for
            a particular resource, the API producer shall respond with this
            response code. The "ProblemDetails" structure may be omitted in that
            case.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '406':
          description: >
            Not Acceptable If the Accept HTTP header does not contain at least
            one name of a content type that is acceptable to the API producer,
            the API producer shall respond with this response code. The
            ProblemDetails structure may be omitted in that case.        
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '500':
          description: >
            Internal Server Error If there is an application error not related
            to the client's input that cannot be easily mapped to any other HTTP
            response code ("catch all error"), the API producer shall respond
            withthis response code. The ProblemDetails structure shall be
            provided, and shall include in the "detail" attribute more
            information about the source of the problem.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '503':
          description: >
            Service Unavailable If the API producer encounters an internal
            overload situation of itself or of a system it relies on, it should
            respond with this response code, following the provisions in IETF
            RFC 7231 [13] for the use of the Retry-After HTTP header and for the
            alternative to refuse the connection. The "ProblemDetails" structure
            may be omitted.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
    get:
      summary: Query multiple subscriptions.
      description: >
        Query Subscription Information.

        The GET method queries the list of active subscriptions of the
        functional block that invokes the method. It can be used e.g. for
        resynchronization after error situations.
      parameters:
        - name: Accept
          description: >
            Content-Types that are acceptable for the response. Reference: IETF
            RFC 7231
          in: header
          required: true
          type: string
        - name: Authorization
          description: |
            The authorization token for the request. Reference: IETF RFC 7235
          in: header
          required: false
          type: string
      responses:
        '200':
          description: >
            200 OK

            The list of subscriptions was queried successfully. The response
            body shall contain the representations of all active subscriptions
            of the functional block that invokes the method.
          headers:
            Content-Type:
              type: string
              description: >
                The MIME type of the body of the response.This header field
                shall be present if the response has a non-empty message body.
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              maximum: 1
              minimum: 0
          schema:
            type: array
            items:
              properties:
                LccnSubscription:
                  description: >
                    This type represents a subscription related to notifications
                    about NS lifecycle changes.  It shall comply with the
                    provisions defined in Table 6.5.2.4-1.
                  type: object
                  required:
                    - id
                    - callbackUri
                    - _links
                  properties:
                    id:
                      description: >
                        An identifier with the intention of being globally
                        unique.
                      type: string
                    filter:
                      description: >
                        This type represents a subscription filter related to
                        notifications about  NS lifecycle changes. It shall
                        comply with the provisions defined in Table 6.5.3.8-1.
                        At a particular nesting level in the filter structure,
                        the following applies:  All attributes shall match in
                        order for the filter to match (logical "and" between
                        different filter attributes).  If an attribute is an
                        array, the attribute shall match if at least one of the
                        values in the array matches (logical "or" between the
                        values of one filter attribute).
                      type: object
                      properties:
                        nsInstanceSubscriptionFilter:
                          description: >
                            This type represents subscription filter criteria to
                            match NS instances.  It shall comply with the
                            provisions defined in Table 4.4.1.5-1.
                          type: object
                          properties:
                            nsdIds:
                              description: >
                                If present, match NS instances that were created
                                based on a NSD identified by one of the nsdId
                                values listed in this attribute.
                              type: array
                              items:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                            vnfdIds:
                              description: >
                                If present, match NS instances that contain VNF
                                instances that were created based on a VNFD
                                identified by one of the vnfdId values listed in
                                this attribute.
                              type: array
                              items:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                            pnfdIds:
                              description: >
                                If present, match NS instances that contain PNFs
                                that are represented by a PNFD identified by one
                                of the pnfdId values listed in this attribute.
                              type: array
                              items:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                            nsInstanceIds:
                              description: >
                                If present, match NS instances with an instance
                                identifier listed in this attribute.
                              type: array
                              items:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                            nsInstanceNames:
                              description: >
                                If present, match NS instances with a NS
                                Instance Name listed in this attribute.
                              type: array
                              items:
                                description: |
                                  This type represents stack of string values
                                type: string
                        notificationTypes:
                          description: >
                            Match particular notification types. Permitted
                            values: - NsLcmOperationOccurenceNotification -
                            NsIdentifierCreationNotification -
                            NsIdentifierDeletionNotification -
                            NsChangeNotification
                          type: array
                          items:
                            type: string
                            enum:
                              - NsLcmOperationOccurenceNotification
                              - NsIdentifierCreationNotification
                              - NsIdentifierDeletionNotification
                              - NsChangeNotification
                        operationTypes:
                          description: >
                            Match particular NS lifecycle operation types for
                            the notification of type
                            NsLcmOperationOccurrenceNotification. May be present
                            if the "notificationTypes" attribute contains the
                            value "NsLcmOperationOccurrenceNotification", and
                            shall be absent otherwise.
                          type: array
                          items:
                            description: >
                              The enumeration NsLcmOpType represents those
                              lifecycle operations that trigger a NS lifecycle
                              management operation occurrence notification.
                              Value | Description ------|------------
                              INSTANTIATE | Represents the "Instantiate NS" LCM
                              operation. SCALE | Represents the "Scale NS" LCM
                              operation. UPDATE | Represents the "Update NS" LCM
                              operation. TERMINATE | Represents the "Terminate
                              NS" LCM operation. HEAL | Represents the "Heal NS"
                              LCM operation.
                            type: string
                            enum:
                              - INSTANTIATE
                              - SCALE
                              - UPDATE
                              - TERMINATE
                              - HEAL
                        operationStates:
                          description: >
                            Match particular LCM operation state values as
                            reported in notifications of type
                            NsLcmOperationOccurrenceNotification. May be present
                            if the "notificationTypes" attribute contains the
                            value "NsLcmOperationOccurrenceNotification", and
                            shall be absent otherwise.
                          type: array
                          items:
                            description: >
                              Value | Description ------|------------ PROCESSING
                              | The LCM operation is currently in execution.
                              COMPLETED | The LCM operation has been completed
                              successfully. PARTIALLY_COMPLETED | The LCM
                              operation has been partially completed with
                              accepTable errors. FAILED_TEMP | The LCM operation
                              has failed and execution has stopped, but the
                              execution of the operation is not considered to be
                              closed. FAILED | The LCM operation has failed and
                              it cannot be retried or rolled back, as it is
                              determined that such action will not succeed.
                              OLLING_BACK | The LCM operation is currently being
                              rolled back. ROLLED_BACK | The LCM operation has
                              been successfully rolled back, i.e. The state of
                              the NS prior to the original operation invocation
                              has been restored as closely as possible.
                            type: string
                            enum:
                              - PROCESSING
                              - COMPLETED
                              - PARTIALLY_COMPLETED
                              - FAILED_TEMP
                              - FAILED
                              - ROLLING_BACK
                              - ROLLED_BACK
                        nsComponentTypes:
                          description: >
                            Match particular NS component types for the
                            notification of type NsChangeNotification. May be
                            present if the "notificationTypes" attribute
                            contains the value "NsChang.
                          type: array
                          items:
                            description: >
                              The enumeration NsComponentType represents the NS
                              component type. It shall comply with the
                              provisions defined in Table 6.5.4.5-1. Value |
                              Description ------|------------ VNF | Represents
                              the impacted NS component is a VNF. PNF |
                              Represents the impacted NS component is a PNF. NS
                              | Represents the impacted NS component is a nested
                              NS.
                            type: string
                            enum:
                              - VNF
                              - PNF
                              - NS
                        lcmOpNameImpactingNsComponent:
                          description: >
                            Match particular LCM operation names for the
                            notification of type NsChangeNotification. May be
                            present if the "notificationTypes" attribute
                            contains the value "NsChangeNotification", and shall
                            be absent otherwise.
                          type: array
                          items:
                            description: >
                              The enumeration LcmOpNameForChangeNotificationType
                              represents the name of the lifecycle operation
                              that impacts the NS component and trigger an NS
                              change notification. It shall comply with the
                              provisions defined in Table 6.5.4.6-1. Value |
                              Description ------|------------ VNF_INSTANTIATE |
                              Represents the "Instantiate VNF" LCM operation.
                              VNF_SCALE | Represents the "Scale VNF" LCM
                              operation. VNF_SCALE_TO_LEVEL | Represents the
                              "Scale VNF to Level" LCM operation.
                              VNF_CHANGE_FLAVOUR | Represents the "Change VNF
                              Flavor" LCM operation. VNF_TERMINATE | Represents
                              the "Terminate VNF" LCM operation. VNF_HEAL |
                              Represents the "Heal VNF" LCM operation.
                              VNF_OPERATE | Represents the "Operate VNF" LCM
                              operation. VNF_CHANGE_EXT_CONN | Represents the
                              "Change external VNF connectivity" LCM operation.
                              VNF_MODIFY_INFO | Represents the "Modify VNF
                              Information" LCM operation.           
                              NS_INSTANTIATE | Represents the "Instantiate NS"
                              LCM operation NS_SCALE | Represents the "Scale NS"
                              LCM operation. NS_UPDATE | Represents the "Update
                              NS" LCM operation. NS_TERMINATE | Represents the
                              "Terminate NS" LCM operation. NS_HEAL | Represents
                              the "Heal NS" LCM operation.
                            type: string
                            enum:
                              - VNF_INSTANTIATE
                              - VNF_SCALE
                              - VNF_SCALE_TO_LEVEL
                              - VNF_CHANGE_FLAVOUR
                              - VNF_TERMINATE
                              - VNF_HEAL
                              - VNF_OPERATE
                              - VNF_CHANGE_EXT_CONN
                              - VNF_MODIFY_INFO
                              - NS_INSTANTIATE
                              - NS_SCALE
                              - NS_UPDATE
                              - NS_TERMINATE
                              - NS_HEAL
                        lcmOpOccStatusImpactingNsComponent:
                          description: >
                            Match particular LCM operation status values as
                            reported in notifications of type
                            NsChangeNotification. May be present if the
                            "notificationTypes" attribute contains the value
                            "NsChangeNotification", and shall be absent
                            otherwise.
                          type: array
                          items:
                            description: >
                              The enumeration
                              LcmOpOccStatusForChangeNotificationType represents
                              the status of the lifecycle management operation
                              occurrence that impacts the NS component and
                              triggers an NS change notification. It shall
                              comply with the provisions defined in Table
                              6.5.4.7-1. Value | Description ------|------------
                              START | The impact on the NS component is
                              identified. COMPLETED | The impact on the NS
                              component stops and related lifecycle operation
                              completes successfully. PARTIALLY_COMPLETED | The
                              impact on the NS component stops and related
                              lifecycle operation partially completes.
                              Inconsistency state may exist on the NS component.
                              FAILED | The impact on the NS component stops and
                              related lifecycle operation fails. Inconsistency
                              state may exist for the NS component. ROLLED_BACK
                              | The impact on the NS component stops and related
                              lifecycle operation is rolled back.
                            type: string
                            enum:
                              - START
                              - COMPLETED
                              - PARTIALLY_COMPLETED
                              - FAILED
                              - ROLLED_BACK
                    callbackUri:
                      description: |
                        String formatted according to IETF RFC 3986.
                      type: string
                    _links:
                      description: |
                        Links to resources related to this resource.
                      type: object
                      required:
                        - self
                      properties:
                        self:
                          description: |
                            This type represents a link to a resource.
                          type: object
                          required:
                            - href
                          properties:
                            href:
                              description: |
                                URI of the referenced resource.
                              type: string
                              format: url
        '400':
          description: >
            Bad Request.

            Invalid attribute-based filtering parameters. The response body
            shall contain a ProblemDetails structure, in which the "detail"
            attribute should convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '401':
          description: >
            Unauthorized If the request contains no access token even though one
            is required, or if the request contains an authorization token that
            is invalid (e.g. expired or revoked), the API producer should
            respond with this response. The details of the error shall be
            returned in the WWW-Authenticate HTTP header, as defined in IETF RFC
            6750 and IETF RFC 7235. The ProblemDetails structure may be
            provided.
          headers:
            Content-Type:
              type: string
              description: The MIME type of the body of the response.
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '403':
          description: >
            Forbidden If the API consumer is not allowed to perform a particular
            request to a particular resource, the API producer shall respond
            with this response code. The "ProblemDetails" structure shall be
            provided.  It should include in the "detail" attribute information
            about the source of the problem, and may indicate how to solve it.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '404':
          description: >
            Not Found If the API producer did not find a current representation
            for the resource addressed by the URI passed in the request, or is
            not willing to disclose that one exists, it shall respond with this
            response code.  Specifically in case of this task resource, the
            reason can also be that the task is not supported for the NS LCM
            operation occurrence represented by the parent resource, and that
            the task resource consequently does not exist. The "ProblemDetails"
            structure may be provided, including in the "detail" attribute
            information about the source of the problem, e.g. a wrong resource
            URI variable.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '405':
          description: >
            Method Not Allowed If a particular HTTP method is not supported for
            a particular resource, the API producer shall respond with this
            response code. The "ProblemDetails" structure may be omitted in that
            case.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '406':
          description: >
            Not Acceptable If the Accept HTTP header does not contain at least
            one name of a content type that is acceptable to the API producer,
            the API producer shall respond with this response code. The
            ProblemDetails structure may be omitted in that case.        
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '500':
          description: >
            Internal Server Error If there is an application error not related
            to the client's input that cannot be easily mapped to any other HTTP
            response code ("catch all error"), the API producer shall respond
            withthis response code. The ProblemDetails structure shall be
            provided, and shall include in the "detail" attribute more
            information about the source of the problem.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '503':
          description: >
            Service Unavailable If the API producer encounters an internal
            overload situation of itself or of a system it relies on, it should
            respond with this response code, following the provisions in IETF
            RFC 7231 [13] for the use of the Retry-After HTTP header and for the
            alternative to refuse the connection. The "ProblemDetails" structure
            may be omitted.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
  '/subscriptions/{subscriptionId}':
    parameters:
      - name: subscriptionId
        description: |
          Identifier of this subscription.
        in: path
        type: string
        required: true
    get:
      summary: Read an individual subscription resource.
      description: >
        The GET method retrieves information about a subscription by reading an
        individual subscription resource. This method shall support the URI
        query parameters, request and response data structures, and response
        codes, as specified in the Tables 6.4.17.3.2-1 and 6.4.17.3.2-2
      parameters:
        - name: Accept
          description: >
            Content-Types that are acceptable for the response. Reference: IETF
            RFC 7231
          in: header
          required: true
          type: string
        - name: Authorization
          description: |
            The authorization token for the request. Reference: IETF RFC 7235
          in: header
          required: false
          type: string
      responses:
        '200':
          description: >
            200 OK

            The operation has completed successfully. The response body shall
            contain a representation of the subscription resource.            
          schema:
            type: object
            properties:
              LccnSubscription:
                description: >
                  This type represents a subscription related to notifications
                  about NS lifecycle changes.  It shall comply with the
                  provisions defined in Table 6.5.2.4-1.
                type: object
                required:
                  - id
                  - callbackUri
                  - _links
                properties:
                  id:
                    description: |
                      An identifier with the intention of being globally unique.
                    type: string
                  filter:
                    description: >
                      This type represents a subscription filter related to
                      notifications about  NS lifecycle changes. It shall comply
                      with the provisions defined in Table 6.5.3.8-1. At a
                      particular nesting level in the filter structure, the
                      following applies:  All attributes shall match in order
                      for the filter to match (logical "and" between different
                      filter attributes).  If an attribute is an array, the
                      attribute shall match if at least one of the values in the
                      array matches (logical "or" between the values of one
                      filter attribute).
                    type: object
                    properties:
                      nsInstanceSubscriptionFilter:
                        description: >
                          This type represents subscription filter criteria to
                          match NS instances.  It shall comply with the
                          provisions defined in Table 4.4.1.5-1.
                        type: object
                        properties:
                          nsdIds:
                            description: >
                              If present, match NS instances that were created
                              based on a NSD identified by one of the nsdId
                              values listed in this attribute.
                            type: array
                            items:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                          vnfdIds:
                            description: >
                              If present, match NS instances that contain VNF
                              instances that were created based on a VNFD
                              identified by one of the vnfdId values listed in
                              this attribute.
                            type: array
                            items:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                          pnfdIds:
                            description: >
                              If present, match NS instances that contain PNFs
                              that are represented by a PNFD identified by one
                              of the pnfdId values listed in this attribute.
                            type: array
                            items:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                          nsInstanceIds:
                            description: >
                              If present, match NS instances with an instance
                              identifier listed in this attribute.
                            type: array
                            items:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                          nsInstanceNames:
                            description: >
                              If present, match NS instances with a NS Instance
                              Name listed in this attribute.
                            type: array
                            items:
                              description: |
                                This type represents stack of string values
                              type: string
                      notificationTypes:
                        description: >
                          Match particular notification types. Permitted values:
                          - NsLcmOperationOccurenceNotification -
                          NsIdentifierCreationNotification -
                          NsIdentifierDeletionNotification -
                          NsChangeNotification
                        type: array
                        items:
                          type: string
                          enum:
                            - NsLcmOperationOccurenceNotification
                            - NsIdentifierCreationNotification
                            - NsIdentifierDeletionNotification
                            - NsChangeNotification
                      operationTypes:
                        description: >
                          Match particular NS lifecycle operation types for the
                          notification of type
                          NsLcmOperationOccurrenceNotification. May be present
                          if the "notificationTypes" attribute contains the
                          value "NsLcmOperationOccurrenceNotification", and
                          shall be absent otherwise.
                        type: array
                        items:
                          description: >
                            The enumeration NsLcmOpType represents those
                            lifecycle operations that trigger a NS lifecycle
                            management operation occurrence notification. Value
                            | Description ------|------------ INSTANTIATE |
                            Represents the "Instantiate NS" LCM operation. SCALE
                            | Represents the "Scale NS" LCM operation. UPDATE |
                            Represents the "Update NS" LCM operation. TERMINATE
                            | Represents the "Terminate NS" LCM operation. HEAL
                            | Represents the "Heal NS" LCM operation.
                          type: string
                          enum:
                            - INSTANTIATE
                            - SCALE
                            - UPDATE
                            - TERMINATE
                            - HEAL
                      operationStates:
                        description: >
                          Match particular LCM operation state values as
                          reported in notifications of type
                          NsLcmOperationOccurrenceNotification. May be present
                          if the "notificationTypes" attribute contains the
                          value "NsLcmOperationOccurrenceNotification", and
                          shall be absent otherwise.
                        type: array
                        items:
                          description: >
                            Value | Description ------|------------ PROCESSING |
                            The LCM operation is currently in execution.
                            COMPLETED | The LCM operation has been completed
                            successfully. PARTIALLY_COMPLETED | The LCM
                            operation has been partially completed with
                            accepTable errors. FAILED_TEMP | The LCM operation
                            has failed and execution has stopped, but the
                            execution of the operation is not considered to be
                            closed. FAILED | The LCM operation has failed and it
                            cannot be retried or rolled back, as it is
                            determined that such action will not succeed.
                            OLLING_BACK | The LCM operation is currently being
                            rolled back. ROLLED_BACK | The LCM operation has
                            been successfully rolled back, i.e. The state of the
                            NS prior to the original operation invocation has
                            been restored as closely as possible.
                          type: string
                          enum:
                            - PROCESSING
                            - COMPLETED
                            - PARTIALLY_COMPLETED
                            - FAILED_TEMP
                            - FAILED
                            - ROLLING_BACK
                            - ROLLED_BACK
                      nsComponentTypes:
                        description: >
                          Match particular NS component types for the
                          notification of type NsChangeNotification. May be
                          present if the "notificationTypes" attribute contains
                          the value "NsChang.
                        type: array
                        items:
                          description: >
                            The enumeration NsComponentType represents the NS
                            component type. It shall comply with the provisions
                            defined in Table 6.5.4.5-1. Value | Description
                            ------|------------ VNF | Represents the impacted NS
                            component is a VNF. PNF | Represents the impacted NS
                            component is a PNF. NS | Represents the impacted NS
                            component is a nested NS.
                          type: string
                          enum:
                            - VNF
                            - PNF
                            - NS
                      lcmOpNameImpactingNsComponent:
                        description: >
                          Match particular LCM operation names for the
                          notification of type NsChangeNotification. May be
                          present if the "notificationTypes" attribute contains
                          the value "NsChangeNotification", and shall be absent
                          otherwise.
                        type: array
                        items:
                          description: >
                            The enumeration LcmOpNameForChangeNotificationType
                            represents the name of the lifecycle operation that
                            impacts the NS component and trigger an NS change
                            notification. It shall comply with the provisions
                            defined in Table 6.5.4.6-1. Value | Description
                            ------|------------ VNF_INSTANTIATE | Represents the
                            "Instantiate VNF" LCM operation. VNF_SCALE |
                            Represents the "Scale VNF" LCM operation.
                            VNF_SCALE_TO_LEVEL | Represents the "Scale VNF to
                            Level" LCM operation. VNF_CHANGE_FLAVOUR |
                            Represents the "Change VNF Flavor" LCM operation.
                            VNF_TERMINATE | Represents the "Terminate VNF" LCM
                            operation. VNF_HEAL | Represents the "Heal VNF" LCM
                            operation. VNF_OPERATE | Represents the "Operate
                            VNF" LCM operation. VNF_CHANGE_EXT_CONN | Represents
                            the "Change external VNF connectivity" LCM
                            operation. VNF_MODIFY_INFO | Represents the "Modify
                            VNF Information" LCM operation.           
                            NS_INSTANTIATE | Represents the "Instantiate NS" LCM
                            operation NS_SCALE | Represents the "Scale NS" LCM
                            operation. NS_UPDATE | Represents the "Update NS"
                            LCM operation. NS_TERMINATE | Represents the
                            "Terminate NS" LCM operation. NS_HEAL | Represents
                            the "Heal NS" LCM operation.
                          type: string
                          enum:
                            - VNF_INSTANTIATE
                            - VNF_SCALE
                            - VNF_SCALE_TO_LEVEL
                            - VNF_CHANGE_FLAVOUR
                            - VNF_TERMINATE
                            - VNF_HEAL
                            - VNF_OPERATE
                            - VNF_CHANGE_EXT_CONN
                            - VNF_MODIFY_INFO
                            - NS_INSTANTIATE
                            - NS_SCALE
                            - NS_UPDATE
                            - NS_TERMINATE
                            - NS_HEAL
                      lcmOpOccStatusImpactingNsComponent:
                        description: >
                          Match particular LCM operation status values as
                          reported in notifications of type
                          NsChangeNotification. May be present if the
                          "notificationTypes" attribute contains the value
                          "NsChangeNotification", and shall be absent otherwise.
                        type: array
                        items:
                          description: >
                            The enumeration
                            LcmOpOccStatusForChangeNotificationType represents
                            the status of the lifecycle management operation
                            occurrence that impacts the NS component and
                            triggers an NS change notification. It shall comply
                            with the provisions defined in Table 6.5.4.7-1.
                            Value | Description ------|------------ START | The
                            impact on the NS component is identified. COMPLETED
                            | The impact on the NS component stops and related
                            lifecycle operation completes successfully.
                            PARTIALLY_COMPLETED | The impact on the NS component
                            stops and related lifecycle operation partially
                            completes. Inconsistency state may exist on the NS
                            component. FAILED | The impact on the NS component
                            stops and related lifecycle operation fails.
                            Inconsistency state may exist for the NS component.
                            ROLLED_BACK | The impact on the NS component stops
                            and related lifecycle operation is rolled back.
                          type: string
                          enum:
                            - START
                            - COMPLETED
                            - PARTIALLY_COMPLETED
                            - FAILED
                            - ROLLED_BACK
                  callbackUri:
                    description: |
                      String formatted according to IETF RFC 3986.
                    type: string
                  _links:
                    description: |
                      Links to resources related to this resource.
                    type: object
                    required:
                      - self
                    properties:
                      self:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
          headers:
            Content-Type:
              type: string
              description: >
                The MIME type of the body of the response.This header field
                shall be present if the response has a non-empty message body.
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              maximum: 1
              minimum: 0
        '400':
          description: >
            Bad Request

            Error: Invalid attribute-based filtering parameters. The response
            body shall contain a ProblemDetails structure, in which the "detail"
            attribute should convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '401':
          description: >
            Unauthorized If the request contains no access token even though one
            is required, or if the request contains an authorization token that
            is invalid (e.g. expired or revoked), the API producer should
            respond with this response. The details of the error shall be
            returned in the WWW-Authenticate HTTP header, as defined in IETF RFC
            6750 and IETF RFC 7235. The ProblemDetails structure may be
            provided.
          headers:
            Content-Type:
              type: string
              description: The MIME type of the body of the response.
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '403':
          description: >
            Forbidden If the API consumer is not allowed to perform a particular
            request to a particular resource, the API producer shall respond
            with this response code. The "ProblemDetails" structure shall be
            provided.  It should include in the "detail" attribute information
            about the source of the problem, and may indicate how to solve it.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '404':
          description: >
            Not Found If the API producer did not find a current representation
            for the resource addressed by the URI passed in the request, or is
            not willing to disclose that one exists, it shall respond with this
            response code.  Specifically in case of this task resource, the
            reason can also be that the task is not supported for the NS LCM
            operation occurrence represented by the parent resource, and that
            the task resource consequently does not exist. The "ProblemDetails"
            structure may be provided, including in the "detail" attribute
            information about the source of the problem, e.g. a wrong resource
            URI variable.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '405':
          description: >
            Method Not Allowed If a particular HTTP method is not supported for
            a particular resource, the API producer shall respond with this
            response code. The "ProblemDetails" structure may be omitted in that
            case.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '406':
          description: >
            Not Acceptable If the Accept HTTP header does not contain at least
            one name of a content type that is acceptable to the API producer,
            the API producer shall respond with this response code. The
            ProblemDetails structure may be omitted in that case.        
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '500':
          description: >
            Internal Server Error If there is an application error not related
            to the client's input that cannot be easily mapped to any other HTTP
            response code ("catch all error"), the API producer shall respond
            withthis response code. The ProblemDetails structure shall be
            provided, and shall include in the "detail" attribute more
            information about the source of the problem.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '503':
          description: >
            Service Unavailable If the API producer encounters an internal
            overload situation of itself or of a system it relies on, it should
            respond with this response code, following the provisions in IETF
            RFC 7231 [13] for the use of the Retry-After HTTP header and for the
            alternative to refuse the connection. The "ProblemDetails" structure
            may be omitted.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
    delete:
      summary: Terminate a subscription.
      description: >
        The DELETE method terminates an individual subscription. This method
        shall support the URI query parameters, request and response data
        structures, and response codes, as specified in the Tables 6.4.17.3.5-1
        and 6.4.17.3.5-2.
      parameters:
        - name: Authorization
          description: |
            The authorization token for the request. Reference: IETF RFC 7235
          in: header
          required: false
          type: string
      responses:
        '204':
          description: >
            204 No Content

            The subscription resource was deleted successfully. The response
            body shall be empty.
          headers:
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              maximum: 1
              minimum: 0
        '400':
          description: >
            Bad Request

            Error: Invalid attribute-based filtering parameters. The response
            body shall contain a ProblemDetails structure, in which the "detail"
            attribute should convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '401':
          description: >
            Unauthorized If the request contains no access token even though one
            is required, or if the request contains an authorization token that
            is invalid (e.g. expired or revoked), the API producer should
            respond with this response. The details of the error shall be
            returned in the WWW-Authenticate HTTP header, as defined in IETF RFC
            6750 and IETF RFC 7235. The ProblemDetails structure may be
            provided.
          headers:
            Content-Type:
              type: string
              description: The MIME type of the body of the response.
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '403':
          description: >
            Forbidden If the API consumer is not allowed to perform a particular
            request to a particular resource, the API producer shall respond
            with this response code. The "ProblemDetails" structure shall be
            provided.  It should include in the "detail" attribute information
            about the source of the problem, and may indicate how to solve it.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '405':
          description: >
            Method Not Allowed If a particular HTTP method is not supported for
            a particular resource, the API producer shall respond with this
            response code. The "ProblemDetails" structure may be omitted in that
            case.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '406':
          description: >
            Not Acceptable If the Accept HTTP header does not contain at least
            one name of a content type that is acceptable to the API producer,
            the API producer shall respond with this response code. The
            ProblemDetails structure may be omitted in that case.        
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '500':
          description: >
            Internal Server Error If there is an application error not related
            to the client's input that cannot be easily mapped to any other HTTP
            response code ("catch all error"), the API producer shall respond
            withthis response code. The ProblemDetails structure shall be
            provided, and shall include in the "detail" attribute more
            information about the source of the problem.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '503':
          description: >
            Service Unavailable If the API producer encounters an internal
            overload situation of itself or of a system it relies on, it should
            respond with this response code, following the provisions in IETF
            RFC 7231 [13] for the use of the Retry-After HTTP header and for the
            alternative to refuse the connection. The "ProblemDetails" structure
            may be omitted.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
  /URI_is_provided_by_the_client_when_creating_the_subscription-NsLcmOperationOccurrenceNotification:
    post:
      summary: Notify about NS lifecycle change
      description: >
        The POST method delivers a notification from the server to the client.
        This method shall support the URI query parameters, request and response
        data structures, and response codes, as specified in the Tables
        6.4.18.3.1-1 and 6.4.18.3.1-2.
      parameters:
        - name: NsLcmOperationOccurrenceNotification
          description: >
            A notification about lifecycle changes triggered by a NS LCM.
            operation occurrence.  
          in: body
          required: true
          schema:
            properties:
              NsLcmOperationOccurrenceNotification:
                type: object
                required:
                  - id
                  - nsInstanceId
                  - nsLcmOpOccId
                  - subscriptionId
                properties:
                  id:
                    description: |
                      An identifier with the intention of being globally unique.
                    type: string
                  nsInstanceId:
                    description: |
                      An identifier with the intention of being globally unique.
                    type: string
                  nsLcmOpOccId:
                    description: |
                      An identifier with the intention of being globally unique.
                    type: string
                  operation:
                    description: >
                      The enumeration NsLcmOpType represents those lifecycle
                      operations that trigger a NS lifecycle management
                      operation occurrence notification. Value | Description
                      ------|------------ INSTANTIATE | Represents the
                      "Instantiate NS" LCM operation. SCALE | Represents the
                      "Scale NS" LCM operation. UPDATE | Represents the "Update
                      NS" LCM operation. TERMINATE | Represents the "Terminate
                      NS" LCM operation. HEAL | Represents the "Heal NS" LCM
                      operation.
                    type: string
                    enum:
                      - INSTANTIATE
                      - SCALE
                      - UPDATE
                      - TERMINATE
                      - HEAL
                  notificationType:
                    description: >
                      Discriminator for the different notification types. Shall
                      be set to "NsLcmOperationOccurrenceNotification" for this
                      notification type.
                    type: string
                  subscriptionId:
                    description: |
                      An identifier with the intention of being globally unique.
                    type: string
                  timestamp:
                    description: >
                      Date-time stamp.  Representation: String formatted
                      according to IETF RFC 3339.
                    type: string
                    format: date-time
                  notificationStatus:
                    description: >
                      Indicates whether this notification reports about the
                      start of a NS lifecycle operation or the result of a NS
                      lifecycle operation. Permitted values: - START: Informs
                      about the start of the NS LCM operation occurrence. -
                      RESULT: Informs about the final or intermediate result of
                      the NS LCM operation occurrence.
                    type: string
                    enum:
                      - START
                      - RESULT
                  operationState:
                    description: >
                      The enumeration NsLcmOperationStateType shall comply with
                      the provisions defined in Table 6.5.4.4-1. Value |
                      Description ------|------------ PROCESSING | The LCM
                      operation is currently in execution. COMPLETED | The LCM
                      operation has been completed successfully.
                      PARTIALLY_COMPLETED | The LCM operation has been partially
                      completed with accepTable errors. FAILED_TEMP | The LCM
                      operation has failed and execution has stopped, but the
                      execution of the operation is not considered to be closed.
                      FAILED | The LCM operation has failed and it cannot be
                      retried or rolled back, as it is determined that such
                      action won't succeed. OLLING_BACK | The LCM operation is
                      currently being rolled back. ROLLED_BACK | The LCM
                      operation has been successfully rolled back, i.e. The
                      state of the VNF prior to the original operation
                      invocation has been restored as closely as possible.
                    type: string
                    enum:
                      - PROCESSING
                      - COMPLETED
                      - FAILED_TEMP
                      - FAILED
                      - ROLLING_BACK
                      - ROLLED_BACK
                  isAutomaticInvocation:
                    description: >
                      Set to true if this NS LCM operation occurrence has been
                      automatically triggered by the NFVO. This occurs in case
                      of auto-scaling, auto-healing and when a nested NS is
                      modified as a result of an operation on its composite NS.
                      Set to false otherwise.
                    type: boolean
                  affectedVnf:
                    description: >
                      This type provides information about added, deleted and
                      modified VNFs.  It shall comply with the provisions in
                      Table 6.5.3.2-1.
                    type: object
                    required:
                      - vnfInstanceId
                      - vnfdId
                      - vnfProfileId
                    properties:
                      vnfInstanceId:
                        description: >
                          An identifier with the intention of being globally
                          unique.
                        type: string
                      vnfdId:
                        description: >
                          An identifier with the intention of being globally
                          unique.
                        type: string
                      vnfProfileId:
                        description: >
                          An identifier that is unique within a NS descriptor.
                          Representation: string of variable length.
                        type: string
                      vnfName:
                        description: |
                          Name of the VNF Instance.
                        type: string
                      changeType:
                        description: >
                          Signals the type of change Permitted values: - ADD -
                          REMOVE - INSTANTIATE - TERMINATE - SCALE -
                          CHANGE_FLAVOUR - HEAL - OPERATE - MODIFY_INFORMATION -
                          CHANGE_EXTERNAL_VNF_CONNECTIVITY
                        type: string
                        enum:
                          - ADD
                          - REMOVE
                          - INSTANTIATE
                          - TERMINATE
                          - SCALE
                          - CHANGE_FLAVOUR
                          - HEAL
                          - OPERATE
                          - MODIFY_INFORMATION
                          - CHANGE_EXTERNAL_VNF_CONNECTIVITY
                      changeResult:
                        description: >
                          Signals the result of change identified by the
                          "changeType" attribute. Permitted values: - COMPLETED
                          - ROLLED_BACK - FAILED
                        type: string
                        enum:
                          - COMPLETED
                          - ROLLED_BACK
                          - FAILED
                      changedInfo:
                        description: >
                          Information about the changed VNF instance
                          information, including VNF configurable properties,if
                          applicable. When the "changedInfo" attribute is
                          present,  either the "changedVnfInfo" attribute or the
                          "changedExtConnectivity" attribute or both shall be
                          present.
                        type: object
                        required:
                          - self
                        properties:
                          changedVnfInfo:
                            description: >
                              This type represents the information that is
                              requested to be modified for a VNF instance. The
                              information to be modified shall comply with the
                              associated NSD. EXAMPLE. The vnfPkgId attribute
                              value for a particular VNF instance can only be
                              updated with a value that matches the identifier
                              value of a VNF package whose vnfdId is present in
                              the associated profile of the NSD.
                            type: object
                            required:
                              - vnfInstanceId
                            properties:
                              vnfInstanceId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              vnfInstanceName:
                                description: >
                                  New value of the "vnfInstanceName" attribute
                                  in "VnfInstance", or "null" to remove the
                                  attribute.
                                type: string
                              vnfInstanceDescription:
                                description: >
                                  New value of the "vnfInstanceDescription"
                                  attribute in "VnfInstance", or "null" to
                                  remove the attribute.
                                type: string
                              vnfPkgId:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              vnfConfigurableProperties:
                                description: >
                                  This type represents a list of key-value
                                  pairs. The order of the pairs in the list is
                                  not significant. In JSON, a set of key- value
                                  pairs is represented as an object. It shall
                                  comply with the provisions  defined in clause
                                  4 of IETF RFC 7159. 
                                type: object
                              Metadata:
                                description: >
                                  This type represents a list of key-value
                                  pairs. The order of the pairs in the list is
                                  not significant. In JSON, a set of key- value
                                  pairs is represented as an object. It shall
                                  comply with the provisions  defined in clause
                                  4 of IETF RFC 7159. 
                                type: object
                              Extensions:
                                description: >
                                  This type represents a list of key-value
                                  pairs. The order of the pairs in the list is
                                  not significant. In JSON, a set of key- value
                                  pairs is represented as an object. It shall
                                  comply with the provisions  defined in clause
                                  4 of IETF RFC 7159. 
                                type: object
                          changedExtConnectivity:
                            type: object
                            required:
                              - id
                              - resourceHandle
                            properties:
                              id:
                                description: >
                                  An identifier with the intention of being
                                  globally unique.
                                type: string
                              resourceHandle:
                                required:
                                  - vimConnectionId
                                  - resourceId
                                type: object
                                description: >
                                  This type represents the information that
                                  allows addressing a virtualised resource that
                                  is used by a VNF instance. Information about
                                  the resource is available from the VIM.
                                properties:
                                  vimConnectionId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceProviderId:
                                    description: >
                                      An identifier with the intention of being
                                      globally unique.
                                    type: string
                                  resourceId:
                                    description: >
                                      An identifier maintained by the VIM or
                                      other resource provider. It is expected to
                                      be unique within the VIM instance.
                                    type: string
                                  vimLevelResourceType:
                                    description: >
                                      Type of the resource in the scope of the
                                      VIM or the resource provider.
                                    type: string
                              extLinkPorts:
                                description: |
                                  Link ports of this VL.
                                type: array
                                items:
                                  description: >
                                    This type represents information about a
                                    link port of an external VL, i.e. a port
                                    providing connectivity for the VNF to an NS
                                    VL. 
                                  type: object
                                  required:
                                    - id
                                    - resourceHandle
                                  properties:
                                    id:
                                      description: >
                                        An identifier with the intention of
                                        being globally unique.
                                      type: string
                                    resourceHandle:
                                      required:
                                        - vimConnectionId
                                        - resourceId
                                      type: object
                                      description: >
                                        This type represents the information
                                        that allows addressing a virtualised
                                        resource that is used by a VNF instance.
                                        Information about the resource is
                                        available from the VIM.
                                      properties:
                                        vimConnectionId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceProviderId:
                                          description: >
                                            An identifier with the intention of
                                            being globally unique.
                                          type: string
                                        resourceId:
                                          description: >
                                            An identifier maintained by the VIM or
                                            other resource provider. It is expected
                                            to be unique within the VIM instance.
                                          type: string
                                        vimLevelResourceType:
                                          description: >
                                            Type of the resource in the scope of the
                                            VIM or the resource provider.
                                          type: string
                                    cpInstanceId:
                                      description: >
                                        An identifier that is unique for the
                                        respective type within a VNF instance,
                                        but may not be globally unique.
                                      type: string
                  affectedPnf:
                    description: >
                      This type provides information about added, deleted and
                      modified PNFs.  It shall comply with the provisions in
                      Table 6.5.3.3-1.
                    type: object
                    required:
                      - pnfId
                      - pnfdId
                      - pnfProfileId
                      - cpInstanceId
                    properties:
                      pnfId:
                        description: >
                          An identifier with the intention of being globally
                          unique.
                        type: string
                      pnfdId:
                        description: >
                          An identifier that is unique within a NS descriptor.
                          Representation: string of variable length.
                        type: string
                      pnfProfileId:
                        description: >
                          An identifier that is unique within a NS descriptor.
                          Representation: string of variable length.
                        type: string
                      pnfName:
                        description: |
                          Name of the PNF.
                        type: string
                      cpInstanceId:
                        description: |
                          Identifier of the CP in the scope of the PNF.
                        type: array
                        items:
                          description: |
                            Identifier of the CP in the scope of the PNF.
                          type: string
                      changeType:
                        description: >
                          Signals the type of change. Permitted values: - ADD -
                          REMOVE - MODIFY
                        type: string
                        enum:
                          - ADD
                          - REMOVE
                          - MODIFY
                      changeResult:
                        description: >
                          Signals the result of change identified by the
                          "changeType" attribute. Permitted values: - COMPLETED
                          - ROLLED_BACK - FAILED
                        type: string
                        enum:
                          - COMPLETED
                          - ROLLED_BACK
                          - FAILED
                  affectedVl:
                    description: >
                      Information about the VL instances that were affected
                      during the lifecycle operation.
                    type: array
                    items:
                      description: >
                        This type provides information about added, deleted,
                        modified and temporary VLs.
                      type: object
                      required:
                        - id
                        - virtualLinkDescId
                        - changeType
                        - networkResource
                      properties:
                        id:
                          description: >
                            An identifier that is unique for the respective type
                            within a VNF instance, but may not be globally
                            unique.
                          type: string
                        virtualLinkDescId:
                          description: >
                            Identifier of the VNF Virtual Link Descriptor (VLD)
                            in the VNFD.
                          type: string
                        changeType:
                          description: >
                            Signals the type of change. Permitted values: *
                            ADDED * REMOVED * MODIFIED * TEMPORARY *
                            LINK_PORT_ADDED * LINK_PORT_REMOVED For a temporary
                            resource, an AffectedVirtualLink structure exists as
                            long as the temporary resource exists.
                          type: string
                          enum:
                            - ADDED
                            - REMOVED
                            - MODIFIED
                            - TEMPORARY
                            - LINK_PORT_ADDED
                            - LINK_PORT_REMOVED
                        networkResource:
                          required:
                            - vimConnectionId
                            - resourceId
                          type: object
                          description: >
                            This type represents the information that allows
                            addressing a virtualised resource that is used by a
                            VNF instance. Information about the resource is
                            available from the VIM.
                          properties:
                            vimConnectionId:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                            resourceProviderId:
                              description: >
                                An identifier with the intention of being
                                globally unique.
                              type: string
                            resourceId:
                              description: >
                                An identifier maintained by the VIM or other
                                resource provider. It is expected to be unique
                                within the VIM instance.
                              type: string
                            vimLevelResourceType:
                              description: >
                                Type of the resource in the scope of the VIM or
                                the resource provider.
                              type: string
                        metadata:
                          description: >
                            This type represents a list of key-value pairs. The
                            order of the pairs in the list is not significant.
                            In JSON, a set of key- value pairs is represented as
                            an object. It shall comply with the provisions 
                            defined in clause 4 of IETF RFC 7159. 
                          type: object
                  affectedVnffg:
                    description: >
                      Information about the VNFFG instances that were affected
                      during the lifecycle operation.
                    type: array
                    items:
                      description: >
                        This type provides information about added, deleted and
                        modified VNFFG instances.  It shall comply with the
                        provisions in Table 6.5.3.5-1.
                      type: object
                      required:
                        - vnffgInstanceId
                        - vnffgdId
                      properties:
                        vnffgInstanceId:
                          description: >
                            An identifier that is unique with respect to a NS. 
                            Representation: string of variable length.
                          type: string
                        vnffgdId:
                          description: >
                            An identifier that is unique within a NS descriptor.
                            Representation: string of variable length.
                          type: string
                        changeType:
                          description: >
                            Signals the type of change. Permitted values: - ADD
                            - DELETE - MODIFY
                          type: string
                          enum:
                            - ADD
                            - DELETE
                            - MODIFY
                        changeResult:
                          description: >
                            Signals the result of change identified by the
                            "changeType" attribute. Permitted values: -
                            COMPLETED - ROLLED_BACK - FAILED
                          type: string
                          enum:
                            - COMPLETED
                            - ROLLED_BACK
                            - FAILED
                  affectedNs:
                    description: >
                      Information about the SAP instances that were affected
                      during the lifecycle operation. See note.
                    type: array
                    items:
                      description: >
                        This type provides information about added, deleted and
                        modified SAP of a NS.  It shall comply with the
                        provisions in Table 6.5.3.7-1.
                      type: object
                      required:
                        - sapInstanceId
                        - sapdId
                      properties:
                        sapInstanceId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        sapdId:
                          description: >
                            An identifier with the intention of being globally
                            unique.
                          type: string
                        sapName:
                          description: |
                            Human readable name for the SAP.
                          type: string
                        changeType:
                          description: >
                            Signals the type of lifecycle change. Permitted
                            values: - ADD - REMOVE - MODIFY
                          type: string
                          enum:
                            - ADD
                            - REMOVE
                            - MODIFY
                        changeResult:
                          description: >
                            Signals the result of change identified by the
                            "changeType" attribute. Permitted values: -
                            COMPLETED - ROLLED_BACK - FAILED
                          type: string
                          enum:
                            - COMPLETED
                            - ROLLED_BACK
                            - FAILED
                  affectedSap:
                    description: >
                      The enumeration NsLcmOpType represents those lifecycle
                      operations that trigger a NS lifecycle management
                      operation occurrence notification. Value | Description
                      ------|------------ INSTANTIATE | Represents the
                      "Instantiate NS" LCM operation. SCALE | Represents the
                      "Scale NS" LCM operation. UPDATE | Represents the "Update
                      NS" LCM operation. TERMINATE | Represents the "Terminate
                      NS" LCM operation. HEAL | Represents the "Heal NS" LCM
                      operation.
                    type: string
                    enum:
                      - INSTANTIATE
                      - SCALE
                      - UPDATE
                      - TERMINATE
                      - HEAL
                  error:
                    description: >
                      The definition of the general "ProblemDetails" data
                      structure from IETF RFC 7807 [19] is reproduced inthis
                      structure. Compared to the general framework defined in
                      IETF RFC 7807 [19], the "status" and "detail" attributes
                      are mandated to be included by the present document, to
                      ensure that the response contains additional textual
                      information about an error. IETF RFC 7807 [19] foresees
                      extensibility of the "ProblemDetails" type. It is possible
                      that particular APIs in the present document, or
                      particular implementations, define extensions to define
                      additional attributes that provide more information about
                      the error. The description column only provides some
                      explanation of the meaning to Facilitate understanding of
                      the design. For a full description, see IETF RFC 7807
                      [19].
                    type: object
                    required:
                      - status
                      - detail
                    properties:
                      type:
                        description: >
                          A URI reference according to IETF RFC 3986 [5] that
                          identifies the problem type. It is encouraged that the
                          URI provides human-readable documentation for the
                          problem (e.g. using HTML) when dereferenced. When this
                          member is not present, its value is assumed to be
                          "about:blank".
                        type: string
                        format: URI
                      title:
                        description: >
                          A short, human-readable summary of the problem type.
                          It should not change from occurrence to occurrence of
                          the problem, except for purposes of localization. If
                          type is given and other than "about:blank", this
                          attribute shall also be provided. A short,
                          human-readable summary of the problem type.  It SHOULD
                          NOT change from occurrence to occurrence of the
                          problem, except for purposes of localization (e.g.,
                          using proactive content negotiation; see [RFC7231],
                          Section 3.4).
                        type: string
                      status:
                        description: >
                          The HTTP status code for this occurrence of the
                          problem. The HTTP status code ([RFC7231], Section 6)
                          generated by the origin server for this occurrence of
                          the problem.
                        type: integer
                      detail:
                        description: >
                          A human-readable explanation specific to this
                          occurrence of the problem.
                        type: string
                      instance:
                        description: >
                          A URI reference that identifies the specific
                          occurrence of the problem. It may yield further
                          information if dereferenced.
                        type: string
                        format: URI
                  _links:
                    description: >
                      This type represents the links to resources that a
                      notification can contain.
                    type: object
                    required:
                      - nsInstance
                    properties:
                      nsInstance:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
                      subscription:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
                      lcOpOcc:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
        - name: Accept
          description: >
            Content-Types that are acceptable for the response. Reference: IETF
            RFC 7231
          in: header
          required: true
          type: string
        - name: Authorization
          description: |
            The authorization token for the request. Reference: IETF RFC 7235
          in: header
          required: false
          type: string
        - name: Content-Type
          description: |
            The MIME type of the body of the request. Reference: IETF RFC 7231
          in: header
          required: true
          type: string
      responses:
        '204':
          description: |
            204 No Content          
            The notification was delivered successfully.
          headers:
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              maximum: 1
              minimum: 0
        '400':
          description: >
            Error: Invalid attribute selector. The response body shall contain a
            ProblemDetails structure, in which the "detail" attribute should
            convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '401':
          description: >
            Unauthorized If the request contains no access token even though one
            is required, or if the request contains an authorization token that
            is invalid (e.g. expired or revoked), the API producer should
            respond with this response. The details of the error shall be
            returned in the WWW-Authenticate HTTP header, as defined in IETF RFC
            6750 and IETF RFC 7235. The ProblemDetails structure may be
            provided.
          headers:
            Content-Type:
              type: string
              description: The MIME type of the body of the response.
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '403':
          description: >
            Forbidden If the API consumer is not allowed to perform a particular
            request to a particular resource, the API producer shall respond
            with this response code. The "ProblemDetails" structure shall be
            provided.  It should include in the "detail" attribute information
            about the source of the problem, and may indicate how to solve it.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '404':
          description: >
            Not Found If the API producer did not find a current representation
            for the resource addressed by the URI passed in the request, or is
            not willing to disclose that one exists, it shall respond with this
            response code.  The "ProblemDetails" structure may be provided,
            including in the "detail" attribute information about the source of
            the problem, e.g. a wrong resource URI variable.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '405':
          description: >
            Method Not Allowed If a particular HTTP method is not supported for
            a particular resource, the API producer shall respond with this
            response code. The "ProblemDetails" structure may be omitted in that
            case.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '406':
          description: >
            Not Acceptable If the Accept HTTP header does not contain at least
            one name of a content type that is acceptable to the API producer,
            the API producer shall respond with this response code. The
            ProblemDetails structure may be omitted in that case.        
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '409':
          description: >
            Conflict

            Another request is in progress that prohibits the fulfilment of the
            current request, or the current resource state is inconsistent with
            the request.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '416':
          description: >
            Requested Range Not Satisfiable This code is returned if the
            requested byte range in the Range HTTP header is not present in the
            requested resource.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '500':
          description: >
            Internal Server Error If there is an application error not related
            to the client's input that cannot be easily mapped to any other HTTP
            response code ("catch all error"), the API producer shall respond
            withthis response code. The ProblemDetails structure shall be
            provided, and shall include in the "detail" attribute more
            information about the source of the problem.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '503':
          description: >
            Service Unavailable If the API producer encounters an internal
            overload situation of itself or of a system it relies on, it should
            respond with this response code, following the provisions in IETF
            RFC 7231 [13] for the use of the Retry-After HTTP header and for the
            alternative to refuse the connection. The "ProblemDetails" structure
            may be omitted.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
  /URI_is_provided_by_the_client_when_creating_the_subscription-NsIdentifierCreationNotification:
    post:
      summary: Notify about NS lifecycle change
      description: >
        The POST method delivers a notification from the server to the client.
        This method shall support the URI query parameters, request and response
        data structures, and response codes, as specified in the Tables
        6.4.18.3.1-1 and 6.4.18.3.1-2.
      parameters:
        - name: NsIdentifierCreationNotification
          description: >
            A notification about the creation of a NS identifier and the related
            NS instance resource.
          in: body
          required: true
          schema:
            properties:
              NsIdentifierCreationNotification:
                type: object
                required:
                  - subscriptionId
                  - nsInstanceId
                properties:
                  notificationType:
                    description: >
                      Discriminator for the different notification types. Shall
                      be set to "NsIdentifierDeletionNotification" for this
                      notification type.
                    type: string
                  subscriptionId:
                    description: |
                      An identifier with the intention of being globally unique.
                    type: string
                  timestamp:
                    description: >
                      Date-time stamp.  Representation: String formatted
                      according to IETF RFC 3339.
                    type: string
                    format: date-time
                  nsInstanceId:
                    description: |
                      An identifier with the intention of being globally unique.
                    type: string
                  _links:
                    description: >
                      This type represents the links to resources that a
                      notification can contain.
                    type: object
                    required:
                      - nsInstance
                    properties:
                      nsInstance:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
                      subscription:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
                      lcOpOcc:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
        - name: Accept
          description: >
            Content-Types that are acceptable for the response. Reference: IETF
            RFC 7231
          in: header
          required: true
          type: string
        - name: Authorization
          description: |
            The authorization token for the request. Reference: IETF RFC 7235
          in: header
          required: false
          type: string
        - name: Content-Type
          description: |
            The MIME type of the body of the request. Reference: IETF RFC 7231
          in: header
          required: true
          type: string
      responses:
        '204':
          description: |
            204 No Content
            The notification was delivered successfully.
          headers:
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              maximum: 1
              minimum: 0
        '400':
          description: >
            Error: Invalid attribute selector. The response body shall contain a
            ProblemDetails structure, in which the "detail" attribute should
            convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '401':
          description: >
            Unauthorized If the request contains no access token even though one
            is required, or if the request contains an authorization token that
            is invalid (e.g. expired or revoked), the API producer should
            respond with this response. The details of the error shall be
            returned in the WWW-Authenticate HTTP header, as defined in IETF RFC
            6750 and IETF RFC 7235. The ProblemDetails structure may be
            provided.
          headers:
            Content-Type:
              type: string
              description: The MIME type of the body of the response.
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '403':
          description: >
            Forbidden If the API consumer is not allowed to perform a particular
            request to a particular resource, the API producer shall respond
            with this response code. The "ProblemDetails" structure shall be
            provided.  It should include in the "detail" attribute information
            about the source of the problem, and may indicate how to solve it.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '404':
          description: >
            Not Found If the API producer did not find a current representation
            for the resource addressed by the URI passed in the request, or is
            not willing to disclose that one exists, it shall respond with this
            response code.  The "ProblemDetails" structure may be provided,
            including in the "detail" attribute information about the source of
            the problem, e.g. a wrong resource URI variable.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '405':
          description: >
            Method Not Allowed If a particular HTTP method is not supported for
            a particular resource, the API producer shall respond with this
            response code. The "ProblemDetails" structure may be omitted in that
            case.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '406':
          description: >
            Not Acceptable If the Accept HTTP header does not contain at least
            one name of a content type that is acceptable to the API producer,
            the API producer shall respond with this response code. The
            ProblemDetails structure may be omitted in that case.        
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '409':
          description: >
            Conflict

            Another request is in progress that prohibits the fulfilment of the
            current request, or the current resource state is inconsistent with
            the request.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '416':
          description: >
            Requested Range Not Satisfiable This code is returned if the
            requested byte range in the Range HTTP header is not present in the
            requested resource.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '500':
          description: >
            Internal Server Error If there is an application error not related
            to the client's input that cannot be easily mapped to any other HTTP
            response code ("catch all error"), the API producer shall respond
            withthis response code. The ProblemDetails structure shall be
            provided, and shall include in the "detail" attribute more
            information about the source of the problem.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '503':
          description: >
            Service Unavailable If the API producer encounters an internal
            overload situation of itself or of a system it relies on, it should
            respond with this response code, following the provisions in IETF
            RFC 7231 [13] for the use of the Retry-After HTTP header and for the
            alternative to refuse the connection. The "ProblemDetails" structure
            may be omitted.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
  /URI_is_provided_by_the_client_when_creating_the_subscription-NsIdentifierDeletionNotification:
    post:
      summary: Notify about NS lifecycle change
      description: >
        The POST method delivers a notification from the server to the client.
        This method shall support the URI query parameters, request and response
        data structures, and response codes, as specified in the Tables
        6.4.18.3.1-1 and 6.4.18.3.1-2.
      parameters:
        - name: NsIdentifierDeletionNotification
          description: >
            A notification about the deletion of a NS identifier and the related
            NS instance resource.
          in: body
          required: true
          schema:
            properties:
              NsIdentifierDeletionNotification:
                type: object
                required:
                  - subscriptionId
                  - nsInstanceId
                properties:
                  notificationType:
                    description: >
                      Discriminator for the different notification types. Shall
                      be set to "NsIdentifierDeletionNotification" for this
                      notification type.
                    type: string
                  subscriptionId:
                    description: |
                      An identifier with the intention of being globally unique.
                    type: string
                  timestamp:
                    description: >
                      Date-time stamp.  Representation: String formatted
                      according to IETF RFC 3339.
                    type: string
                    format: date-time
                  nsInstanceId:
                    description: |
                      An identifier with the intention of being globally unique.
                    type: string
                  _links:
                    description: >
                      This type represents the links to resources that a
                      notification can contain.
                    type: object
                    required:
                      - nsInstance
                    properties:
                      nsInstance:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
                      subscription:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
                      lcOpOcc:
                        description: |
                          This type represents a link to a resource.
                        type: object
                        required:
                          - href
                        properties:
                          href:
                            description: |
                              URI of the referenced resource.
                            type: string
                            format: url
        - name: Accept
          description: >
            Content-Types that are acceptable for the response. Reference: IETF
            RFC 7231
          in: header
          required: true
          type: string
        - name: Authorization
          description: |
            The authorization token for the request. Reference: IETF RFC 7235
          in: header
          required: false
          type: string
        - name: Content-Type
          description: |
            The MIME type of the body of the request. Reference: IETF RFC 7231
          in: header
          required: true
          type: string
      responses:
        '204':
          description: |
            204 No Content
            The notification was delivered successfully.
          headers:
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              maximum: 1
              minimum: 0
        '400':
          description: >
            Error: Invalid attribute selector. The response body shall contain a
            ProblemDetails structure, in which the "detail" attribute should
            convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '401':
          description: >
            Unauthorized If the request contains no access token even though one
            is required, or if the request contains an authorization token that
            is invalid (e.g. expired or revoked), the API producer should
            respond with this response. The details of the error shall be
            returned in the WWW-Authenticate HTTP header, as defined in IETF RFC
            6750 and IETF RFC 7235. The ProblemDetails structure may be
            provided.
          headers:
            Content-Type:
              type: string
              description: The MIME type of the body of the response.
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '403':
          description: >
            Forbidden If the API consumer is not allowed to perform a particular
            request to a particular resource, the API producer shall respond
            with this response code. The "ProblemDetails" structure shall be
            provided.  It should include in the "detail" attribute information
            about the source of the problem, and may indicate how to solve it.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '404':
          description: >
            Not Found If the API producer did not find a current representation
            for the resource addressed by the URI passed in the request, or is
            not willing to disclose that one exists, it shall respond with this
            response code.  The "ProblemDetails" structure may be provided,
            including in the "detail" attribute information about the source of
            the problem, e.g. a wrong resource URI variable.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '405':
          description: >
            Method Not Allowed If a particular HTTP method is not supported for
            a particular resource, the API producer shall respond with this
            response code. The "ProblemDetails" structure may be omitted in that
            case.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '406':
          description: >
            Not Acceptable If the Accept HTTP header does not contain at least
            one name of a content type that is acceptable to the API producer,
            the API producer shall respond with this response code. The
            ProblemDetails structure may be omitted in that case.        
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '409':
          description: >
            Conflict

            Another request is in progress that prohibits the fulfilment of the
            current request, or the current resource state is inconsistent with
            the request.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '416':
          description: >
            Requested Range Not Satisfiable This code is returned if the
            requested byte range in the Range HTTP header is not present in the
            requested resource.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '500':
          description: >
            Internal Server Error If there is an application error not related
            to the client's input that cannot be easily mapped to any other HTTP
            response code ("catch all error"), the API producer shall respond
            withthis response code. The ProblemDetails structure shall be
            provided, and shall include in the "detail" attribute more
            information about the source of the problem.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '503':
          description: >
            Service Unavailable If the API producer encounters an internal
            overload situation of itself or of a system it relies on, it should
            respond with this response code, following the provisions in IETF
            RFC 7231 [13] for the use of the Retry-After HTTP header and for the
            alternative to refuse the connection. The "ProblemDetails" structure
            may be omitted.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
    get:
      summary: Test the notification endpoint.
      description: >
        Query NS Instances.

        The GET method queries information about multiple NS instances. This
        method shall support the URI query parameters, request and response data
        structures, and response codes, as specified in the Tables 6.4.2.3.2-1
        and 6.4.2.3.2-2.
      parameters:
        - name: Accept
          description: >
            Content-Types that are acceptable for the response. Reference: IETF
            RFC 7231
          in: header
          required: true
          type: string
        - name: Authorization
          description: |
            The authorization token for the request. Reference: IETF RFC 7235
          in: header
          required: false
          type: string
      responses:
        '204':
          description: >
            204 No Content

            The notification endpoint was tested successfully. The response body
            shall be empty.
          headers:
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              maximum: 1
              minimum: 0
        '400':
          description: >
            Error: Invalid attribute selector. The response body shall contain a
            ProblemDetails structure, in which the "detail" attribute should
            convey more information about the error.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '401':
          description: >
            Unauthorized If the request contains no access token even though one
            is required, or if the request contains an authorization token that
            is invalid (e.g. expired or revoked), the API producer should
            respond with this response. The details of the error shall be
            returned in the WWW-Authenticate HTTP header, as defined in IETF RFC
            6750 and IETF RFC 7235. The ProblemDetails structure may be
            provided.
          headers:
            Content-Type:
              type: string
              description: The MIME type of the body of the response.
            WWW-Authenticate:
              type: string
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '403':
          description: >
            Forbidden If the API consumer is not allowed to perform a particular
            request to a particular resource, the API producer shall respond
            with this response code. The "ProblemDetails" structure shall be
            provided.  It should include in the "detail" attribute information
            about the source of the problem, and may indicate how to solve it.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '404':
          description: >
            Not Found If the API producer did not find a current representation
            for the resource addressed by the URI passed in the request, or is
            not willing to disclose that one exists, it shall respond with this
            response code.  The "ProblemDetails" structure may be provided,
            including in the "detail" attribute information about the source of
            the problem, e.g. a wrong resource URI variable.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '405':
          description: >
            Method Not Allowed If a particular HTTP method is not supported for
            a particular resource, the API producer shall respond with this
            response code. The "ProblemDetails" structure may be omitted in that
            case.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '406':
          description: >
            Not Acceptable If the Accept HTTP header does not contain at least
            one name of a content type that is acceptable to the API producer,
            the API producer shall respond with this response code. The
            ProblemDetails structure may be omitted in that case.        
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '409':
          description: >
            Conflict

            Another request is in progress that prohibits the fulfilment of the
            current request, or the current resource state is inconsistent with
            the request.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
            WWW-Authenticate:
              description: >
                Challenge if the corresponding HTTP request has not provided
                authorization, or error details if the corresponding HTTP
                request has provided an invalid authorization token.
              type: string
              maximum: 1
              minimum: 0
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '416':
          description: >
            Requested Range Not Satisfiable This code is returned if the
            requested byte range in the Range HTTP header is not present in the
            requested resource.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '500':
          description: >
            Internal Server Error If there is an application error not related
            to the client's input that cannot be easily mapped to any other HTTP
            response code ("catch all error"), the API producer shall respond
            withthis response code. The ProblemDetails structure shall be
            provided, and shall include in the "detail" attribute more
            information about the source of the problem.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI
        '503':
          description: >
            Service Unavailable If the API producer encounters an internal
            overload situation of itself or of a system it relies on, it should
            respond with this response code, following the provisions in IETF
            RFC 7231 [13] for the use of the Retry-After HTTP header and for the
            alternative to refuse the connection. The "ProblemDetails" structure
            may be omitted.
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              type: string
              maximum: 1
              minimum: 1
          schema:
            description: >
              The definition of the general "ProblemDetails" data structure from
              IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
              general framework defined in IETF RFC 7807 [19], the "status" and
              "detail" attributes are mandated to be included by the present
              document, to ensure that the response contains additional textual
              information about an error. IETF RFC 7807 [19] foresees
              extensibility of the "ProblemDetails" type. It is possible that
              particular APIs in the present document, or particular
              implementations, define extensions to define additional attributes
              that provide more information about the error. The description
              column only provides some explanation of the meaning to Facilitate
              understanding of the design. For a full description, see IETF RFC
              7807 [19].
            type: object
            required:
              - status
              - detail
            properties:
              type:
                description: >
                  A URI reference according to IETF RFC 3986 [5] that identifies
                  the problem type. It is encouraged that the URI provides
                  human-readable documentation for the problem (e.g. using HTML)
                  when dereferenced. When this member is not present, its value
                  is assumed to be "about:blank".
                type: string
                format: URI
              title:
                description: >
                  A short, human-readable summary of the problem type. It should
                  not change from occurrence to occurrence of the problem,
                  except for purposes of localization. If type is given and
                  other than "about:blank", this attribute shall also be
                  provided. A short, human-readable summary of the problem
                  type.  It SHOULD NOT change from occurrence to occurrence of
                  the problem, except for purposes of localization (e.g., using
                  proactive content negotiation; see [RFC7231], Section 3.4).
                type: string
              status:
                description: >
                  The HTTP status code for this occurrence of the problem. The
                  HTTP status code ([RFC7231], Section 6) generated by the
                  origin server for this occurrence of the problem.
                type: integer
              detail:
                description: >
                  A human-readable explanation specific to this occurrence of
                  the problem.
                type: string
              instance:
                description: >
                  A URI reference that identifies the specific occurrence of the
                  problem. It may yield further information if dereferenced.
                type: string
                format: URI

definitions:
  HealNsRequest:
    description: >
      This operation supports the healing of an NS instance, 
      either by healing the complete NS instance or by healing one of
      more of the VNF instances that are part of this NS. 
      It shall comply with the provisions defined in Table 6.5.2.13-1.
    type: object
    properties:
      healNsData:
        description: >
          Indicates the reason why a healing procedure is required.
        $ref: "#/definitions/HealNsData"
      healVnfData:
        description: >
          Additional parameters passed by the NFVO as input to the healing
          process, specific to the VNF being healed, as declared in the VNFD
          as part of "HealVnfOpConfig".        
        type: array
        items:
          $ref: "#/definitions/HealVnfData"
        
  NsLcmOpOcc:
    description: >
      This type represents a request a NS lifecycle operation occurrence. 
      It shall comply with the provisions defined in Table 6.5.2.3-1.
    type: object
    required:
      - id
      - operationState
      - stateEnteredTime
      - nsInstanceId
      - lcmOperationType
      - startTime      
      - isAutomaticInvocation
      - operationParams
      - isCancelPending
      - _links     
    properties:
      id:
        description: >
          Identifier of this NS lifecycle operation occurrence.
        $ref: "SOL005_def.yaml#/definitions/Identifier"
      operationState:
        description: >
          The state of the NS LCM operation.
        $ref: "SOL005NSLifecycleManagement_def.yaml#/definitions/NsLcmOperationStateType"
      stateEnteredTime:
        description: >
          Date-time when the current state was entered.
        type: string
        format: date-time
      nsInstanceId:
        description: >
          Identifier of the NS instance to which the operation applies.
        $ref: "SOL005_def.yaml#/definitions/Identifier"
      lcmOperationType:
        description: >
          Type of the actual LCM operation represented by this
          lcm operation occurrence.
        $ref: "SOL005NSLifecycleManagement_def.yaml#/definitions/NsLcmOpType"        
      startTime:
        description: >
          Date-time of the start of the operation.
        type: string
        format: date-time
      isAutomaticInvocation:
        description: >
          Set to true if this NS LCM operation occurrence has
          been automatically triggered by the NFVO. This occurs
          in the case of auto-scaling, auto-healing and when a
          nested NS is modified as a result of an operation on its
          composite NS. Set to false otherwise.
        type: boolean
      operationParams:
        description: >
          Input parameters of the LCM operation. This attribute
          shall be formatted according to the request data type of
          the related LCM operation.
          The following mapping between lcmOperationType and
          the data type of this attribute shall apply:
          - INSTANTIATE: InstantiateNsRequest
          - SCALE: ScaleNsRequest
          - UPDATE: UpdateNsRequest
          - HEAL: HealNsRequest
          - TERMINATE: TerminateNsRequest
        type: string
        enum:
          - INSTANTIATE
          - SCALE
          - UPDATE
          - HEAL
          - TERMINATE          
      isCancelPending:
        description: >
          If the LCM operation occurrence is in "PROCESSING"
          or "ROLLING_BACK" state and the operation is being
          cancelled, this attribute shall be set to true. Otherwise, it
          shall be set to false.
        type: boolean
      cancelMode:
        description: >
          The mode of an ongoing cancellation. Shall be present
          when isCancelPending=true, and shall be absent otherwise.
        $ref: "#/definitions/CancelModeType"
      error:
        description: >
          If "operationState" is "FAILED_TEMP" or "FAILED" or "operationState"
          is "PROCESSING" or "ROLLING_BACK" and previous value of
          "operationState" was "FAILED_TEMP", this attribute shall be present
          and contain error information, unless it has been requested to be
          excluded via an attribute selector.
        $ref: "#/definitions/ProblemDetails"
      resourceChanges:
        description: >
          This attribute contains information about the cumulative
          changes to virtualised resources that were performed so
          far by the LCM operation since its start, if applicable
        type: object
        properties:
          affectedVnfs:
            description: >
              Information about the VNF instances that were affected
              during the lifecycle operation, if this notification
              represents the result of a lifecycle operation.
            type: array
            items:
              $ref: "SOL005NSLifecycleManagement_def.yaml#/definitions/AffectedVnf"
          affectedPnfs:
            description: >
              Information about the PNF instances that were affected
              during the lifecycle operation, if this notification
              represents the result of a lifecycle operation.
            type: array
            items:
              $ref: "SOL005NSLifecycleManagement_def.yaml#/definitions/AffectedPnf"
          affectedVls:
            description: >
              Information about the VL instances that were affected
              during the lifecycle operation, if this notification
              represents the result of a lifecycle operation.
            type: array
            items:
              $ref: "SOL005NSLifecycleManagement_def.yaml#/definitions/AffectedVl"
          affectedVnffgs:
            description: >
              Information about the VNFFG instances that were
              affected during the lifecycle operation, if this notification              
              represents the result of a lifecycle operation. See note
            type: array
            items:
              $ref: "SOL005NSLifecycleManagement_def.yaml#/definitions/AffectedVnffg"
          affectedNss:
            description: >
              Information about the nested NS instances that were
              affected during the lifecycle operation, if this notification
              represents the result of a lifecycle operation. See note.
            type: array
            items:
              $ref: "SOL005NSLifecycleManagement_def.yaml#/definitions/AffectedNs"
          affectedSaps:
            description: >
              Information about the nested NS instances that were
              affected during the lifecycle operation, if this notification
              represents the result of a lifecycle operation. See note.
            type: array
            items:
              $ref: "SOL005NSLifecycleManagement_def.yaml#/definitions/AffectedSap"
      _links:
        description: >
          Links to resources related to this resource.
        type: object
        required:
          - self
          - nsInstance      
        properties:
          self:
            description: >
              URI of this resource.
            $ref: "SOL005_def.yaml#/definitions/Link"
          nsInstance:
            description: >
              Link to the NS instance that the operation applies to.
            $ref: "SOL005_def.yaml#/definitions/Link"
          cancel:
            description: >
              Link to the task resource that represents the "cancel"
              operation for this LCM operation occurrence, if
              cancelling is currently allowed.
            $ref: "SOL005_def.yaml#/definitions/Link"
          retry:
            description: >
              Link to the task resource that represents the "cancel"
              operation for this LCM operation occurrence, 
              if cancelling is currently allowed.
            $ref: "SOL005_def.yaml#/definitions/Link"
          rollback:
            description: >
               Link to the task resource that represents the "rollback"
               operation for this LCM operation occurrence, if rolling
               back is currently allowed.
            $ref: "SOL005_def.yaml#/definitions/Link"
          continue:
            description: >
              Link to the task resource that represents the "continue"
              operation for this LCM operation occurrence, if rolling
              back is currently allowed.
            $ref: "SOL005_def.yaml#/definitions/Link"
          fail:
            description: >
              Link to the task resource that represents the "fail"
              operation for this LCM operation occurrence, if rolling
              back is currently allowed.
            $ref: "SOL005_def.yaml#/definitions/Link"
  CancelMode:
    description: >
      This type represents a parameter to select the mode of canceling an ongoing NS LCM operation occurrence. 
      It shall comply with the provisions defined in Table 6.5.2.16-1..
    type: object
    required: 
      - cancelMode
    properties:
      cancelMode:
        description: >
          Cancellation mode to apply.
        $ref: "#/definitions/CancelModeType"
        
  CancelModeType:
    description: >
      Cancellation mode.
      
      The NFVO shall not start any new VNF lifecycle management and resource
      management operation, and shall wait for the ongoing VNF lifecycle management
      and resource management operations in the underlying system, typically the VNFM
      and VIM, to finish execution or to time out. After that, the NFVO shall put the
      operation occurrence into the FAILED_TEMP state.
      
      The NFVO shall not start any new VNF lifecycle management and resource
      management operation, shall cancel the ongoing VNF lifecycle management and
      resource management operations in the underlying system, typically the VNFM and
      VIM, and shall wait for the cancellation to finish or to time out. After that, the NFVO
      shall put the operation occurrence into the FAILED_TEMP state.
    type: string
    enum:
      - GRACEFUL
      - FORCEFUL
      
  HealNsData:
    description: >
      This type represents the information used to heal a NS. 
      It shall comply with the provisions defined in Table 6.5.3.43-1.
    type: object
    required: 
      - degreeHealing      
    properties:
      degreeHealing:
        description: >
          Indicates the degree of healing. Possible values
          include:
          - HEAL_RESTORE: Complete the healing of
          the NS restoring the state of the NS before
          the failure occurred
          - HEAL_QOS: Complete the healing of the NS
          based on the newest QoS values
          - HEAL_RESET: Complete the healing of the
          NS resetting to the original instantiation state of the NS
          - PARTIAL_HEALING
        type: string
        enum: 
          - HEAL_RESTORE
          - HEAL_QOS
          - HEAL_RESET          
          - PARTIAL_HEALING                    
      actionsHealing:
        description: >
          Used to specify dedicated healing actions in a
          particular order (e.g. as a script). The actionsHealing
          attribute can be used to provide a specific script whose
          content and actions might only be possible to be
          derived during runtime.
        type: array
        items:
          $ref: "SOL005_def.yaml#/definitions/String"
      healScript:
        description: >
          Reference to a script from the NSD that shall be used
          to execute dedicated healing actions in a particular
          order. The healScript, since it refers to a script in the
          NSD, can be used to execute healing actions which
          are defined during NS design time.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd"   
      additionalParamsforNs:
        description: >
          Allows the OSS/BSS to provide additional
          parameter(s) to the healing process at the NS level.
        $ref: "SOL005_def.yaml#/definitions/KeyValuePairs"
        
  HealVnfData:
    description: >
      This type represents the information to heal a VNF that is part of an NS. 
      The NFVO shall then invoke the HealVNF
      operation towards the appropriate VNFM. 
      It shall comply with the provisions defined in Table 6.5.3.44-1.
    type: object
    required: 
      - vnfInstanceId      
    properties:
      vnfInstanceId:
        description: >
          Identifies the VNF instance, part of the NS, requiring a
          healing action.
        $ref: "SOL005_def.yaml#/definitions/Identifier"                
      cause:
        description: >
          Indicates the reason why a healing procedure is required.
        type: string
      additionalParams:
        description: >
          Additional parameters passed by the NFVO as input to
          the healing process, specific to the VNF being healed.
          EXAMPLE: Input parameters to VNF-specific healing procedures.
        $ref: "SOL005_def.yaml#/definitions/KeyValuePairs"
        
  TerminateNsRequest:
    description: >
      This type represents a NS termination request. 
      It shall comply with the provisions defined in Table 6.5.2.15-1.
    type: object
    properties:
      terminationTime:
        description: >
          Timestamp indicating the end time of the NS, i.e. the NS
          will be terminated automatically at this timestamp.
          Cardinality "0" indicates the NS termination takes place immediately
        $ref: "SOL005_def.yaml#/definitions/DateTime"
        
  ProblemDetails:
    description: >
      The definition of the general "ProblemDetails" data structure from
      IETF RFC 7807 [19] is reproduced inthis structure. Compared to the
      general framework defined in IETF RFC 7807 [19], the "status" and
      "detail" attributes are mandated to be included by the present document,
      to ensure that the response contains additional textual information about
      an error. IETF RFC 7807 [19] foresees extensibility of the
      "ProblemDetails" type. It is possible that particular APIs in the present
      document, or particular implementations, define extensions to define
      additional attributes that provide more information about the error.
      The description column only provides some explanation of the meaning to
      Facilitate understanding of the design. For a full description, see
      IETF RFC 7807 [19].
    type: object
    required:
      - status
      - detail
    properties:
      type:
        description: >
          A URI reference according to IETF RFC 3986 [5] that identifies the
          problem type. It is encouraged that the URI provides human-readable
          documentation for the problem (e.g. using HTML) when dereferenced.
          When this member is not present, its value is assumed to be
          "about:blank".
        type: string
        format: URI
      title:
        description: >
          A short, human-readable summary of the problem type. It should not
          change from occurrence to occurrence of the problem, except for
          purposes of localization. If type is given and other than
          "about:blank", this attribute shall also be provided.
          A short, human-readable summary of the problem
          type.  It SHOULD NOT change from occurrence to occurrence of the
          problem, except for purposes of localization (e.g., using
          proactive content negotiation; see [RFC7231], Section 3.4).
        type: string
      status:
        description: >
          The HTTP status code for this occurrence of the problem.
          The HTTP status code ([RFC7231], Section 6) generated by the origin
          server for this occurrence of the problem.
        type: integer
      detail:
        description: >
          A human-readable explanation specific to this occurrence of the
          problem.
        type: string
      instance:
        description: >
          A URI reference that identifies the specific occurrence of the
          problem. It may yield further information if dereferenced.
        type: string
        format: URI
  CreateNsRequest:
    type: object
    required:
      - nsdId
      - nsName
      - nsDescription
    properties:
      nsdId:
        description: >
          Identifier of the NSD that defines the NS instance to be
          created.
        $ref: "SOL005_def.yaml#/definitions/Identifier"
      nsName:
        description: >
          Human-readable name of the NS instance to be created.
        type: string
      nsDescription:
        description: >
          Human-readable description of the NS instance to be created.
        type: string
        
  NsInstance:
    description: >
      This type represents a response for Query NS operation. 
      It shall comply with the provisions defined in Table 6.5.2.10-1.
    type: object
    required:
      - id
      - nsInstanceName
      - nsInstanceDescription
      - nsdId
      - nsdInfoId
      - nsState
    properties:
      id:
        description: >
          Identifier of the NS instance.
        $ref: "SOL005_def.yaml#/definitions/Identifier"
      nsInstanceName:
        description: >
          Human readable name of the NS instance.
        type: string
      nsInstanceDescription:
        description: >
          Human readable description of the NS instance.
        type: string
      nsdId:
        description: >
          Identifier of the NSD on which the NS instance is based.
        $ref: "SOL005_def.yaml#/definitions/Identifier"
      nsdInfoId:
        description: >
          Identifier of the NSD information object on which the
          NS instance is based. This identifier was allocated by the NFVO.
        $ref: "SOL005_def.yaml#/definitions/Identifier"         
      flavourId:
        description: >
          Identifier of the NS deployment flavor applied to
          the NS instance. This attribute shall be present if the nsState attribute
          value is INSTANTIATED.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd"         
      vnfInstance:
        description: >
          Information on constituent VNF(s) of the NS instance.
        type: array
        items:
          $ref: "#/definitions/VnfInstance"         
      pnfInfo:
        description: >
          Information on the PNF(s) that are part of the NS instance.
        type: array
        items:
          $ref: "#/definitions/PnfInfo" 
      virtualLinkInfo:
        description: >
          Information on the VL(s) of the NS instance.
          This attribute shall be present if the nsState attribute
          value is INSTANTIATED and if the NS instance has
          specified connectivity.
        type: array
        items:
          $ref: "#/definitions/NsVirtualLinkInfo" 
      vnffgInfo:
        description: >
          Information on the VNFFG(s) of the NS instance.
        type: array
        items:
          $ref: "#/definitions/VnffgInfo"        
      sapInfo:
        description: >
          Information on the SAP(s) of the NS instance.
        type: array
        items:           
          $ref: "#/definitions/SapInfo"
      nestedNsInstanceId:
        description: >
          Identifier of the nested NS(s) of the NS instance.
        type: array
        items:           
          $ref: "SOL005_def.yaml#/definitions/Identifier"        
      nsState:
        description: >
          The state of the NS instance.
          Permitted values:
          NOT_INSTANTIATED: The NS instance is
          terminated or not instantiated.
          INSTANTIATED: The NS instance is instantiated.
        type: string
        enum: 
          - NOT_INSTANTIATED
          - INSTANTIATED        
      nsScaleStatus:
        description: >
          Status of each NS scaling aspect declared in the
          applicable DF, how "big" the NS instance has been
          scaled w.r.t. that aspect.
          This attribute shall be present if the nsState attribute
          value is INSTANTIATED.
        type: array
        items:
          $ref: "#/definitions/NsScaleInfo"          
      additionalAffinityOrAntiAffinityRule:
        description: >
          Information on the additional affinity or anti-affinity
          rule from NS instantiation operation. Shall not
          conflict with rules already specified in the NSD.
        type: array
        items:           
          $ref: "#/definitions/AffinityOrAntiAffinityRule"
      _links:
        type: object
        description: Links to resources related to this resource.
        required:
          - self
        properties:
          self:
            description: >
              URI of this resource.
            $ref: "SOL005_def.yaml#/definitions/Link"
          nestedNsInstances:
            description: >
              Links to resources related to this notification.
            type: array
            items:
              $ref: "SOL005_def.yaml#/definitions/Link"             
          instantiate:
            description: >
              Link to the "instantiate" task resource, if the related
              operation is possible based on the current status of
              this NS instance resource (i.e. NS instance in
              NOT_INSTANTIATED state).
            $ref: "SOL005_def.yaml#/definitions/Link"
          terminate:
            description: >
              Link to the "terminate" task resource, if the related
              operation is possible based on the current status of
              this NS instance resource (i.e. NS instance is in
              INSTANTIATED state).
            $ref: "SOL005_def.yaml#/definitions/Link"
          update:
            description: >
              Link to the "update" task resource, if the related
              operation is possible based on the current status of
              this NS instance resource (i.e. NS instance is in
              INSTANTIATED state).
            $ref: "SOL005_def.yaml#/definitions/Link"
          scale:
            description: >
              Link to the "scale" task resource, if the related
              operation is supported for this NS instance, and is
              possible based on the current status of this NS
              instance resource (i.e. NS instance is in
              INSTANTIATED state).
            $ref: "SOL005_def.yaml#/definitions/Link"
          heal:
            description: >
              Link to the "heal" task resource, if the related
              operation is supported for this NS instance, and is
              possible based on the current status of this NS
              instance resource (i.e. NS instance is in
              INSTANTIATED state).
            $ref: "SOL005_def.yaml#/definitions/Link"
            
  VnfInstance:
    description: >
      This type represents a VNF instance.
    type: object
    required:
      - id
      - vnfdId
      - vnfProvider
      - vnfProductName
      - vnfSoftwareVersion
      - vnfdVersion
      - vnfPkgId
      - instantiationState
    properties:
      id:
        description: >
          Identifier of the VNF instance.
        $ref: "SOL005_def.yaml#/definitions/Identifier"
      vnfInstanceName:
        description: >
          Name of the VNF instance.
          This attribute can be modified with the PATCH method.
        type: string
      vnfInstanceDescription:
        description: >
          Human-readable description of the VNF instance.
          This attribute can be modified with the PATCH method.
        type: string
      vnfdId:
        description: >
          Identifier of the VNFD on which the VNF instance is based.
        $ref: "SOL005_def.yaml#/definitions/Identifier"
      vnfProvider:
        description: >
          Provider of the VNF and the VNFD. The value is copied from the VNFD.
        type: string
      vnfProductName:
        description: >
          Name to identify the VNF Product. The value is copied from the VNFD.
        type: string
      vnfSoftwareVersion:
        description: >
          Software version of the VNF. The value is copied from the VNFD.
        $ref: "#/definitions/Version"
      vnfdVersion:
        description: >
          Identifies the version of the VNFD. The value is copied from the VNFD.
        $ref: "#/definitions/Version"
      vnfPkgId:
        description: >
           Identifier of information held by the NFVO about
           the specific VNF package on which the VNF is
           based. This identifier was allocated by the NFVO.
           This attribute can be modified with the PATCH
           method.
        $ref: "SOL005_def.yaml#/definitions/Identifier"
      vnfConfigurableProperties:
        description: >
          Current values of the configurable properties of the VNF instance. 
          Configurable properties referred in this attribute are declared in
          the VNFD.
          ETSI GS NFV-SOL 001 specifies the structure and format of the VNFD
          based on TOSCA specifications.
          VNF configurable properties are sometimes also referred to as
          configuration parameters applicable to a VNF. Some of these are set
          prior to instantiation and cannot be modified if the VNF is
          instantiated, some are set prior to instantiation (are part of
          initial configuration) and can be modified later, and others can be
          set only after instantiation. The applicability of certain
          configuration may depend on the VNF and the required operation of
          the VNF at a certain point in time.
          These configurable properties include the following standard
          attributes, which are declared in the VNFD if auto-scaling and/or
          auto-healing are supported by the VNF: 
          * isAutoscaleEnabled: If present, the VNF supports auto-scaling. If
          set to true, auto-scaling is currently enabled. If set to false,
          auto-scaling is currently disabled. 
          * isAutohealEnabled: If present, the VNF supports auto-healing. If
          set to true, auto-healing is currently enabled. If set to false,
          auto-healing is currently disabled. 
          This attribute can be modified with the PATCH method.
        $ref: "SOL005_def.yaml#/definitions/KeyValuePairs"
      vimId:
        description: >
          Identifier of a VIM that manages resources for the VNF instance.
        $ref: "SOL005_def.yaml#/definitions/Identifier"
      instantiationState:
        description: >
          The instantiation state of the VNF.
        type: string
        enum:
          - NOT_INSTANTIATED
          - INSTANTIATED
      instantiatedVnfInfo:
        description: >
          Information specific to an instantiated VNF instance. This attribute
          shall be present if the instantiateState attribute value is INSTANTIATED.
        type: object
        required:
          - flavourId
          - vnfState
        properties:
          flavourId:
            description: >
              Identifier of the VNF deployment flavor applied to this VNF instance.
            $ref: "SOL005_def.yaml#/definitions/IdentifierInVnfd"
          vnfState:
            description: >
              The state of the VNF instance.
            $ref: "#/definitions/VnfOperationalStateType"
          scaleStatus:
            description: >
              Scale status of the VNF, one entry per aspect. Represents for every
              scaling aspect how "big" the VNF has been scaled w.r.t. that aspect.
            type: array
            items:
              $ref: "#/definitions/VnfScaleInfo"
          extCpInfo:
            description: >
              Information about the external CPs exposed by the VNF instance.
            type: array
            minItems: 1
            items:
              type: object
              required:
                - id
                - cpdId
              properties:
                id:
                  description: >
                    Identifier of the external CP instance and the related information instance.
                  $ref: "SOL005_def.yaml#/definitions/IdentifierInVnf"
                cpdId:
                  description: >
                    Identifier of the external CPD, VnfExtCpd, in the VNFD.
                  $ref: "SOL005_def.yaml#/definitions/IdentifierInVnfd"
                cpProtocolInfo:
                  description: >
                    Network protocol information for this CP.
                  type: array
                  items:
                    $ref: "#/definitions/CpProtocolInfo"
                extLinkPortId:
                  description: >
                    Identifier of the "extLinkPortInfo" structure inside the  the
                    "extVirtualLinkInfo" structure. Shall be present if the CP is
                    associated to a link port.
                  $ref: "SOL005_def.yaml#/definitions/Identifier"           

          extVirtualLinkInfo:
            description: >
              Information about the external VLs the VNF instance is connected to.
            type: array
            items:
              $ref: "#/definitions/ExtVirtualLinkInfo"
          extManagedVirtualLinkInfo:
            description: >
              External virtual links the VNF instance is connected to.
            type: array
            items:
              $ref: "#/definitions/ExtManagedVirtualLinkInfo"
          monitoringParameters:
            description: >
              Active monitoring parameters.
            type: array
            items:
              $ref: "#/definitions/MonitoringParameter"
          localizationLanguage:
            description: >
              Information about localization language of the VNF (includes e.g.
              strings in the VNFD). The localization languages supported by a VNF
              can be declared in the VNFD, and localization language selection can
              take place at instantiation time.
              The value shall comply with the format defined in IETF RFC 5646.
            type: string
          vnfcResourceInfo:
            description: >
             Information about the virtualised compute and storage resources used
             by the VNFCs of the VNF instance.
            type: array
            items:
              $ref: "#/definitions/VnfcResourceInfo"
          virtualLinkResourceInfo:
            description: >
              Information about the virtualised network resources used by the VLs
              of the VNF instance.
            type: array
            items:
              $ref: "#/definitions/VnfVirtualLinkResourceInfo"
          virtualStorageResourceInfo:
            description: >
              Information on the virtualised storage resource(s) used as storage for the VNF instance.
            type: array
            items:
              $ref: "#/definitions/VirtualStorageResourceInfo"
      metadata:
        description: >
          Additional VNF-specific metadata describing the VNF instance.
          Metadata that are writeable are declared in the VNFD.
          This attribute can be modified with the PATCH method.
        $ref: "SOL005_def.yaml#/definitions/KeyValuePairs"
      extensions:
        description: >
          VNF-specific attributes that affect the lifecycle management of this
          VNF instance by the VNFM, or the lifecycle management scripts.
          Extensions that are writeable are declared in the VNFD.
          This attribute can be modified with the PATCH method.
        $ref: "SOL005_def.yaml#/definitions/KeyValuePairs"
        
  LccnLinks:
    description: >
      This type represents the links to resources that a notification can contain.
    type: object
    required: 
      - nsInstance
    properties: 
      nsInstance:
        description: >
          Link to the resource representing the NS instance to
          which the notified change applies..
        $ref: "SOL005_def.yaml#/definitions/Link"
      subscription:
        description: >
          Link to the subscription that triggered this notification.
        $ref: "SOL005_def.yaml#/definitions/Link"
      lcOpOcc:
        description: >
          Link to the lifecycle operation occurrence that this
          notification is related to. Shall be present if there is a
          related lifecycle operation occurrence
        $ref: "SOL005_def.yaml#/definitions/Link"
       
  Version:
    description: >
      A Version.
    type: string
  
  VnfOperationalStateType:
    type: string
    enum:
      - STARTED
      - STOPPED
      
  VnfScaleInfo:
    required:
      - aspectId
      - scaleLevel
    type: object
    properties:
      aspectId:
        description: >
          Identifier of the scaling aspect.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInVnfd"
      scaleLevel:
        description: >
          Indicates the scale level. The minimum value shall be 0 and the
          maximum value shall be <= maxScaleLevel as described in the VNFD.
        type: integer

  PnfInfo:
    description: >
      This type represents the information about a PNF that is part of an NS instance. 
      It shall comply with the provisions
      defined in Table 6.5.3.13-1.
    type: object
    required:
      - pnfId
      - pnfdId
      - pnfdInfoId
      - pnfProfileId
    properties:
      pnfId:
        description: >
          Identifier of the PNF. This identifier is allocated by the OSS/BSS.
        $ref: "SOL005_def.yaml#/definitions/Identifier"
      pnfName:
        description: >
          Name of the PNF.
        type: string
      pnfdId:
        description: >
          Identifier of the PNFD on which the PNF is based.
        $ref: "SOL005_def.yaml#/definitions/Identifier"
      pnfdInfoId:
        description: >
          Identifier of the PNFD information onject related to this
          PNF. This identifier is allocated by the NFVO
        $ref: "SOL005_def.yaml#/definitions/Identifier"
      pnfProfileId:
        description: >
          Identifier of the related PnfProfile in the NSD on which
          the PNF is based.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd"
      cpInfo:
        description: >
          Information on the external CP of the PNF.
        $ref: "#/definitions/PnfExtCpInfo"
      
  PnfExtCpInfo:
    description: >
      This type represents the information about the external CP of the PNF. 
      It shall comply with the provisions defined in
      Table 6.5.3.17-1.
    type: object
    required:
      - cpInstanceId
      - cpdId
    properties:
      cpInstanceId:
        description: >
          Identifier of the CP in the scope of the PNF.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInPnf"
      cpdId:
        description: >
          Identifier of (reference to) the Connection Point
          Descriptor (CPD) for this CP.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd"
      cpProtocolData:
        description: >
          Parameters for configuring the network protocols on the CP.
        type: array
        items:            
          $ref: "SOL005_def.yaml#/definitions/CpProtocolData"
            
  NsVirtualLinkInfo:
    description: >
      This type specifies the information about an NS VL instance. 
      It shall comply with the provisions defined in
      Table 6.5.3.53-1
    type: object
    required:
      - id
      - nsVirtualLinkDescId
    properties:
      id:
        description: >
          Identifier of the VL instance.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInNs"
      nsVirtualLinkDescId:
        description: >
          Identifier of the VLD in the NSD.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd"
      resourceHandle:
        description: >
          Identifier(s) of the virtualised network resource(s)
          realizing the VL instance. See note.
        type: array
        items:            
          $ref: "SOL005_def.yaml#/definitions/ResourceHandle"
      linkPort:
        description: >
          Link ports of the VL instance.
          Cardinality of zero indicates that no port has yet been
          created for the VL instance.
        type: array
        items: 
          $ref: "#/definitions/NsLinkPortInfo"

  VnffgInfo:
    description: >
      Information on the VNFFG(s) of the NS instance.
    type: object
    required:
      - id
      - vnffgdId
      - vnfInstanceId
      - pnfInfoId
    properties:
      id:
        description: >
          Identifier of this VNFFG instance.
        $ref: "SOL005_def.yaml#/definitions/Identifier"
      vnffgdId:
        description: >
          Identifier of the VNFFGD in the NSD.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd"
      vnfInstanceId:
        description: >
          Identifier(s) of the constituent VNF instance(s) of this VNFFG instance.
        type: array
        items:           
          $ref: "SOL005_def.yaml#/definitions/Identifier"
      pnfdInfoId:
        description: >
          Identifier(s) of the constituent PNF instance(s) of this
          VNFFG instance.
        type: array
        items: 
          $ref: "SOL005_def.yaml#/definitions/Identifier"
      nsVirtualLinkInfoId:
        description: >
          Identifier(s) of the constituent VL instance(s) of this
          VNFFG instance.
        type: array
        items:            
          $ref: "SOL005_def.yaml#/definitions/IdentifierInNs"
      nsCpHandle:
        description: >
          Identifiers of the CP instances attached to the
          constituent VNFs and PNFs or the SAP instances of the
          VNFFG. See note.
        type: array
        items:            
          $ref: "#/definitions/NsCpHandle"

  NsCpHandle:
    description: >
      This type represents an identifier of the CP or SAP instance. 
      It shall comply with the provisions defined in
      Table 6.5.3.56-1.
    type: object     
    properties:
      vnfInstanceId:
        description: >
          Identifier of the VNF instance associated to the CP instance.
          This attribute shall be present if the CP instance is VNF external CP.
        $ref: "SOL005_def.yaml#/definitions/Identifier"
      vnfExtCpInstanceId:
        description: >
          Identifier of the VNF external CP instance in the scope
          of the VNF instance. This attribute shall be present if the CP instance is VNF
          external CP. See notes 1 and 4.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInVnf"
      pnfInfoId:
        description: >
          Identifier of the PNF instance associated to the CP
          instance. This attribute shall be present if the CP instance is PNF
          external CP. See notes 2 and 4.          
        $ref: "SOL005_def.yaml#/definitions/Identifier"
      pnfExtCpInstanceId:
        description: >
          Identifier of the PNF external CP instance in the scope
          of the PNF. This attribute shall be present if the CP instance is PNF
          external CP. See notes 2 and 4.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInPnf"
      nsInstanceId:
        description: >
          Identifier of the NS instance associated to the SAP
          instance. This attribute shall be present if the CP instance is NS
          SAP. See notes 3 and 4.           
        $ref: "SOL005_def.yaml#/definitions/Identifier"
      nsSapInstanceId:
        description: >
          Identifier of the SAP instance in the scope of the NS
          instance. This attribute shall be present if the CP instance is NS
          SAP. See notes 3 and 4.           
        $ref: "SOL005_def.yaml#/definitions/IdentifierInNs"
         
  SapInfo:
    description: >
      This type represents an SAP instance. It shall comply with the provisions defined in Table 6.5.3.67-1.
    type: object
    required:
      - id
      - sapdId
      - sapName
      - sapProtocolInfo
    properties:
      id:
        description: >
          Identifier of the SAP instance.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInNs"
      sapdId:
        description: >
          Identifier of the SAPD in the NSD.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd"
      sapName:
        description: >
          Human readable name for the SAP instance.
        type: string
      description:
        description: >
          Human readable description for the SAP instance.
        type: string
      sapProtocolInfo:
        description: >
          Network protocol information for this SAP.
        type: array
        items:            
          $ref: "#/definitions/CpProtocolInfo"
         
  CpProtocolInfo:
    description: >
      This type describes the protocol layer(s) that a CP or SAP uses together with protocol-related information, like
      addresses. It shall comply with the provisions defined in Table 6.5.3.58-1.
    type: object
    required:
      - layerProtocol
      - ipOverEthernet
    properties:
      layerProtocol:
        description: >
          The identifier of layer(s) and protocol(s)
          associated to the network address information.
          Permitted values: IP_OVER_ETHERNET See note.
        type: string
        enum:
          - IP_OVER_ETHERNET
      ipOverEthernet:
        description: >
          IP addresses over Ethernet to assign to the CP
          or SAP instance. Shall be present if
          layerProtocol is equal to "
          IP_OVER_ETHERNET", and shall be absent otherwise.
        $ref: "#/definitions/IpOverEthernetAddressInfo"

  IpOverEthernetAddressInfo:
     description: >
        This type represents information about a network address that has been assigned. 
        It shall comply with the provisions defined in Table 6.5.3.18-1.
     type: object
     required:
       - macAddress
       - ipAddresses
       - subnetId
       - addresses
       - addressRange
     properties:
       macAddress:
         description: >
           Assigned MAC address.
         $ref: "SOL005_def.yaml#/definitions/MacAddress"
       ipAddresses:
         description: >
           Addresses assigned to the CP instance. Each entry represents IP
           addresses assigned by fixed or dynamic IP address assignment per
           subnet.
         type: array
         items: 
           type: object
           required: 
             - type
           properties: 
             type:
               description: >
                 The type of the IP addresses.
                 Permitted values: IPV4, IPV6.
               type: string
               enum: 
                 - IPV4
                 - IPV6
             addresses:
               description: >
                 Fixed addresses assigned (from the subnet defined by
                 "subnetId" if provided).
               type: array
               items: 
                 $ref: "SOL005_def.yaml#/definitions/IpAddress"
             isDynamic:
               description: >
                 Indicates whether this set of addresses was assigned
                 dynamically (true) or based on address information provided as
                 input from the API consumer (false). Shall be present if
                 "addresses" is present and shall be absent otherwise.
               type: boolean
             addressRange:
               description: >
                 An IP address range used, e.g., in case of egress connections.
                 Exactly one of "addresses" or "addressRange" shall be present.
               type: object
               required: 
                 - minAddress
                 - maxAddress
               properties:
                 minAddress:
                   description: >
                     Lowest IP address belonging to the range.
                   $ref: "SOL005_def.yaml#/definitions/IpAddress"
                 maxAddress:
                   description: >
                     Highest IP address belonging to the range
                   $ref: "SOL005_def.yaml#/definitions/IpAddress"
             subnetId:
               description: >
                 Subnet defined by the identifier of the subnet resource in
                 the VIM.
                 In case this attribute is present, IP addresses are bound
                 to that subnet.
               $ref: "SOL005_def.yaml#/definitions/IdentifierInVim"
           
           
       type:
         description: >
           The type of the IP addresses
         type: string
         enum:
           - PV4
           - PV6
       addresses:
         description: >
            Fixed addresses assigned (from the subnet
            defined by "subnetId" if provided). See note.
         type: array
         items:            
         $ref: "SOL005_def.yaml#/definitions/IpAddress"
       isDynamic:
         description: >
            Indicates whether this set of addresses was
            assigned dynamically (true) or based on address
            information provided as input from the API
            consumer (false). Shall be present if "addresses"
            is present and shall be absent otherwise.
         type: boolean
       addressRange:
         description: >
            An IP address range used, e.g. in case of egress
            connections. See note.
         type: object
         required: 
           - minAddress
           - maxAddress
         properties:
           minAddress:
             description: >
               Lowest IP address belonging to the range.
             $ref: "SOL005_def.yaml#/definitions/IpAddress"
           maxAddress:
             description: >
               Highest IP address belonging to the range
             $ref: "SOL005_def.yaml#/definitions/IpAddress"
       minAddress:
         description: >
            Lowest IP address belonging to the range
         $ref: "SOL005_def.yaml#/definitions/IpAddress"
       maxAddress:
         description: >
            Highest IP address belonging to the range.      
         $ref: "SOL005_def.yaml#/definitions/IpAddress"     
       subnetId:
         description: >
           Subnet defined by the identifier of the subnet
           resource in the VIM.
           In case this attribute is present, IP addresses
           are bound to that subnet.           
         $ref: "SOL005_def.yaml#/definitions/IdentifierInVim"
         
  ExtVirtualLinkInfo:
    type: object
    required:
      - id
      - resourceHandle
    properties:
      id:
         description: >
           Identifier of the external VL and the related external VL
           information instance.
           The identifier is assigned by the NFV-MANO entity that manages this
           VL instance.
         $ref: "SOL005_def.yaml#/definitions/Identifier"
      resourceHandle:
        description: >
          Reference to the resource realizing this VL.
        $ref: "SOL005_def.yaml#/definitions/ResourceHandle"
      extLinkPorts:
        description: >
          Link ports of this VL.
        type: array
        items:
          $ref: "#/definitions/ExtLinkPortInfo"

  ExtLinkPortInfo:
    description: >
      This type represents information about a link port of an external VL,
      i.e. a port providing connectivity for the VNF to an NS VL. 
    type: object
    required:
      - id
      - resourceHandle
    properties:
      id:
        description: >
          Identifier of this link port as provided by the entity that has
          created the link port.
        $ref: "SOL005_def.yaml#/definitions/Identifier"
      resourceHandle:
        description: >
          Reference to the virtualised resource realizing this link port.
        $ref: "SOL005_def.yaml#/definitions/ResourceHandle"
      cpInstanceId:
        description: >
          Identifier of the external CP of the VNF connected to this link
          port. There shall be at most one link port associated with any
          external connection point instance. The value refers to an
          "extCpInfo" item in the VnfInstance.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInVnf"

  ExtManagedVirtualLinkInfo:
    type: object
    required:
      - id
      - vnfVirtualLinkDescId
    properties:
      id:
        description: >
          Identifier of the externally-managed internal VL and the related
          externally-managed VL information instance.
          The identifier is assigned by the NFV-MANO entity that manages this
          VL instance.
        $ref: "SOL005_def.yaml#/definitions/Identifier"
      vnfVirtualLinkDescId:
        description: >
          Identifier of the VNF Virtual Link Descriptor (VLD) in the VNFD.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInVnfd"
      networkResource:
        description: >
          Reference to the VirtualNetwork resource.
        $ref: "SOL005_def.yaml#/definitions/ResourceHandle"
      vnfLinkPorts:
        description: >
          Link ports of this VL.
        type: array
        items:
          $ref: "#/definitions/VnfLinkPortInfo"

  VnfLinkPortInfo:
    type: object
    required:
      - id
      - resourceHandle
    properties:
      id:
        description: >
          Identifier of this link port as provided by the entity that has created the link port.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInVnf"
      resourceHandle:
        description: >
          Reference to the virtualised network resource realizing this link port.
        $ref: "SOL005_def.yaml#/definitions/ResourceHandle"
      cpInstanceId:
        description: >
          When the link port is used for external connectivity by the VNF,
          this attribute represents the identifier of the external CP of the
          VNF to be connected to this link port.
          When the link port is used for internal connectivity in the VNF,
          this attribute represents the VNFC CP to be connected to this link
          port.
          Shall be present when the link port is used for external
          connectivity by the VNF.
          may be present if used to reference a VNFC CP instance.
          There shall be at most one link port associated with any external
          connection point instance or internal connection point
          (i.e. VNFC CP) instance.
          The value refers to an "extCpInfo" item in the VnfInstance or a
          "vnfcCpInfo" item of a "vnfcResouceInfo" item in the VnfInstance.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInVnf"

  MonitoringParameter:
    type: object
    required:
      - id
      - value
      - timeStamp
    properties:
      id:
        description: >
          Identifier of the monitoring parameter defined in the VNFD.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInVnfd"
      name:
        description: >
          Human readable name of the monitoring parameter, as defined in the VNFD.
        type: string
      value:
        description: >
          Value of the monitoring parameter known to the VNFM (e.g. obtained
          for auto-scaling purposes).
          The type of the "value" attribute (i.e. scalar, structure (Object in
          JSON), or array (of scalars, arrays or structures/Objects)) is
          assumed to be defined in an external measurement specification.
        type: object
      timeStamp:
        description: >
          Represents the point in time when the measurement has been performed,
          as known to the VNFM.
          Should be formatted according to ETF RFC 3339.
        type: string

  VnfcResourceInfo:
    description: >
      This type represents the information on virtualised compute and storage
      resources used by a VNFC in a VNF instance.
    type: object
    required:
      - id
      - vduId
      - computeResource
    properties:
      id:
        description: >
          Identifier of this VnfcResourceInfo instance.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInVnf"
      vduId:
        description: >
          Reference to the applicable VDU in the VNFD.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInVnfd"
      computeResource:
        description: >
          Reference to the VirtualCompute resource.
        $ref: "SOL005_def.yaml#/definitions/ResourceHandle"
      storageResourceIds:
        description: >
          References to the VirtualStorage resources. The value refers to a
          VirtualStorageResourceInfo item in the VnfInstance.
        type: array
        items:
          $ref: "SOL005_def.yaml#/definitions/Identifier"
      reservationId:
        description: >
          The reservation identifier applicable to the resource. It shall be
          present when an applicable reservation exists.
        $ref: "SOL005_def.yaml#/definitions/Identifier"
      vnfcCpInfo:
        description: >
          CPs of the VNFC instance.
          Shall be present when that particular CP of the VNFC instance is
          associated to an external CP of the VNF instance.
          May be present otherwise.
        type: array
        items:
          type: object
          required:
            - id
            - cpdId
          properties:
            id:
              description: >
                Identifier of this VNFC CP instance and the associated array
                entry.
              $ref: "SOL005_def.yaml#/definitions/IdentifierInVnf"
            cpdId:
              description: >
                Identifier of the VDU CPD, cpdId, in the VNFD.
              $ref: "SOL005_def.yaml#/definitions/IdentifierInVnfd"
            vnfExtCpId:
              description: >
                When the VNFC CP is exposed as external CP of the VNF, the
                identifier of this external VNF CP.
              $ref: "SOL005_def.yaml#/definitions/IdentifierInVnf"
            cpProtocolInfo:
              description: >
                Network protocol information for this CP.
              type: array
              items:
                $ref: "#/definitions/CpProtocolInfo"
            vnfLinkPortId:
              description: >
                Identifier of the "vnfLinkPorts" structure in the
                "vnfVirtualLinkResourceInfo" structure. Shall be present if
                the CP is associated to a link port.
              $ref: "SOL005_def.yaml#/definitions/IdentifierInVnf"
      metadata:
        description: >
          Metadata about this resource.
        $ref: "SOL005_def.yaml#/definitions/KeyValuePairs"

  VnfVirtualLinkResourceInfo:
     description: >
       This type represents the information that allows addressing a virtualised
       resource that is used by an internal VL instance in a VNF instance.
     type: object
     required:
       - id
       - vnfVirtualLinkDescId
       - networkResource
     properties:
       id:
         description: >
           Identifier of this VnfVirtualLinkResourceInfo instance.
         $ref: "SOL005_def.yaml#/definitions/IdentifierInVnf"
       vnfVirtualLinkDescId:
         description: >
           Identifier of the VNF Virtual Link Descriptor (VLD) in the VNFD.
         $ref: "SOL005_def.yaml#/definitions/IdentifierInVnfd"
       networkResource:
         description: >
           Reference to the VirtualNetwork resource.
         $ref: "SOL005_def.yaml#/definitions/ResourceHandle"
       reservationId:
         description: >
           The reservation identifier applicable to the resource. It shall be
           present when an applicable reservation exists.
         $ref: "SOL005_def.yaml#/definitions/Identifier"
       vnfLinkPorts:
         description: >
           Links ports of this VL.
           Shall be present when the linkPort is used for external connectivity
           by the VNF (refer to VnfLinkPortInfo).
           May be present otherwise.
         type: array
         items:
           $ref: "#/definitions/VnfLinkPortInfo"
       metadata:
         description: >
           Metadata about this resource.
         $ref: "SOL005_def.yaml#/definitions/KeyValuePairs"
         
  VirtualStorageResourceInfo:
     description: >
       This type represents the information that allows addressing a virtualised
       resource that is used by a VNF instance.
     type: object
     required:
       - id
       - virtualStorageDescId
       - storageResource
     properties:
       id:
         description: >
           Identifier of this VirtualStorageResourceInfo instance.
         $ref: "SOL005_def.yaml#/definitions/IdentifierInVnf"
       virtualStorageDescId:
         description: >
           Identifier of the VirtualStorageDesc in the VNFD.
         $ref: "SOL005_def.yaml#/definitions/IdentifierInVnfd"
       storageResource:
         description: >
           Reference to the VirtualStorage resource.
         $ref: "SOL005_def.yaml#/definitions/ResourceHandle"
       reservationId:
         description: >
           The reservation identifier applicable to the resource. It shall be
           present when an applicable reservation exists.
         $ref: "SOL005_def.yaml#/definitions/Identifier"
       metadata:
         description: >
           Metadata about this resource.
         $ref: "SOL005_def.yaml#/definitions/KeyValuePairs"
         
  NsLinkPortInfo:
     description: >
        This type represents information about a link port of a VL instance. 
        It shall comply with the provisions defined in Table 6.5.3.55-1.
     type: object
     required:
       - id
       - resourceHandle
     properties:
       id:
         description: >
           Identifier of this link port as provided by the entity that
           has created the link port.
         $ref: "SOL005_def.yaml#/definitions/Identifier"
       resourceHandle:
         description: >
           Identifier of the virtualised network resource realizing
           this link port.
         $ref: "SOL005_def.yaml#/definitions/ResourceHandle"
       nsCpHandle:
         description: >
            Identifier of the CP/SAP instance to be connected to this
            link port. The value refers to a vnfExtCpInfo item in the
            VnfInstance, or a pnfExtCpInfo item in the PnfInfo, or a
            sapInfo item in the NS instance.
            There shall be at most one link port associated with any
            connection point instance.
         type: array
         items:           
           $ref: "#/definitions/NsCpHandle"
           
  AffinityOrAntiAffinityRule:
     description: >
        This type describes the additional affinity or anti-affinity rule 
        applicable between the VNF instances to be instantiated
        in the NS instantiation operation request or between the VNF instances 
        to be instantiated in the NS instantiation
        operation request and the existing VNF instances..
     type: object
     required:
       - affinityOrAntiAffiinty
       - scope 
     properties:
       vnfdId:
         description: >
            Reference to a VNFD.
            When the VNFD which is not used to instantiate VNF, it
            presents all VNF instances of this type as the subjects
            of the affinity or anti-affinity rule. The VNF instance
            which the VNFD presents is not necessary as a part of
            the NS to be instantiated.
         type: array
         items:            
           $ref: "SOL005_def.yaml#/definitions/Identifier"         
       vnfProfileId:
         description: >
           Reference to a vnfProfile defined in the NSD.
           At least one VnfProfile which is used to instantiate VNF
           for the NS to be instantiated as the subject of the affinity
           or anti-affinity rule shall be present. When the VnfProfile
           which is not used to instantiate VNF, it presents all VNF
           instances of this type as the subjects of the affinity or
           anti-affinity rule. The VNF instance which the VnfProfile
           presents is not necessary as a part of the NS to be instantiated.
         type: array
         items:            
           $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd"          
       vnfInstanceId:
         description: >
           Reference to the existing VNF instance as the subject of
           the affinity or anti-affinity rule. The existing VNF instance
           is not necessary as a part of the NS to be instantiated.
         type: array
         items:           
           $ref: "SOL005_def.yaml#/definitions/Identifier"
       affinityOrAntiAffiinty:
         description: >
           The type of the constraint.
           Permitted values:
           AFFINITY
           ANTI_AFFINITY.
         type: string
         enum: 
           - AFFINITY
           - ANTI_AFFINITY
       scope:
         description: >
           Specifies the scope of the rule where the placement
           constraint applies.
           Permitted values:
           NFVI_POP
           ZONE
           ZONE_GROUP
           NFVI_NODE.
         type: string
         enum: 
           - NFVI_POP
           - ZONE
           - ZONE_GROUP
           - NFVI_NODE         

  InstantiateNsRequest:
    type: object
    required:
      - nsFlavourId    
    properties:
      nsFlavourId:
        description: >
          Identifier of the NS deployment flavor to be instantiated.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd"
      sapData:
        description: >
           Create data concerning the SAPs of this NS.
        type: array
        items:           
          $ref: "#/definitions/SapData" 
      addpnfData:
        description: >
          Information on the PNF(s) that are part of this NS.
        type: array
        items:           
          $ref: "#/definitions/AddPnfData"        
      vnfInstanceData:
        description: >
          Specify an existing VNF instance to be used in the NS.
          If needed, the VNF Profile to be used for this VNF
          instance is also provided.
        type: array
        items:           
          $ref: "#/definitions/VnfInstanceData"
      nestedNsInstanceId:
        description: >
          Specify an existing NS instance to be used as a nested
          NS within the NS.
        type: array
        items:                     
          $ref: "SOL005_def.yaml#/definitions/Identifier"
      localizationLanguage:
        description: >
          Defines the location constraints for the VNF to be
          instantiated as part of the NS instantiation.
          An example can be a constraint for the VNF to be in a
          specific geographic location..
        type: array
        items:           
          $ref: "#/definitions/VnfLocationConstraint"        
      additionalParamsForNs:
        description: >
          Allows the OSS/BSS to provide additional parameter(s)
          at the NS level (as opposed to the VNF level, which is
          covered in additionalParamsForVnf)..
        $ref: "SOL005_def.yaml#/definitions/KeyValuePairs"
      additionalParamsForVnf:
        description: >
          Allows the OSS/BSS to provide additional parameter(s)
          per VNF instance (as opposed to the NS level, which is
          covered in additionalParamsForNs). This is for VNFs
          that are to be created by the NFVO as part of the NS
          instantiation and not for existing VNF that are
          referenced for reuse..
        type: array
        items:           
          $ref: "#/definitions/ParamsForVnf"          
      startTime:
        description: >
          Timestamp indicating the earliest time to instantiate the NS. 
          Cardinality "0" indicates the NS instantiation takes place immediately.
        $ref: "SOL005_def.yaml#/definitions/DateTime"
      nsInstantiationLevelId:
        description: >
          Identifies one of the NS instantiation levels declared in
          the DF applicable to this NS instance. If not present, the
          default NS instantiation level as declared in the NSD
          shall be used.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd"   
      additionalAffinityOrAntiAffiniityRule:
        description: >
            Specifies additional affinity or anti-affinity constraint for
            the VNF instances to be instantiated as part of the NS
            instantiation.
            Shall not conflict with rules already specified in the NSD.
        type: array
        items:           
          $ref: "#/definitions/AffinityOrAntiAffinityRule"

  ParamsForVnf:
     description: >
        This type defines the additional parameters for the VNF instance 
        to be created associated with an NS instance. 
        It shall comply with the provisions defined in Table 6.5.3.22-1.
     type: object
     required:
       - vnfProfileId
     properties:
       vnfProfileId:
         description: >
           Identifier of (reference to) a vnfProfile to which the
           additional parameters apply.
         $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd"
       additionalParams:
         description: >
           Additional parameters that are applied for the VNF
           instance to be created.
         $ref: "SOL005_def.yaml#/definitions/KeyValuePairs"
         
  LocationConstraints:
     description: >
       This type represents location constraints for a VNF to be instantiated. 
       The location constraints shall be presented as a
       country code, optionally followed by a civic address based on 
       the format defined by IETF RFC 4776 [13].
     type: object
     required:
       - countryCode
     properties:
       countryCode:
         description: >
           The two-letter ISO 3166 [29] country code in capital letters.
         type: string
       civicAddressElement:
         description: >
           Zero or more elements comprising the civic address.
         type: array
         items:
           type: object
           required:
             - caType
             - caValue        
           properties:
             caType:
               description: >
                 Describe the content type of caValue. The value of
                 caType shall comply with Section 3.4 of IETF
                 RFC 4776 [13].
               type: integer
             caValue:
               description: >
                 Content of civic address element corresponding to the
                 caType. The format caValue shall comply with
                 Section 3.4 of IETF RFC 4776 [13].
               type: string
         
  VnfLocationConstraint:
     description: >
       This type represents the association of location constraints to a VNF instance 
       to be created according to a specific VNF profile. 
       It shall comply with the provisions defined in Table 6.5.3.20-1.
     type: object
     required:
       - vnfProfileId
     properties:
       vnfProfileId:
         description: >
           Identifier of (reference to) a vnfProfile to which the
           additional parameters apply.
         $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd"
       locationConstraints:
         description: >
           Defines the location constraints for the VNF instance to
           be created based on the VNF profile.
         $ref: "#/definitions/LocationConstraints"

  VnfInstanceData:
     description: >
       This type specifies an existing VNF instance to be used in the NS instance and 
       if needed, the VNF Profile to use for this VNF instance. 
       It shall comply with the provisions defined in Table 6.5.3.19-1.
     type: object
     required:
       - vnfInstanceId
       - vnfProfileId       
     properties:
       vnfInstanceId:
         description: >
           Identifier of the existing VNF instance to be used in the NS.
         $ref: "SOL005_def.yaml#/definitions/Identifier"
       vnfProfileId:
         description: >
           Identifier of (Reference to) a vnfProfile defined in the
           NSD which the existing VNF instance shall be matched
           with. If not present, the NFVO will select the VnfProfile
           matching the information in the VNF instance.
         $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd"
         
  SapData:
     description: >
        This type represents the information related to a SAP of a NS. 
        It shall comply with the provisions defined in Table 6.5.3.10-1.
     type: object
     required:
       - sapdId
       - sapName
       - description
     properties:
       sapdId:
         description: >
           Reference to the SAPD for this SAP.
         $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd"
       sapName:
         description: >
           Human readable name for the SAP.
         type: string
       description:
         description: >
           Human readable description for the SAP.
         type: string
       sapProtocolData:
        description: >
          Parameters for configuring the network protocols on the SAP.
        type: array
        items:           
          $ref: "SOL005_def.yaml#/definitions/CpProtocolData" 

  ScaleNsRequest:
     description: >
       This type represents a request for the scale NS operation.       
     type: object
     required:
       - scaleType
     properties:
       scaleType:
         description: >
           Indicates the type of scaling to be performed.
           Possible values:
           - SCALE_NS
           - SCALE_VNF
         type: string
         enum: 
           - SCALE_NS
           - SCALE_VNF
       scaleNsData:
         description: >
           The necessary information to scale the referenced NS instance.
           It shall be present when scaleType = SCALE_NS.
         $ref: "#/definitions/ScaleNsData"
       scaleVnfData:
         description: >
           The necessary information to scale the referenced NS instance.
           It shall be present when scaleType = SCALE_VNF.
         type: array
         items:
           $ref: "#/definitions/ScaleVnfData"
       scaleTime:
         description: >
          Timestamp indicating the scale time of the NS, i.e. the
          NS will be scaled at this timestamp. Cardinality "0"
          indicates the NS scaling takes place immediately".
         $ref: "SOL005_def.yaml#/definitions/DateTime"
         
  UpdateNsRequest:
    description: >
      This operation supports the update of a NS instance, 
      It shall comply with the provisions defined in Table 6.5.2.12-1.
    type: object
    required:
      - updateType
    properties:
      updateType:
        description: >
          The type of update. It determines also which one of the
          following parameters is present in the operation.
          Possible values include:
          * ADD_VNF: Adding existing VNF instance(s)
          * REMOVE_VNF: Removing VNF instance(s)
          * INSTANTIATE_VNF: Instantiating new VNF(s)
          * CHANGE_VNF_DF: Changing VNF DF
          * OPERATE_VNF: Changing VNF state,
          * MODIFY_VNF_INFORMATION: Modifying
          VNF information and/or the configurable
          properties of VNF instance(s)
          * CHANGE_EXTERNAL_VNF_CONNECTIVITY:
          Changing the external connectivity of VNF
          instance(s)ADD_SAP: Adding SAP(s)
          * REMOVE_SAP: Removing SAP(s)
          * ADD_NESTED_NS: Adding existing NS
          instance(s) as nested NS(s)
          * REMOVE_NESTED_NS: Removing existing
          nested NS instance(s)
          * ASSOC_NEW_NSD_VERSION: Associating a
          new NSD version to the NS instance
          * MOVE_VNF: Moving VNF instance(s) from one
          origin NS instance to another target NS
          instance
          * ADD_VNFFG: Adding VNFFG(s)
          * REMOVE_VNFFG: Removing VNFFG(s)
          * UPDATE_VNFFG: Updating VNFFG(s)
          * CHANGE_NS_DF: Changing NS DF
          * ADD_PNF: Adding PNF
          * MODIFY_PNF: Modifying PNF
          * REMOVE_PNF: Removing PNF
        type: string
        enum: 
          - ADD_VNF
          - REMOVE_VNF
          - INSTANTIATE_VNF
          - CHANGE_VNF_DF
          - OPERATE_VNF
          - MODIFY_VNF_INFORMATION
          - CHANGE_EXTERNAL_VNF_CONNECTIVITY
          - REMOVE_SAP
          - ADD_NESTED_NS
          - REMOVE_NESTED_NS
          - ASSOC_NEW_NSD_VERSION
          - MOVE_VNF
          - ADD_VNFFG
          - REMOVE_VNFFG 
          - UPDATE_VNFFG 
          - CHANGE_NS_DF 
          - ADD_PNF 
          - MODIFY_PNF 
          - REMOVE_PNF            
      addVnfIstance:
        description: >
          Identifies an existing VNF instance to be added to the
          NS instance. It shall be present only if updateType = "ADD_VNF".         
        type: array
        items:           
          $ref: "#/definitions/VnfInstanceData"
      removeVnfInstanceId:
        description: >
          Identifies an existing VNF instance to be removed from
          the NS instance. It contains the identifier(s) of the VNF
          instances to be removed. It shall be present only if
          updateType = "REMOVE_VNF." Note: If a VNF instance
          is removed from a NS and this NS was the last one for
          which this VNF instance was a part, the VNF instance is
          terminated by the NFVO.
        type: array
        items:           
          $ref: "SOL005_def.yaml#/definitions/Identifier"           
      instantiateVnfData:
        description: >
          Identifies the new VNF to be instantiated. It can be used
          e.g. for the bottom-up NS creation. It shall be present
          only if updateType = "INSTANTIATE_VNF".
        type: array
        items:           
          $ref: "#/definitions/InstantiateVnfData"         
      changeVnfFlavourData:
        description: >
          Identifies the new DF of the VNF instance to be
          changed to. It shall be present only if updateType = "CHANGE_VNF_DF".
        type: array
        items:           
          $ref: "#/definitions/ChangeVnfFlavourData"  
      operateVnfData:
        description: >
          Identifies the state of the VNF instance to be changed. 
          It shall be present only if updateType = "OPERATE_VNF".
        type: array
        items:           
          $ref: "#/definitions/OperateVnfData"      
      modifyVnfInfoData:
        description: >
          Identifies the VNF information parameters and/or the
          configurable properties of VNF instance to be modified.
          It shall be present only if updateType = "MODIFY_VNF_INFORMATION".
        type: array
        items:           
          $ref: "#/definitions/ModifyVnfInfoData"
      changeExtVnfConnectivityData:
        description: >
          Specifies the new external connectivity data of the VNF
          instance to be changed. It shall be present only if
          updateType = "CHANGE_EXTERNAL_VNF_CONNECTIVITY".
        type: array
        items:           
          $ref: "#/definitions/ChangeExtVnfConnectivityData" 
      addSap:
        description: >
          Identifies a new SAP to be added to the NS instance.
          It shall be present only if updateType = "ADD_SAP."
        type: array
        items:           
          $ref: "#/definitions/SapData" 
      removeSapId:
        description: >
          The identifier an existing SAP to be removed from the
          NS instance. It shall be present only if updateType = "REMOVE_SAP."
        type: array
        items:           
          $ref: "SOL005_def.yaml#/definitions/Identifier"
      addNestedNsId:
        description: >
          The identifier of an existing nested NS instance to be
          added to (nested within) the NS instance. It shall be
          present only if updateType = "ADD_NESTED_NS".
        type: array
        items:           
          $ref: "SOL005_def.yaml#/definitions/Identifier"
      removeNestedNsId:
         description: >
           The identifier of an existing nested NS instance to be
           removed from the NS instance. It shall be present only if
           updateType = "REMOVE_NESTED_NS".
         type: array
         items:           
           $ref: "SOL005_def.yaml#/definitions/IdentifierInNs"
      assocNewNsdVersionData:
        description: >
          Specify the new NSD to be used for the NS instance. It
          shall be present only if updateType =
          ASSOC_NEW_NSD_VERSION".
        $ref: "#/definitions/AssocNewNsdVersionData"
      moveVnfInstanceData:
        description: >
          Specify existing VNF instance to be moved from one NS
          instance to another NS instance. It shall be present only
          if updateType = MOVE_VNF".
        type: array
        items:           
          $ref: "#/definitions/MoveVnfInstanceData" 
      addVnffg:
        description: >
          Specify the new VNFFG to be created to the NS
          Instance. It shall be present only if updateType =
          "ADD_VNFFG".
        type: array
        items:           
          $ref: "#/definitions/AddVnffgData" 
      removeVnffgId:
        description: >
          Identifier of an existing VNFFG to be removed from the
          NS Instance. It shall be present only if updateType =
          "REMOVE_VNFFG".
        type: array
        items:           
          $ref: "SOL005_def.yaml#/definitions/Identifier"
      updateVnffg:
        description: >
          Specify the new VNFFG Information data to be updated
          for a VNFFG of the NS Instance. It shall be present only
          if updateType = "UPDATE_VNFFG".
        type: array
        items:           
          $ref: "#/definitions/UpdateVnffgData" 
      changeNsFlavourData:
        description: >
          Specifies the new DF to be applied to the NS instance. It
          shall be present only if updateType =
          "CHANGE_NS_DF".
        $ref: "#/definitions/ChangeNsFlavourData" 
      addPnfData:
        description: >
          specifies the PNF to be added into the NS instance. 
          It shall be present only if updateType = "ADD_PNF".
        type: array
        items:           
          $ref: "#/definitions/AddPnfData" 
      modifyPnfData:
        description: >
          Specifies the PNF to be modified in the NS instance. 
          It shall be present only if updateType = "MODIFY_PNF".
        type: array
        items:           
          $ref: "#/definitions/ModifyPnfData" 
      removePnfId:
        description: >
          Identifier of the PNF to be deleted from the NS instance.
          It shall be present only if updateType = "REMOVE_PNF".
        type: array
        items:           
          $ref: "SOL005_def.yaml#/definitions/Identifier" 
      updateTime:
        description: >
          Timestamp indicating the update time of the NS, i.e. the
          NS will be updated at this timestamp. Cardinality "0"
          indicates the NS update takes place immediately.
        $ref: "SOL005_def.yaml#/definitions/DateTime"         
  InstantiateVnfData:
    description: >
      This type represents the information related to a SAP of a NS. The InstantiateVnfData data type specifies the
      parameters that are needed for VNF instantiation. This information element is used for the bottom-up NS creation when
      the OSS/BSS explicitly requests VNF instantiation for a given NS. When the NFVO invokes the Instantiate VNF
      update operation, a set of these parameters are then passed by the NFVO to the VNFM. It shall comply with the
      provisions defined in Table 6.5.3.24-1.
    type: object
    required:
      - vnfdId
      - vnfFlavourId    
    properties:
      vnfdId:
        description: >
          Information sufficient to identify the VNFD which defines
          the VNF to be instantiated.
        $ref: "SOL005_def.yaml#/definitions/Identifier"
      vnfFlavourId:
        description: >
          Identifier of the VNF deployment flavor to be instantiated.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInVnfd"
      vnfInstantiationLevelId:
        description: >
          Identifier of the instantiation level of the deployment
          flavor to be instantiated. If not present, the default
          instantiation level as declared in the VNFD is
          instantiated.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInVnfd" 
      vnfInstanceName:
        description: >
          Human-readable name of the VNF instance to be created.
        type: string
      vnfInstanceDescription:
        description: >
          Human-readable description of the VNF instance to be created.
        type: string
      extVirtualLinks:
        description: >
          Information about external VLs to connect the VNF to.
        type: array
        items:           
          $ref: "SOL005_def.yaml#/definitions/ExtVirtualLinkData"
      extManagedVirtualLinks:
        description: >
          Information about internal VLs that are managed by other entities than the VNFM.
        type: array
        items:           
          $ref: "SOL005_def.yaml#/definitions/ExtManagedVirtualLinkData"   
      localizationLanguage:
        description: >
          Localization language of the VNF to be instantiated.
          The value shall comply with the format defined in IETF RFC 5646 [16].
        type: string
      additionalParams:
        description: >
          Additional input parameters for the instantiation process,
          specific to the VNF being instantiated.
        $ref: "SOL005_def.yaml#/definitions/KeyValuePairs"
         
  ChangeVnfFlavourData:
     description: >
       The type represents the information that is requested to be changed 
       deployment flavor for an existing VNF instance. 
       It shall comply with the provisions defined in Table 6.5.3.25-1.
     type: object
     required:
       - vnfInstanceId
       - newFlavourId
     properties:
       vnfInstanceId:
         description: >
           Identifier of the VNF instance to be modified.
         $ref: "SOL005_def.yaml#/definitions/Identifier"
       newFlavourId:
         description: >
           Identifier of the VNF deployment flavor to be instantiated.
         $ref: "SOL005_def.yaml#/definitions/IdentifierInVnfd"
       instantiationLevelId:
         description: >
           Identifier of the instantiation level of the deployment
           flavor to be instantiated. If not present, the default
           instantiation level as declared in the VNFD is
           instantiated.
         $ref: "SOL005_def.yaml#/definitions/IdentifierInVnfd"
       extVirtualLinks:
         description: >
           Information about external VLs to connect the VNF to.
         type: array
         items:           
           $ref: "SOL005_def.yaml#/definitions/ExtVirtualLinkData" 
       extManagedVirtualLinks:
         description: >
           information about internal VLs that are managed by NFVO.
         type: array
         items:           
           $ref: "SOL005_def.yaml#/definitions/ExtManagedVirtualLinkData"
       additionalParams:
         description: >
           Additional input parameters for the flavor change
           process, specific to the VNF being modified, as declared
           in the VNFD as part of "ChangeVnfFlavourOpConfig".
         $ref: "SOL005_def.yaml#/definitions/KeyValuePairs"
         
  OperateVnfData:
    description: >
      This type represents a VNF instance for which the operational state 
      needs to be changed and the requested new state. It
      shall comply with the provisions defined in Table 6.5.3.31-1.
    type: object
    required:
      - vnfInstanceId
      - changeStateTo
    properties:
      vnfInstanceId:
        description: >
          Identifier of the VNF instance.
        $ref: "SOL005_def.yaml#/definitions/Identifier"
      changeStateTo:
        description: >
          The desired operational state (i.e. started or stopped)
          to change the VNF to.
        $ref: "#/definitions/OperationalStates"
      stopType:
        description: >
          It signals whether forceful or graceful stop is requested.           
        $ref: "#/definitions/StopType"
      gracefulStopTimeout:
        description: >
          The time interval (in seconds) to wait for the VNF to be
          taken out of service during graceful stop, before
          stopping the VNF.
        type: integer
         
  OperationalStates:
     description: >
       STARTED - The VNF instance is up and running.
       STOPPED - The VNF instance has been shut down.
     type: string
     enum:
       - STARTED
       - STOPPED
  StopType:
     description: >
       * FORCEFUL: The VNFM will stop the VNF immediately after accepting the
         request.
       * GRACEFUL: The VNFM will first arrange to take the VNF out of service
         after accepting the request. Once that operation is successful or once
         the timer value specified in the "gracefulStopTimeout" attribute
         expires, the VNFM will stop the VNF.
     type: string
     enum:
       - FORCEFUL
       - GRACEFUL

  ModifyVnfInfoData:
     description: >
       This type represents the information that is requested to be modified for a VNF instance. The information to be
       modified shall comply with the associated NSD.
       EXAMPLE. The vnfPkgId attribute value for a particular VNF instance can only be updated with a value that
       matches the identifier value of a VNF package whose vnfdId is present in the associated profile of the NSD.
     type: object
     required:
       - vnfInstanceId
     properties:
       vnfInstanceId:
         description: >
           Identifier of the VNF instance.
         $ref: "SOL005_def.yaml#/definitions/Identifier"
       vnfInstanceName:
         description: >
           New value of the "vnfInstanceName" attribute in
           "VnfInstance", or "null" to remove the attribute.
         type: string
       vnfInstanceDescription:
         description: >
           New value of the "vnfInstanceDescription" attribute in "VnfInstance",
           or "null" to remove the attribute.
         type: string
       vnfPkgId:
         description: >
           New value of the "vnfPkgId" attribute in "VnfInstance".
           The value "null" is not permitted
         $ref: "SOL005_def.yaml#/definitions/Identifier"
       vnfConfigurableProperties:
         description: >
           Modifications to entries in the
           "vnfConfigurableProperties" list, as defined below this Table.
         $ref: "SOL005_def.yaml#/definitions/KeyValuePairs"
       Metadata:
         description: >
           Modifications to entries in the "metadata" list, as
           defined below this Table.
         $ref: "SOL005_def.yaml#/definitions/KeyValuePairs"
       Extensions:
         description: >
           Modifications to entries in the "extensions" list, as
           defined below this Table.
         $ref: "SOL005_def.yaml#/definitions/KeyValuePairs"
         
  ChangeExtVnfConnectivityData:
     description: >
       This type describes the information invoked by the NFVO to change the external VNF connectivity information
       maintained by the VNFM. The types of changes that this operation supports are:
       1) Disconnect the external CPs that are connected to a particular external VL, and connect them to a different
       external VL.
       2) Change the connectivity parameters of the existing external CPs, including changing addresses.
       NOTE: Depending on the capabilities of the underlying VIM resources, certain changes (e.g. modifying the IP
       address assignment) might not be supported without deleting the resource and creating another one with
       the modified configuration.
       This type shall comply with the provisions defined in Table 6.5.3.33-1.
     type: object
     required:
       - vnfInstanceId
       - extVirtualLink
     properties:
       vnfInstanceId:
         description: >
           Identifier of the VNF instance.
         $ref: "SOL005_def.yaml#/definitions/Identifier"
       extVirtualLink:
         description: >
           Information about external VLs to change (e.g. connect the VNF to).
         type: array
         items:           
           $ref: "SOL005_def.yaml#/definitions/ExtVirtualLinkData"
       additionalParams:
         description: >
           Additional parameters passed by the OSS as input to
           the external connectivity change process, specific to the
           VNF instance being changed.
         $ref: "SOL005_def.yaml#/definitions/KeyValuePairs"
         
  AssocNewNsdVersionData:
     description: >
       This type specifies a new NSD version that is associated to the NS instance. After issuing the Update NS operation with
       updateType = "AssocNewNsdVersion", the NFVO shall use the referred NSD as a basis for the given NS instance.
       Different versions of the same NSD have same nsdInvariantId, but different nsdId attributes, therefore if the
       nsdInvariantId of the NSD version that is to be associated to this NS instance is different from the one used before, the
       NFVO shall reject the request. Only new versions of the same NSD can be associated to an existing NS instance. This
       data type shall comply with the provisions defined in Table 6.5.3.34-1.
     type: object
     required:
       - newNsdId
     properties:
       newNsdId:
         description: >
           Identifier of the new NSD version that is to be
           associated to the NS instance.
         $ref: "SOL005_def.yaml#/definitions/Identifier"
       sync:
         description: >
           Specify whether the NS instance shall be automatically
           synchronized to the new NSD by the NFVO (in case of
           true value) or the NFVO shall not do any action (in case
           of a false value) and wait for further guidance from
           OSS/BSS (i.e. waiting for OSS/BSS to issue NS
           lifecycle management operation to explicitly add/remove
           VNFs and modify information of VNF instances
           according to the new NSD).
           The synchronization to the new NSD means e.g.
           instantiating/adding those VNFs whose VNFD is
           referenced by the new NSD version but not referenced
           by the old one, terminating/removing those VNFs whose
           VNFD is referenced by the old NSD version but not
           referenced by the new NSD version, modifying
           information of VNF instances to the new applicable
           VNFD provided in the new NSD version.
           A cardinality of 0 indicates that synchronization shall not be done.
         type: boolean
         
  MoveVnfInstanceData:
     description: >
       This type specifies existing VNF instances to be moved from one NS instance (source) to another NS instance
       (destination). The NS instance defined in the Update NS operation indicates the source NS instance and the destination
       NS instance is specified in this data type (referred to targetNsInstanceId). 
       It shall comply with the provisions defined in Table 6.5.3.35-1.
     type: object
     required:
       - targetNsInstanceId
     properties:
       targetNsInstanceId:
         description: >
           Specify the target NS instance where the VNF instances
           are moved to.
         $ref: "SOL005_def.yaml#/definitions/Identifier"
       vnfInstanceId:
         description: >
           Specify the VNF instance that is moved.
         type: array
         items:           
           $ref: "SOL005_def.yaml#/definitions/Identifier"
           
  AddVnffgData:
     description: >
       This type specifies the parameters used for the creation of a new VNFFG instance. 
       It shall comply with the provisions defined in Table 6.5.3.36-1.
     type: object
     required:
       - vnffgdId
       - vnffgName
       - description       
     properties:
       targetNsInstanceId:
         description: >
           Identifier of the VNFFGD used to create this VNFFG
           instance.
         $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd"
       vnffgName:
         description: >
           Human readable name for the VNFFG.
         type: string
       description:
         description: >
           Human readable description for the VNFFG.
         type: string
         
  UpdateVnffgData:
     description: >
       This type specifies the parameters used for the update of an existing VNFFG instance. 
       It shall comply with the provisions defined in Table 6.5.3.37-1.
     type: object
     required:
       - vnffgInfoId
     properties:
       vnffgInfoId:
         description: >
           Identifier of an existing VNFFG to be updated for the NS Instance.
         $ref: "SOL005_def.yaml#/definitions/IdentifierInNs"
       nfp:
         description: >
           Indicate the desired new NFP(s) for a given VNFFG
           after the operations of addition/removal of NS
           components (e.g. VNFs, VLs, etc.) have been
           completed, or indicate the updated or newly created
           NFP classification and selection rule which applied to an existing NFP.
         type: array
         items:           
           $ref: "#/definitions/NfpData"
       nfpInfoId:
         description: >
           Identifier(s) of the NFP to be deleted from a given VNFFG.
         type: array
         items:           
           $ref: "SOL005_def.yaml#/definitions/IdentifierInNs"

  NfpData:
     description: >
       This type contains information used to create or modify NFP instance parameters 
       for the update of an existing VNFFG instance. 
       It shall comply with the provisions defined in Table 6.5.3.38-1.
     type: object      
     properties:
       nfpInfoId:
         description: >
           Identifier of the NFP to be modified. It shall be present
           for modified NFPs and shall be absent for the new NFP.
         $ref: "SOL005_def.yaml#/definitions/IdentifierInNs"
       nfpName:
         description: >
           Human readable name for the NFP. It shall be present
           for the new NFP, and it may be present otherwise.
         type: string
       description:
         description: >
           Human readable description for the NFP. It shall be
           present for the new NFP, and it may be present otherwise.
         type: string
       nsCpHandle:
         description: >
           Identifier(s) of the CPs and SAPs which the NFP passes by. 
           Cardinality can be 0 if only updated or newly created
           NFP classification and selection rule which applied to an
           existing NFP is provided.
         type: array
         items:           
           $ref: "#/definitions/NsCpHandle"
       nfpRule:
         description: >
           NFP classification and selection rule. See note 1.
         $ref: "#/definitions/NfpRule"

  NfpRule:
     description: >
       The NfpRule data type is an expression of the conditions that shall be met 
       in order for the NFP to be applicable to the packet. The condition acts as a flow classifier and 
       it is met only if all the values expressed in the condition are matched
       by those in the packet. It shall comply with the provisions defined in Table 6.5.3.40-1.
     type: object    
     properties:
       etherDestinationAddress:
         description: >
           Indicates a destination Mac address.
         $ref: "SOL005_def.yaml#/definitions/MacAddress"
       etherSourceAddress:
         description: >
           Indicates a source Mac address.
         $ref: "SOL005_def.yaml#/definitions/MacAddress"
       etherType:
         description: >
           Human readable description for the VNFFG.
         type: string
         enum: 
           - IPV4
           - IPV6
       vlanTag:
         description: >
           Indicates a VLAN identifier in an IEEE 802.1Q-2014 
           tag [6] Multiple tags can be included for QinQ stacking. See note.
         type: array
         items:           
           $ref: "SOL005_def.yaml#/definitions/String"
       protocol:
         description: >
           Indicates the L4 protocol, For IPv4 [7] this
           corresponds to the field called "Protocol" to identify
           the next level protocol. For IPv6 [28] this
           corresponds to the field is called the "Next Header" field.
           Permitted values: Any keyword defined in the IANA
           protocol registry [1], e.g.:
           TCP
           UDP
           ICMP
         type: string
         enum: 
           - TCP
           - UDP
           - ICMP           
       dscp:
         description: >
           For IPv4 [7] a string of "0" and "1" digits that
           corresponds to the 6-bit Differentiated Services
           Code Point (DSCP) field of the IP header.
           For IPv6 [28] a string of "0" and "1" digits that
           corresponds to the 6 differentiated services bits of
           the traffic class header field
         type: string
       sourcePortRange:
         description: >
           Indicates a range of source ports
         $ref: "SOL005_def.yaml#/definitions/PortRange"
       destinationPortRange:
         description: >
           Indicates a range of destination ports.
         $ref: "SOL005_def.yaml#/definitions/PortRange"
       sourceIpAddressPrefix:
         description: >
           Indicates the source IP address range in CIDR format.
         $ref: "SOL005_def.yaml#/definitions/IpAddressPrefix"         
       destinationIpAddressPrefix:
         description: >
           Indicates the destination IP address range in CIDR format.
         $ref: "SOL005_def.yaml#/definitions/IpAddressPrefix"
       extendedCriteria:
         description: >
           Indicates values of specific bits in a frame.
         type: array
         items:           
           $ref: "SOL005_def.yaml#/definitions/Mask"
           
  ChangeNsFlavourData:
     description: >
       This type specifies an existing NS instance for which the DF needs to be changed. 
       This specifies the new DF, the instantiationLevel of the new DF that may be used and 
       the additional parameters as input for the flavour change. 
       It shall comply with the provisions defined in Table 6.5.3.39-1.
     type: object
     required:
       - newNsFlavourId    
     properties:
       newNsFlavourId:
         description: >
           Identifier of an existing VNFFG to be updated for the NS Instance.
         $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd"
       instantiationLevelId:
         description: >
           Identifier of the instantiation level of the deployment flavour to be instantiated. 
           If not present, the default instantiation level as declared in the NSD is instantiated.
         $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd"

  AddPnfData:
     description: >
       This type specifies an PNF to be added to the NS instance and the PNF Profile 
       to use for this PNF. It shall comply with the provisions defined in Table 6.5.3.14-1.
     type: object
     required:
       - pnfId
       - pnfName
       - pnfdId  
       - pnfProfileId       
     properties:
       pnfId:
         description: >
           Identifier of the PNF. This identifier is allocated by the OSS/BSS.
         $ref: "SOL005_def.yaml#/definitions/Identifier"
       pnfName:
         description: >
           Name of the PNF
         type: string
       pnfdId:
         description: >
           Identifier of the PNFD on which the PNF is based.
         $ref: "SOL005_def.yaml#/definitions/Identifier" 
       pnfProfileId:
         description: >
           Identifier of related PnfProfile in the NSD on which the PNF is based.
         $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd" 
       cpData:
         description: >
           Address assigned for the PNF external CP(s).
         type: array
         items:           
           $ref: "#/definitions/PnfExtCpData"
         
  PnfExtCpData:
     description: >
       This type represents the configuration data on the external CP of the PNF. 
       It shall comply with the provisions defined in
       Table 6.5.3.16-1.
     type: object
     required:
       - cpProtocolData
     properties:
       cpInstanceI16:
         description: >
           Identifier of the CP. Shall be present for existing CP. 
         $ref: "SOL005_def.yaml#/definitions/IdentifierInPnf"
       cpdId:
         description: >
           Identifier of the Connection Point Descriptor (CPD) for this CP. Shall be present for new CP.
         $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd"
       cpProtocolData:
         description: >
           Address assigned for this CP.
         type: array
         items:           
           $ref: "SOL005_def.yaml#/definitions/CpProtocolData"
           
  ModifyPnfData:
     description: >
       This type specifies an PNF to be modified in the NS instance. 
       It shall comply with the provisions defined in
       Table 6.5.3.15-1.
     type: object
     required:
       - pnfId
     properties:
       pnfId:
         description: >
           Identifier of the PNF. This identifier is allocated by the OSS/BSS. 
         $ref: "SOL005_def.yaml#/definitions/Identifier"
       pnfName:
         description: >
           Name of the PNF.
         type: string
       cpData:
         description: >
           Address assigned for the PNF external CP(s).
         type: array
         items:           
           $ref: "#/definitions/PnfExtCpData"
           
  AffectedVirtualLink:
     description: >
       This type provides information about added, deleted, modified and
       temporary VLs.
     type: object
     required:
       - id
       - virtualLinkDescId
       - changeType
       - networkResource
     properties:
       id: 
         description: >
           Identifier of the virtual link instance, identifying the applicable
           "vnfVirtualLinkResourceInfo" entry in the "VnfInstance" data type.
         $ref: "SOL005_def.yaml#/definitions/IdentifierInVnf"
       virtualLinkDescId:
         description: >
           Identifier of the related VLD in the VNFD.
         $ref: "SOL005_def.yaml#/definitions/IdentifierInVnfd"
       changeType:
         description: >
           Signals the type of change. Permitted values:
           * ADDED
           * REMOVED
           * MODIFIED
           * TEMPORARY
           * LINK_PORT_ADDED
           * LINK_PORT_REMOVED
           For a temporary resource, an AffectedVirtualLink structure exists as
           long as the temporary resource exists.
         type: string
         enum:
           - ADDED
           - REMOVED
           - MODIFIED
           - TEMPORARY
           - LINK_PORT_ADDED
           - LINK_PORT_REMOVED
       networkResource:
         description: >
           Reference to the VirtualNetwork resource. Detailed information is
           (for new and modified resources) or has been (for removed
           resources) available from the VIM.
         $ref: "SOL005_def.yaml#/definitions/ResourceHandle"
       metadata:
         description: >
           Metadata about this resource.
           The content of this attribute shall be a copy of the content of the
           "metadata" attribute of the VnfVirtualLinkResourceInfo structure.
         $ref: "SOL005_def.yaml#/definitions/KeyValuePairs"

  AffectedVirtualStorage:
     description: >
       This type provides information about added, deleted, modified and
       temporary virtual storage resources.
     type: object
     required:
       - id
       - virtualStorageDescId
       - changeType
       - storageResource
     properties:
       id:
         description: >
           Identifier of the storage instance, identifying the applicable
           "virtualStorageResourceInfo" entry in the "VnfInstance" data type.
         $ref: "SOL005_def.yaml#/definitions/IdentifierInVnf"
       virtualStorageDescId:
         description: >
           Identifier of the related VirtualStorage descriptor in the VNFD.
         $ref: "SOL005_def.yaml#/definitions/IdentifierInVnfd"
       changeType:
         description: >
           Signals the type of change. Permitted values:
           * ADDED
           * REMOVED
           * MODIFIED
           * TEMPORARY
           For a temporary resource, an AffectedVirtualStorage structure exists
           as long as the temporary resource exists.
         type: string
         enum:
           - ADDED
           - REMOVED
           - MODIFIED
           - TEMPORARY
       storageResource:
         description: >
           Reference to the VirtualStorage resource. Detailed information is 
           (for new and modified resources) or has been (for removed
           resources) available from the VIM.
         $ref: "SOL005_def.yaml#/definitions/ResourceHandle"
       metadata:
         description: >
           Metadata about this resource.
           The content of this attribute shall be a copy of the content of the
           "metadata" attribute of the VirtualStorageResourceInfo structure.
         $ref: "SOL005_def.yaml#/definitions/KeyValuePairs"
         
  AffectedVnf:
    description: >
      This type provides information about added, deleted and modified VNFs. 
      It shall comply with the provisions in Table 6.5.3.2-1.
    type: object
    required:
      - vnfInstanceId
      - vnfdId
      - vnfProfileId    
    properties:
      vnfInstanceId:
        description: >
          Identifier of the VNF instance. 
        $ref: "SOL005_def.yaml#/definitions/Identifier"
      vnfdId:
        description: >
          Identifier of the VNFD of the VNF Instance.
        $ref: "SOL005_def.yaml#/definitions/Identifier"
      vnfProfileId:
        description: >
          Identifier of the VNF profile of the NSD.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd"
      vnfName:
        description: >
          Name of the VNF Instance.
        type: string
      changeType:
        description: >
          Signals the type of change
          Permitted values:
          - ADD
          - REMOVE
          - INSTANTIATE
          - TERMINATE
          - SCALE
          - CHANGE_FLAVOUR
          - HEAL
          - OPERATE
          - MODIFY_INFORMATION
          - CHANGE_EXTERNAL_VNF_CONNECTIVITY
        type: string
        enum:
          - ADD
          - REMOVE 
          - INSTANTIATE
          - TERMINATE
          - SCALE
          - CHANGE_FLAVOUR
          - HEAL
          - OPERATE           
          - MODIFY_INFORMATION
          - CHANGE_EXTERNAL_VNF_CONNECTIVITY
      changeResult:
        description: >
          Signals the result of change identified by the
          "changeType" attribute.
          Permitted values:
          - COMPLETED
          - ROLLED_BACK
          - FAILED
        type: string
        enum:
          - COMPLETED
          - ROLLED_BACK 
          - FAILED
      changedInfo:
        description: >
          Information about the changed VNF instance
          information, including VNF configurable properties,if applicable.
          When the "changedInfo" attribute is present, 
          either the "changedVnfInfo" attribute or the
          "changedExtConnectivity" attribute or both shall be present.
        type: object
        required:
          - self
        properties:
          changedVnfInfo:
            description: >
              Information about the changed VNF instance
              information, including configurable properties, 
              if applicable.
            $ref: "#/definitions/ModifyVnfInfoData"
          changedExtConnectivity:
            description: >
              Information about changed external connectivity,
              if applicable.
            $ref: "#/definitions/ExtVirtualLinkInfo"

  AffectedPnf:
    description: >
      This type provides information about added, deleted and modified PNFs. 
      It shall comply with the provisions in Table 6.5.3.3-1.
    type: object
    required:
      - pnfId
      - pnfdId
      - pnfProfileId
      - cpInstanceId       
    properties:
      pnfId:
        description: >
          Identifier of the affected PNF. This identifier is
          allocated by the OSS/BSS.
        $ref: "SOL005_def.yaml#/definitions/Identifier"
      pnfdId:
        description: >
          Identifier of the PNFD on which the PNF is based.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd"
      pnfProfileId:
        description: >
          Identifier of the VNF profile of the NSD.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd"
      pnfName:
        description: >
          Name of the PNF.
        type: string
      cpInstanceId:
        description: >
          Identifier of the CP in the scope of the PNF.
        type: array
        items:           
          $ref: "SOL005_def.yaml#/definitions/IdentifierInPnf"        
      changeType:
        description: >
          Signals the type of change.
          Permitted values:
          - ADD
          - REMOVE
          - MODIFY
        type: string
        enum:
          - ADD
          - REMOVE 
          - MODIFY        
      changeResult:
        description: >
          Signals the result of change identified by the
          "changeType" attribute.
          Permitted values:
          - COMPLETED
          - ROLLED_BACK
          - FAILED
        type: string
        enum:
          - COMPLETED
          - ROLLED_BACK 
          - FAILED    
  
  AffectedVl:
    description: >
      This type provides information about added, deleted and modified VLs. 
      It shall comply with the provisions in Table 6.5.3.4-1.
    type: object
    required:
      - nsVirtualLinkInstanceId
      - nsVirtualLinkDescId
      - vlProfileId     
    properties:
      nsVirtualLinkInstanceId:
        description: >
          Identifier of the VL Instance.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInNs"
      nsVirtualLinkDescId:
        description: >
          Identifier of the VLD in the NSD for this VL.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd"
      vlProfileId:
        description: >
          Identifier of the VLD in the NSD for this VL.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd"
      changeType:
        description: >
          Signals the type of change.
          Permitted values:
          - ADD
          - DELETE
          - MODIFY
          - ADD_LINK_PORT
          - REMOVE_LINK_PORT
        type: string
        enum:
          - ADD
          - DELETE 
          - MODIFY 
          - ADD_LINK_PORT
          - REMOVE_LINK_PORT           
      changeResult:
        description: >
          Signals the result of change identified by the
          "changeType" attribute.
          Permitted values:
          - COMPLETED
          - ROLLED_BACK
          - FAILED
        type: string
        enum:
          - COMPLETED
          - ROLLED_BACK 
          - FAILED
          
  AffectedVnffg:
     description: >
       This type provides information about added, deleted and modified VNFFG instances. 
       It shall comply with the
       provisions in Table 6.5.3.5-1.
     type: object
     required:
       - vnffgInstanceId
       - vnffgdId   
     properties:
       vnffgInstanceId:
         description: >
            Identifier of the VNFFG instance.
         $ref: "SOL005_def.yaml#/definitions/IdentifierInNs"
       vnffgdId:
         description: >
           Identifier of the VNFFGD of the VNFFG instance.
         $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd"
       changeType:
         description: >
           Signals the type of change.
           Permitted values:
           - ADD
           - DELETE
           - MODIFY
         type: string
         enum:
           - ADD
           - DELETE 
           - MODIFY         
       changeResult:
         description: >
           Signals the result of change identified by the
           "changeType" attribute.
           Permitted values:
           - COMPLETED
           - ROLLED_BACK
           - FAILED
         type: string
         enum:
           - COMPLETED
           - ROLLED_BACK 
           - FAILED
           
  AffectedNs:
     description: >
       This type provides information about added, deleted and modified nested NSs. 
       It shall comply with the provisions in Table 6.5.3.6-1.
     type: object
     required:
       - nsInstanceId
       - nsdId   
     properties:
       nsInstanceId:
         description: >
            Identifier of the nested NS instance.
         $ref: "SOL005_def.yaml#/definitions/Identifier"
       nsdId:
         description: >
           Identifier of the NSD of the nested NS instance.
         $ref: "SOL005_def.yaml#/definitions/Identifier"
       changeType:
         description: >
           Signals the type of lifecycle change.
           Permitted values:
           - ADD
           - REMOVE
           - INSTANTIATE
           - SCALE
           - UPDATE
           - HEAL
           - TERMINATE
         type: string
         enum:
           - ADD
           - REMOVE 
           - INSTANTIATE         
           - SCALE
           - UPDATE
           - HEAL
           - TERMINATE           
       changeResult:
         description: >
           Signals the result of change identified by the
           "changeType" attribute.
           Permitted values:
           - COMPLETED
           - ROLLED_BACK
           - FAILED
           - PARTIALLY_COMPLETED           
         type: string
         enum:
           - COMPLETED
           - ROLLED_BACK 
           - FAILED 
           - PARTIALLY_COMPLETED

  AffectedSap:
     description: >
       This type provides information about added, deleted and modified SAP of a NS. 
       It shall comply with the provisions in Table 6.5.3.7-1.
     type: object
     required:
       - sapInstanceId
       - sapdId   
     properties:
       sapInstanceId:
         description: >
            Identifier of the nested NS instance.
         $ref: "SOL005_def.yaml#/definitions/Identifier"
       sapdId:
         description: >
           Identifier of the NSD of the nested NS instance.
         $ref: "SOL005_def.yaml#/definitions/Identifier"
       sapName:
         description: >
           Human readable name for the SAP.
         type: string
       changeType:
         description: >
           Signals the type of lifecycle change.
           Permitted values:
           - ADD
           - REMOVE
           - MODIFY
         type: string
         enum:
           - ADD
           - REMOVE 
           - MODIFY
       changeResult:
         description: >
           Signals the result of change identified by the
           "changeType" attribute.
           Permitted values:
           - COMPLETED
           - ROLLED_BACK
           - FAILED
         type: string
         enum:
           - COMPLETED
           - ROLLED_BACK 
           - FAILED
           
  NsLcmOperationStateType:
    description: >
      The enumeration NsLcmOperationStateType shall comply with the provisions defined in Table 6.5.4.4-1.
      Value | Description
      ------|------------
      PROCESSING | The LCM operation is currently in execution.
      COMPLETED | The LCM operation has been completed successfully.
      PARTIALLY_COMPLETED | The LCM operation has been partially completed with accepTable errors.
      FAILED_TEMP | The LCM operation has failed and execution has stopped, but the execution of the operation is not considered to be closed.
      FAILED | The LCM operation has failed and it cannot be retried or rolled back, as it is determined that such action won't succeed.
      OLLING_BACK | The LCM operation is currently being rolled back.
      ROLLED_BACK | The LCM operation has been successfully rolled back, i.e. The state of the VNF prior to the original operation invocation has been restored as closely as possible.
    type: string
    enum:
      - PROCESSING
      - COMPLETED
      - FAILED_TEMP
      - FAILED
      - ROLLING_BACK
      - ROLLED_BACK       
  NsLcmOpType:
     description: >
       The enumeration NsLcmOpType represents those lifecycle operations that trigger a NS lifecycle management operation
       occurrence notification.
       Value | Description
       ------|------------
       INSTANTIATE | Represents the "Instantiate NS" LCM operation.
       SCALE | Represents the "Scale NS" LCM operation.
       UPDATE | Represents the "Update NS" LCM operation.
       TERMINATE | Represents the "Terminate NS" LCM operation.
       HEAL | Represents the "Heal NS" LCM operation.
     type: string
     enum:
       - INSTANTIATE
       - SCALE
       - UPDATE
       - TERMINATE
       - HEAL       
  LccnSubscriptionRequest:
    description: >
      This type represents a subscription request related to notifications 
      about NS lifecycle changes. It shall comply with the
      provisions defined in Table 6.5.2.2-1..
    type: object
    required:
      - callbackUri
    properties:
      filter: 
        description: >
         Filter settings for this subscription, to define the subset
         of all notifications this subscription relates to. A
         particular notification is sent to the subscriber if the filter
         matches, or if there is no filter.
        $ref: "#/definitions/LifecycleChangeNotificationsFilter"
      callbackUri:
        description: >
          The URI of the endpoint to send the notification to.
        $ref: "SOL005_def.yaml#/definitions/Uri"
      authentication:
        description: >
          Authentication parameters to configure the use of Authorization when
          sending notifications corresponding to this subscription, as defined
          in clause 4.5.3.4.
          This attribute shall only be present if the subscriber requires
          authorization of notifications.
        $ref: "SOL005_def.yaml#/definitions/SubscriptionAuthentication"
        
  LccnSubscription:
    description: >
      This type represents a subscription related to notifications about NS lifecycle changes. 
      It shall comply with the provisions defined in Table 6.5.2.4-1.
    type: object
    required:
      - id
      - callbackUri
      - _links
    properties:
      id:
        description: >
          Identifier of this subscription resource.
        $ref: "SOL005_def.yaml#/definitions/Identifier"
      filter:
        description: >
          Filter settings for this subscription, to define the subset of all
          notifications this subscription relates to. A particular
          notification is sent to the subscriber if the filter matches, or if
          there is no filter.
        $ref: "#/definitions/LifecycleChangeNotificationsFilter"
      callbackUri:
        description: >
          The URI of the endpoint to send the notification to.
        $ref: "SOL005_def.yaml#/definitions/Uri"
      _links:
        description: >
          Links to resources related to this resource.
        type: object
        required:
          - self
        properties:
          self:
            description: >
              URI of this resource.
            $ref: "SOL005_def.yaml#/definitions/Link" 
  LifecycleChangeNotificationsFilter:
    description: >
      This type represents a subscription filter related to notifications about 
      NS lifecycle changes. It shall comply with the
      provisions defined in Table 6.5.3.8-1.
      At a particular nesting level in the filter structure, the following applies: 
      All attributes shall match in order for the filter
      to match (logical "and" between different filter attributes). 
      If an attribute is an array, the attribute shall match if at least
      one of the values in the array matches (logical "or" between the values of one filter attribute).
    type: object
    properties:
      nsInstanceSubscriptionFilter:
        description: >
          Filter criteria to select NS instances about which to notify.
        $ref: "#/definitions/NsInstanceSubscriptionFilter"
      notificationTypes:
        description: >
          Match particular notification types.
          Permitted values:
          - NsLcmOperationOccurenceNotification
          - NsIdentifierCreationNotification
          - NsIdentifierDeletionNotification
          - NsChangeNotification
        type: array
        items:
          type: string
          enum:
            - NsLcmOperationOccurenceNotification
            - NsIdentifierCreationNotification
            - NsIdentifierDeletionNotification
            - NsChangeNotification             
      operationTypes:
        description: >
          Match particular NS lifecycle operation types
          for the notification of type
          NsLcmOperationOccurrenceNotification.
          May be present if the "notificationTypes"
          attribute contains the value
          "NsLcmOperationOccurrenceNotification", and
          shall be absent otherwise.
        type: array
        items: 
          $ref: "#/definitions/NsLcmOpType"
      operationStates:
        description: >
          Match particular LCM operation state values as
          reported in notifications of type
          NsLcmOperationOccurrenceNotification.
          May be present if the "notificationTypes"
          attribute contains the value
          "NsLcmOperationOccurrenceNotification", and
          shall be absent otherwise.
        type: array
        items: 
          $ref: "#/definitions/LcmOperationStateType"
      nsComponentTypes:
        description: >
          Match particular NS component types for the
          notification of type NsChangeNotification.
          May be present if the "notificationTypes"
          attribute contains the value "NsChang.
        type: array
        items: 
          $ref: "#/definitions/NsComponentType"
      lcmOpNameImpactingNsComponent:
        description: >
          Match particular LCM operation names for the
          notification of type NsChangeNotification.
          May be present if the "notificationTypes"
          attribute contains the value
          "NsChangeNotification", and shall be absent otherwise.
        type: array
        items: 
          $ref: "#/definitions/LcmOpNameForChangeNotificationType"
      lcmOpOccStatusImpactingNsComponent:
        description: >
          Match particular LCM operation status values
          as reported in notifications of type
          NsChangeNotification.
          May be present if the "notificationTypes"
          attribute contains the value
          "NsChangeNotification", and shall be absent otherwise.
        type: array
        items: 
          $ref: "#/definitions/LcmOpOccStatusForChangeNotificationType"
          
  NsLcmOperationOccurrenceNotification:
    type: object
    required:
      - id
      - nsInstanceId
      - nsLcmOpOccId
      - subscriptionId      
    properties:
      id:
        description: >
          Identifier of this notification. If a notification is sent
          multiple times due to multiple subscriptions, the "id"
          attribute of all these notifications shall have the same value.
        $ref: "SOL005_def.yaml#/definitions/Identifier"
      nsInstanceId:
        description: >
          The identifier of the NS instance affected.
        $ref: "SOL005_def.yaml#/definitions/Identifier"
      nsLcmOpOccId:
        description: >
          The identifier of the NS lifecycle operation occurrence
          associated to the notification.
        $ref: "SOL005_def.yaml#/definitions/Identifier"        
      operation:
        description: >
          The lifecycle operation.
        $ref: "#/definitions/NsLcmOpType"
      notificationType:
        description: >
          Discriminator for the different notification types. Shall be
          set to "NsLcmOperationOccurrenceNotification" for this
          notification type.
        type: string
      subscriptionId:
        description: >
          Identifier of the subscription that this notification relates to.
        $ref: "SOL005_def.yaml#/definitions/Identifier"
      timestamp:
        description: >
          Date-time of the generation of the notification.
        $ref: "SOL005_def.yaml#/definitions/DateTime"
      notificationStatus:
        description: >
          Indicates whether this notification reports about the start
          of a NS lifecycle operation or the result of a NS lifecycle
          operation.
          Permitted values:
          - START: Informs about the start of the NS LCM
          operation occurrence.
          - RESULT: Informs about the final or intermediate
          result of the NS LCM operation occurrence.
        type: string
        enum:
          - START
          - RESULT 
      operationState:
        description: >
          The state of the NS lifecycle operation occurrence.
        $ref: "#/definitions/NsLcmOperationStateType"
      isAutomaticInvocation:
        description: >
          Set to true if this NS LCM operation occurrence has
          been automatically triggered by the NFVO. This occurs
          in case of auto-scaling, auto-healing and when a nested
          NS is modified as a result of an operation on its
          composite NS. Set to false otherwise.
        type: boolean
      affectedVnf:
        description: >
          Information about the VNF instances that were affected
          during the lifecycle operation.
        $ref: "#/definitions/AffectedVnf"
      affectedPnf:
        description: >
          Information about the PNF instances that were affected
          during the lifecycle operation.
        $ref: "#/definitions/AffectedPnf"
      affectedVl:
        description: >
          Information about the VL instances that were affected
          during the lifecycle operation.
        type: array
        items:
          $ref: "#/definitions/AffectedVirtualLink"
      affectedVnffg:
        description: >
          Information about the VNFFG instances that were
          affected during the lifecycle operation.
        type: array
        items:
          $ref: "#/definitions/AffectedVnffg"
      affectedNs:
        description: >
          Information about the SAP instances that were affected
          during the lifecycle operation. See note.
        type: array
        items:
          $ref: "#/definitions/AffectedSap"
      affectedSap:
        description: >
          The lifecycle operation.
        $ref: "#/definitions/NsLcmOpType"
      error:
        description: >
          Details of the latest error, if one has occurred during
          executing the LCM operation (see clause 4.3.5). Shall
          be present if operationState is "FAILED_TEMP" or
          "FAILED", and shall be absent otherwise.
        $ref: "SOL005_def.yaml#/definitions/ProblemDetails"
      _links:
        description: >
          Links to resources related to this notification.
        $ref: "#/definitions/LccnLinks"
        
  NsIdentifierCreationNotification:
    type: object
    required:
      - subscriptionId
      - nsInstanceId     
    properties:
      notificationType:
        description: >
           Discriminator for the different notification types.
           Shall be set to "NsIdentifierDeletionNotification" for this
           notification type.
        type: string
      subscriptionId:
        description: >
           Identifier of the subscription that this notification relates to.
        $ref: "SOL005_def.yaml#/definitions/Identifier"        
      timestamp:
        description: >
          Date-time of the generation of the notification.
        $ref: "SOL005_def.yaml#/definitions/DateTime"
      nsInstanceId:
        description: >
           The created NS instance identifier
        $ref: "SOL005_def.yaml#/definitions/Identifier"        
      _links:
        description: >
          Links to resources related to this notification.
        $ref: "#/definitions/LccnLinks"       

  NsIdentifierDeletionNotification:
    type: object
    required:
      - subscriptionId
      - nsInstanceId  
    properties:
      notificationType:
        description: >
          Discriminator for the different notification types.
          Shall be set to "NsIdentifierDeletionNotification" for this
          notification type.
        type: string
      subscriptionId:
        description: >
           Identifier of the subscription that this notification relates to.
        $ref: "SOL005_def.yaml#/definitions/Identifier"        
      timestamp:
        description: >
          Date-time of the generation of the notification.
        $ref: "SOL005_def.yaml#/definitions/DateTime"
      nsInstanceId:
        description: >
           The created NS instance identifier
        $ref: "SOL005_def.yaml#/definitions/Identifier"        
      _links:
        description: >
          Links to resources related to this notification.
        $ref: "#/definitions/LccnLinks"
        
  NsScaleInfo:
    description: >
      This type represents the target NS Scale level for each NS scaling aspect of the current deployment flavor.
    type: object
    required:
      - nsScalingAspectId
      - nsScaleLevelId
    properties:
      nsScalingAspectId:
        description: >
          Identifier of the NS scaling aspect.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd"
      nsScaleLevelId:
        description: >
          Identifier of the NS scale level.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd"
  ScaleNsData:
    description: >
      This type represents the information to scale a NS.
    type: object
    properties:
      vnfInstanceToBeAdded:
        description: >
          An existing VNF instance to be added to the NS
          instance as part of the scaling operation. If
          needed, the VNF Profile to be used for this VNF
          instance may also be provided.
        type: array
        items:           
          $ref: "#/definitions/VnfInstanceData"        
      vnfInstanceToBeRemoved:
        description: >
          The VNF instance to be removed from the NS
          instance as part of the scaling operation.
        type: array
        items:           
          $ref: "SOL005_def.yaml#/definitions/Identifier"         
      scaleNsByStepsData:
        description: >
          The information used to scale an NS instance by
          one or more scaling steps.
        $ref: "#/definitions/ScaleNsByStepsData"  
      scaleNsToLevelData:
        description: >
          The information used to scale an NS instance to a target size.
        $ref: "#/definitions/ScaleNsToLevelData"  
      additionalParamsForNs:
        description: >
          Allows the OSS/BSS to provide additional
          parameter(s) at the NS level necessary for the
          NS scaling (as opposed to the VNF level, which is
          covered in additionalParamForVnf).
        $ref: "#/definitions/ParamsForVnf"  
      additionalParamsForVnf:
        description: >
          Allows the OSS/BSS to provide additional
          parameter(s) per VNF instance (as opposed to
          the NS level, which is covered in
          additionalParamforNs). This is for VNFs that are
          to be created by the NFVO as part of the NS
          scaling and not for existing VNF that are covered
          by the scaleVnfData.
        type: array
        items:           
          $ref: "#/definitions/ParamsForVnf"           
      locationConstraints:
        description: >
          The location constraints for the VNF to be
          instantiated as part of the NS scaling.
          An example can be a constraint for the VNF to be
          in a specific geographic location.
        type: array
        items:           
          $ref: "#/definitions/VnfLocationConstraint"         

  ScaleVnfData:
    description: >
      This type represents defines the information to scale a VNF instance 
      to a given level, or to scale a VNF instance by steps.
    type: object
    required:
      - vnfInstanceid
      - scaleVnfType  
    properties:
      vnfInstanceid:
        description: >
          Identifier of the VNF instance being scaled.
        $ref: "SOL005_def.yaml#/definitions/Identifier"           
      scaleVnfType:
        description: >
          Type of the scale VNF operation requested.
          Allowed values are:
          - SCALE_OUT
          - SCALE_IN
          - SCALE_TO_INSTANTIATION_LEVEL
          - SCALE_TO_SCALE_LEVEL(S)
          The set of types actually supported depends on the
          capabilities of the VNF being managed.
        type: string
        enum: 
          - SCALE_OUT
          - SCALE_IN         
          - SCALE_TO_INSTANTIATION_LEVEL         
          - SCALE_TO_SCALE_LEVEL(S)    
      scaleToLevelData:
        description: >
          The information used for scaling to a given level.
        $ref: "#/definitions/ScaleToLevelData"  
      scaleByStepData:
        description: >
          The information used for scaling by steps.
        $ref: "#/definitions/ScaleByStepData"         
        
  ScaleNsByStepsData:
    description: >
      This type represents the information used to scale an NS instance by one or more scaling steps, with respect to a
      particular NS scaling aspect. Performing a scaling step means increasing/decreasing the capacity of an NS instance in a
      discrete manner, i.e. moving from one NS scale level to another. The NS scaling aspects and their corresponding NS
      scale levels applicable to the NS instance are declared in the NSD.
    type: object
    required:
      - scalingDirection
      - aspectId
    properties:
      scalingDirection:
        description: >
          The scaling direction. Possible values are:
          - SCALE_IN
          - SCALE_OUT.
        type: string
        enum:
          - SCALE_IN
          - SCALE_OUT
      aspectId:
        description: >
          The aspect of the NS that is requested to be scaled, as
          declared in the NSD.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd"
      numberOfSteps:
        description: >
          The number of scaling steps to be performed. Defaults to 1.
        type: integer
        default: 1

  ScaleNsToLevelData:
    description: >
      This type represents the information used to scale an NS instance to a target size. The target size is either expressed as
      an NS instantiation level or as a list of NS scale levels, one per NS scaling aspect, of the current DF. The NS
      instantiation levels, the NS scaling aspects and their corresponding NS scale levels applicable to the NS instance are
      declared in the NSD.
    type: object
    properties:
      nsInstantiationLevel:
        description: >
          Identifier of the target NS instantiation level of the
          current DF to which the NS instance is requested to be scaled.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInNsd"
      nsScaleInfo:
        description: >
          For each NS scaling aspect of the current DF, defines
          the target NS scale level to which the NS instance is to be scaled.
        type: array
        items:           
          $ref: "#/definitions/NsScaleInfo"
          
  ScaleToLevelData:
    description: >
      This type describes the information used to scale a VNF instance to a target size. The target size is either expressed as
      an instantiation level of that DF as defined in the VNFD, or given as a list of scale levels, one per scaling aspect of that
      DF. Instantiation levels and scaling aspects are declared in the VNFD. The NFVO shall then invoke the
      ScaleVnfToLevel operation towards the appropriate VNFM..
    type: object
    properties:
      vnfInstantiationLevelId:
        description: >
          Identifier of the target instantiation level of the current
          deployment flavor to which the VNF is requested to be scaled.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInVnfd"
      vnfScaleInfo:
        description: >
          For each scaling aspect of the current deployment
          flavor, indicates the target scale level to which the VNF
          is to be scaled.
        type: array
        items:           
          $ref: "#/definitions/VnfScaleInfo"       
      additionalParams:
        description: >
          Additional parameters passed by the NFVO as input to
          the scaling process, specific to the VNF being scaled.
        $ref: "SOL005_def.yaml#/definitions/KeyValuePairs" 

  ScaleByStepData:
    description: >
      This type describes the information to scale a VNF instance by steps. 
      The NFVO shall then invoke the Scale VNF
      operation towards the appropriate VNFM.
    type: object
    required:
      - aspectId
    properties:
      aspectId:
        description: >
          Identifier of (reference to) the aspect of the VNF that is
          requested to be scaled, as declared in the VNFD.
        $ref: "SOL005_def.yaml#/definitions/IdentifierInVnfd"
      numberOfSteps:
        description: >
          Number of scaling steps. It shall be a positive number.
          Defaults to 1.
          The VNF provider defines in the VNFD whether or not a
          particular VNF supports performing more than one step
          at a time. Such a property in the VNFD applies for all
          instances of a particular VNF.
        type: integer
        default: 1              
      additionalParams:
        description: >
          Additional parameters passed by the NFVO as input to
          the scaling process, specific to the VNF instance being scaled.
        $ref: "SOL005_def.yaml#/definitions/KeyValuePairs"

  NsInstanceSubscriptionFilter:
    description: >
      This type represents subscription filter criteria to match NS instances. 
      It shall comply with the provisions defined in
      Table 4.4.1.5-1.
    type: object
    properties:
      nsdIds:
        description: >
          If present, match NS instances that were created
          based on a NSD identified by one of the nsdId
          values listed in this attribute.
        type: array
        items: 
          $ref: "SOL005_def.yaml#/definitions/Identifier"        
      vnfdIds:
        description: >
          If present, match NS instances that contain VNF
          instances that were created based on a VNFD
          identified by one of the vnfdId values listed in
          this attribute.
        type: array
        items: 
          $ref: "SOL005_def.yaml#/definitions/Identifier"           
      pnfdIds:
        description: >
          If present, match NS instances that contain
          PNFs that are represented by a PNFD identified
          by one of the pnfdId values listed in this attribute.
        type: array
        items: 
          $ref: "SOL005_def.yaml#/definitions/Identifier"    
      nsInstanceIds:
        description: >
          If present, match NS instances with an instance
          identifier listed in this attribute.
        type: array
        items: 
          $ref: "SOL005_def.yaml#/definitions/Identifier"
      nsInstanceNames:
        description: >
          If present, match NS instances with a NS
          Instance Name listed in this attribute.
        type: array
        items: 
          $ref: "SOL005_def.yaml#/definitions/String"
          
  LcmOperationStateType:
    description: >
      Value | Description
      ------|------------
      PROCESSING | The LCM operation is currently in execution.
      COMPLETED | The LCM operation has been completed successfully.
      PARTIALLY_COMPLETED | The LCM operation has been partially completed with accepTable errors.
      FAILED_TEMP | The LCM operation has failed and execution has stopped, but the execution of the operation is not considered to be closed.
      FAILED | The LCM operation has failed and it cannot be retried or rolled back, as it is determined that such action will not succeed.
      OLLING_BACK | The LCM operation is currently being rolled back.
      ROLLED_BACK | The LCM operation has been successfully rolled back, i.e. The state of the NS prior to the original operation invocation has been restored as closely as possible.
    type: string
    enum:
      - PROCESSING
      - COMPLETED
      - PARTIALLY_COMPLETED
      - FAILED_TEMP
      - FAILED
      - ROLLING_BACK
      - ROLLED_BACK
      
  NsComponentType:
    description: >
      The enumeration NsComponentType represents the NS component type. It shall comply with the provisions defined in Table 6.5.4.5-1.
      Value | Description
      ------|------------
      VNF | Represents the impacted NS component is a VNF.
      PNF | Represents the impacted NS component is a PNF.
      NS | Represents the impacted NS component is a nested NS.
    type: string
    enum:
      - VNF
      - PNF
      - NS      
  LcmOpNameForChangeNotificationType:
    description: >
      The enumeration LcmOpNameForChangeNotificationType represents the name of the lifecycle operation that impacts the NS component and trigger an NS change notification. It shall comply with the provisions defined in Table 6.5.4.6-1.
      Value | Description
      ------|------------
      VNF_INSTANTIATE | Represents the "Instantiate VNF" LCM operation.
      VNF_SCALE | Represents the "Scale VNF" LCM operation.
      VNF_SCALE_TO_LEVEL | Represents the "Scale VNF to Level" LCM operation.
      VNF_CHANGE_FLAVOUR | Represents the "Change VNF Flavor" LCM operation.
      VNF_TERMINATE | Represents the "Terminate VNF" LCM operation.
      VNF_HEAL | Represents the "Heal VNF" LCM operation.
      VNF_OPERATE | Represents the "Operate VNF" LCM operation.
      VNF_CHANGE_EXT_CONN | Represents the "Change external VNF connectivity" LCM operation.
      VNF_MODIFY_INFO | Represents the "Modify VNF Information" LCM operation.           
      NS_INSTANTIATE | Represents the "Instantiate NS" LCM operation
      NS_SCALE | Represents the "Scale NS" LCM operation.
      NS_UPDATE | Represents the "Update NS" LCM operation.
      NS_TERMINATE | Represents the "Terminate NS" LCM operation.
      NS_HEAL | Represents the "Heal NS" LCM operation.
    type: string
    enum:
      - VNF_INSTANTIATE
      - VNF_SCALE
      - VNF_SCALE_TO_LEVEL      
      - VNF_CHANGE_FLAVOUR
      - VNF_TERMINATE
      - VNF_HEAL
      - VNF_OPERATE
      - VNF_CHANGE_EXT_CONN
      - VNF_MODIFY_INFO
      - NS_INSTANTIATE
      - NS_SCALE
      - NS_UPDATE      
      - NS_TERMINATE
      - NS_HEAL
  LcmOpOccStatusForChangeNotificationType:
    description: >
      The enumeration LcmOpOccStatusForChangeNotificationType represents the status of the lifecycle management
      operation occurrence that impacts the NS component and triggers an NS change notification. It shall comply with the
      provisions defined in Table 6.5.4.7-1.
      Value | Description
      ------|------------
      START | The impact on the NS component is identified.
      COMPLETED | The impact on the NS component stops and related lifecycle operation completes successfully.
      PARTIALLY_COMPLETED | The impact on the NS component stops and related lifecycle operation partially completes. Inconsistency state may exist on the NS component.
      FAILED | The impact on the NS component stops and related lifecycle operation fails. Inconsistency state may exist for the NS component.
      ROLLED_BACK | The impact on the NS component stops and related lifecycle operation is rolled back.
    type: string
    enum:
      - START
      - COMPLETED
      - PARTIALLY_COMPLETED      
      - FAILED
      - ROLLED_BACK